// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/essys/streaming.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package essys_middle;

@kotlin.jvm.JvmName("-initializefileInfo")
public inline fun fileInfo(block: essys_middle.FileInfoKt.Dsl.() -> kotlin.Unit): essys_middle.Streaming.FileInfo =
  essys_middle.FileInfoKt.Dsl._create(essys_middle.Streaming.FileInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `essys_middle.FileInfo`
 */
public object FileInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: essys_middle.Streaming.FileInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: essys_middle.Streaming.FileInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): essys_middle.Streaming.FileInfo = _builder.build()

    /**
     * `optional string file_name = 1;`
     */
    public var fileName: kotlin.String
      @JvmName("getFileName")
      get() = _builder.getFileName()
      @JvmName("setFileName")
      set(value) {
        _builder.setFileName(value)
      }
    /**
     * `optional string file_name = 1;`
     */
    public fun clearFileName() {
      _builder.clearFileName()
    }
    /**
     * `optional string file_name = 1;`
     * @return Whether the fileName field is set.
     */
    public fun hasFileName(): kotlin.Boolean {
      return _builder.hasFileName()
    }

    /**
     * `optional string file_path = 2;`
     */
    public var filePath: kotlin.String
      @JvmName("getFilePath")
      get() = _builder.getFilePath()
      @JvmName("setFilePath")
      set(value) {
        _builder.setFilePath(value)
      }
    /**
     * `optional string file_path = 2;`
     */
    public fun clearFilePath() {
      _builder.clearFilePath()
    }
    /**
     * `optional string file_path = 2;`
     * @return Whether the filePath field is set.
     */
    public fun hasFilePath(): kotlin.Boolean {
      return _builder.hasFilePath()
    }

    /**
     * `optional double start_of_absolute_time = 11;`
     */
    public var startOfAbsoluteTime: kotlin.Double
      @JvmName("getStartOfAbsoluteTime")
      get() = _builder.getStartOfAbsoluteTime()
      @JvmName("setStartOfAbsoluteTime")
      set(value) {
        _builder.setStartOfAbsoluteTime(value)
      }
    /**
     * `optional double start_of_absolute_time = 11;`
     */
    public fun clearStartOfAbsoluteTime() {
      _builder.clearStartOfAbsoluteTime()
    }
    /**
     * `optional double start_of_absolute_time = 11;`
     * @return Whether the startOfAbsoluteTime field is set.
     */
    public fun hasStartOfAbsoluteTime(): kotlin.Boolean {
      return _builder.hasStartOfAbsoluteTime()
    }

    /**
     * `optional double end_of_absolute_time = 12;`
     */
    public var endOfAbsoluteTime: kotlin.Double
      @JvmName("getEndOfAbsoluteTime")
      get() = _builder.getEndOfAbsoluteTime()
      @JvmName("setEndOfAbsoluteTime")
      set(value) {
        _builder.setEndOfAbsoluteTime(value)
      }
    /**
     * `optional double end_of_absolute_time = 12;`
     */
    public fun clearEndOfAbsoluteTime() {
      _builder.clearEndOfAbsoluteTime()
    }
    /**
     * `optional double end_of_absolute_time = 12;`
     * @return Whether the endOfAbsoluteTime field is set.
     */
    public fun hasEndOfAbsoluteTime(): kotlin.Boolean {
      return _builder.hasEndOfAbsoluteTime()
    }

    /**
     * `optional int64 start_of_run_time = 13;`
     */
    public var startOfRunTime: kotlin.Long
      @JvmName("getStartOfRunTime")
      get() = _builder.getStartOfRunTime()
      @JvmName("setStartOfRunTime")
      set(value) {
        _builder.setStartOfRunTime(value)
      }
    /**
     * `optional int64 start_of_run_time = 13;`
     */
    public fun clearStartOfRunTime() {
      _builder.clearStartOfRunTime()
    }
    /**
     * `optional int64 start_of_run_time = 13;`
     * @return Whether the startOfRunTime field is set.
     */
    public fun hasStartOfRunTime(): kotlin.Boolean {
      return _builder.hasStartOfRunTime()
    }

    /**
     * `optional int64 end_of_run_time = 14;`
     */
    public var endOfRunTime: kotlin.Long
      @JvmName("getEndOfRunTime")
      get() = _builder.getEndOfRunTime()
      @JvmName("setEndOfRunTime")
      set(value) {
        _builder.setEndOfRunTime(value)
      }
    /**
     * `optional int64 end_of_run_time = 14;`
     */
    public fun clearEndOfRunTime() {
      _builder.clearEndOfRunTime()
    }
    /**
     * `optional int64 end_of_run_time = 14;`
     * @return Whether the endOfRunTime field is set.
     */
    public fun hasEndOfRunTime(): kotlin.Boolean {
      return _builder.hasEndOfRunTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun essys_middle.Streaming.FileInfo.copy(block: `essys_middle`.FileInfoKt.Dsl.() -> kotlin.Unit): essys_middle.Streaming.FileInfo =
  `essys_middle`.FileInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

