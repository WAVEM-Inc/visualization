// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/essys/mobileye.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package essys_middle;

@kotlin.jvm.JvmName("-initializemobileyeData")
public inline fun mobileyeData(block: essys_middle.MobileyeDataKt.Dsl.() -> kotlin.Unit): essys_middle.Mobileye.MobileyeData =
  essys_middle.MobileyeDataKt.Dsl._create(essys_middle.Mobileye.MobileyeData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `essys_middle.MobileyeData`
 */
public object MobileyeDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: essys_middle.Mobileye.MobileyeData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: essys_middle.Mobileye.MobileyeData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): essys_middle.Mobileye.MobileyeData = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PerceptionObstacleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     */
     public val perceptionObstacle: com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPerceptionObstacleList()
      )
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param value The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.add(value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      _builder.addPerceptionObstacle(value)
    }
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param value The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPerceptionObstacle")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.plusAssign(value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      add(value)
    }
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param values The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.addAll(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>) {
      _builder.addAllPerceptionObstacle(values)
    }
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param values The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPerceptionObstacle")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param index The index to set the value at.
     * @param value The perceptionObstacle to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPerceptionObstacle")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.set(index: kotlin.Int, value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      _builder.setPerceptionObstacle(index, value)
    }
    /**
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.clear() {
      _builder.clearPerceptionObstacle()
    }


    /**
     * `optional .essys_middle.LDWAvailability left_ldw_availability = 2;`
     */
    public var leftLdwAvailability: essys_middle.Mobileye.LDWAvailability
      @JvmName("getLeftLdwAvailability")
      get() = _builder.getLeftLdwAvailability()
      @JvmName("setLeftLdwAvailability")
      set(value) {
        _builder.setLeftLdwAvailability(value)
      }
    /**
     * `optional .essys_middle.LDWAvailability left_ldw_availability = 2;`
     */
    public fun clearLeftLdwAvailability() {
      _builder.clearLeftLdwAvailability()
    }
    /**
     * `optional .essys_middle.LDWAvailability left_ldw_availability = 2;`
     * @return Whether the leftLdwAvailability field is set.
     */
    public fun hasLeftLdwAvailability(): kotlin.Boolean {
      return _builder.hasLeftLdwAvailability()
    }

    /**
     * `optional .essys_middle.LDWAvailability right_ldw_availability = 3;`
     */
    public var rightLdwAvailability: essys_middle.Mobileye.LDWAvailability
      @JvmName("getRightLdwAvailability")
      get() = _builder.getRightLdwAvailability()
      @JvmName("setRightLdwAvailability")
      set(value) {
        _builder.setRightLdwAvailability(value)
      }
    /**
     * `optional .essys_middle.LDWAvailability right_ldw_availability = 3;`
     */
    public fun clearRightLdwAvailability() {
      _builder.clearRightLdwAvailability()
    }
    /**
     * `optional .essys_middle.LDWAvailability right_ldw_availability = 3;`
     * @return Whether the rightLdwAvailability field is set.
     */
    public fun hasRightLdwAvailability(): kotlin.Boolean {
      return _builder.hasRightLdwAvailability()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun essys_middle.Mobileye.MobileyeData.copy(block: `essys_middle`.MobileyeDataKt.Dsl.() -> kotlin.Unit): essys_middle.Mobileye.MobileyeData =
  `essys_middle`.MobileyeDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

