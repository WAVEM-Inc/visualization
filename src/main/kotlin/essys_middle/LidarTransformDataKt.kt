// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/essys/lidar_cali.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package essys_middle;

@kotlin.jvm.JvmName("-initializelidarTransformData")
public inline fun lidarTransformData(block: essys_middle.LidarTransformDataKt.Dsl.() -> kotlin.Unit): essys_middle.LidarCali.LidarTransformData =
  essys_middle.LidarTransformDataKt.Dsl._create(essys_middle.LidarCali.LidarTransformData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `essys_middle.LidarTransformData`
 */
public object LidarTransformDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: essys_middle.LidarCali.LidarTransformData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: essys_middle.LidarCali.LidarTransformData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): essys_middle.LidarCali.LidarTransformData = _builder.build()

    /**
     * `optional string lidar_id = 1;`
     */
    public var lidarId: kotlin.String
      @JvmName("getLidarId")
      get() = _builder.getLidarId()
      @JvmName("setLidarId")
      set(value) {
        _builder.setLidarId(value)
      }
    /**
     * `optional string lidar_id = 1;`
     */
    public fun clearLidarId() {
      _builder.clearLidarId()
    }
    /**
     * `optional string lidar_id = 1;`
     * @return Whether the lidarId field is set.
     */
    public fun hasLidarId(): kotlin.Boolean {
      return _builder.hasLidarId()
    }

    /**
     * `optional .essys_middle.TranslationMatrix translation = 2;`
     */
    public var translation: essys_middle.LidarCali.TranslationMatrix
      @JvmName("getTranslation")
      get() = _builder.getTranslation()
      @JvmName("setTranslation")
      set(value) {
        _builder.setTranslation(value)
      }
    /**
     * `optional .essys_middle.TranslationMatrix translation = 2;`
     */
    public fun clearTranslation() {
      _builder.clearTranslation()
    }
    /**
     * `optional .essys_middle.TranslationMatrix translation = 2;`
     * @return Whether the translation field is set.
     */
    public fun hasTranslation(): kotlin.Boolean {
      return _builder.hasTranslation()
    }
    public val LidarTransformDataKt.Dsl.translationOrNull: essys_middle.LidarCali.TranslationMatrix?
      get() = _builder.translationOrNull

    /**
     * `optional .essys_middle.RotationMatrix rotation = 3;`
     */
    public var rotation: essys_middle.LidarCali.RotationMatrix
      @JvmName("getRotation")
      get() = _builder.getRotation()
      @JvmName("setRotation")
      set(value) {
        _builder.setRotation(value)
      }
    /**
     * `optional .essys_middle.RotationMatrix rotation = 3;`
     */
    public fun clearRotation() {
      _builder.clearRotation()
    }
    /**
     * `optional .essys_middle.RotationMatrix rotation = 3;`
     * @return Whether the rotation field is set.
     */
    public fun hasRotation(): kotlin.Boolean {
      return _builder.hasRotation()
    }
    public val LidarTransformDataKt.Dsl.rotationOrNull: essys_middle.LidarCali.RotationMatrix?
      get() = _builder.rotationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun essys_middle.LidarCali.LidarTransformData.copy(block: `essys_middle`.LidarTransformDataKt.Dsl.() -> kotlin.Unit): essys_middle.LidarCali.LidarTransformData =
  `essys_middle`.LidarTransformDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val essys_middle.LidarCali.LidarTransformDataOrBuilder.translationOrNull: essys_middle.LidarCali.TranslationMatrix?
  get() = if (hasTranslation()) getTranslation() else null

public val essys_middle.LidarCali.LidarTransformDataOrBuilder.rotationOrNull: essys_middle.LidarCali.RotationMatrix?
  get() = if (hasRotation()) getRotation() else null

