// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/essys/mobileye.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package essys_middle;

@kotlin.jvm.JvmName("-initializelaneData")
public inline fun laneData(block: essys_middle.LaneDataKt.Dsl.() -> kotlin.Unit): essys_middle.Mobileye.LaneData =
  essys_middle.LaneDataKt.Dsl._create(essys_middle.Mobileye.LaneData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `essys_middle.LaneData`
 */
public object LaneDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: essys_middle.Mobileye.LaneData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: essys_middle.Mobileye.LaneData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): essys_middle.Mobileye.LaneData = _builder.build()

    /**
     * `optional .essys_middle.Direction direction = 1;`
     */
    public var direction: essys_middle.Mobileye.Direction
      @JvmName("getDirection")
      get() = _builder.getDirection()
      @JvmName("setDirection")
      set(value) {
        _builder.setDirection(value)
      }
    /**
     * `optional .essys_middle.Direction direction = 1;`
     */
    public fun clearDirection() {
      _builder.clearDirection()
    }
    /**
     * `optional .essys_middle.Direction direction = 1;`
     * @return Whether the direction field is set.
     */
    public fun hasDirection(): kotlin.Boolean {
      return _builder.hasDirection()
    }

    /**
     * ```
     * -40 ~ 40
     * ```
     *
     * `optional double distance = 2;`
     */
    public var distance: kotlin.Double
      @JvmName("getDistance")
      get() = _builder.getDistance()
      @JvmName("setDistance")
      set(value) {
        _builder.setDistance(value)
      }
    /**
     * ```
     * -40 ~ 40
     * ```
     *
     * `optional double distance = 2;`
     */
    public fun clearDistance() {
      _builder.clearDistance()
    }
    /**
     * ```
     * -40 ~ 40
     * ```
     *
     * `optional double distance = 2;`
     * @return Whether the distance field is set.
     */
    public fun hasDistance(): kotlin.Boolean {
      return _builder.hasDistance()
    }

    /**
     * ```
     * 0 ~ 3
     * ```
     *
     * `optional uint32 confidence = 3;`
     */
    public var confidence: kotlin.Int
      @JvmName("getConfidence")
      get() = _builder.getConfidence()
      @JvmName("setConfidence")
      set(value) {
        _builder.setConfidence(value)
      }
    /**
     * ```
     * 0 ~ 3
     * ```
     *
     * `optional uint32 confidence = 3;`
     */
    public fun clearConfidence() {
      _builder.clearConfidence()
    }
    /**
     * ```
     * 0 ~ 3
     * ```
     *
     * `optional uint32 confidence = 3;`
     * @return Whether the confidence field is set.
     */
    public fun hasConfidence(): kotlin.Boolean {
      return _builder.hasConfidence()
    }

    /**
     * `optional .essys_middle.LaneType lane_type = 4;`
     */
    public var laneType: essys_middle.Mobileye.LaneType
      @JvmName("getLaneType")
      get() = _builder.getLaneType()
      @JvmName("setLaneType")
      set(value) {
        _builder.setLaneType(value)
      }
    /**
     * `optional .essys_middle.LaneType lane_type = 4;`
     */
    public fun clearLaneType() {
      _builder.clearLaneType()
    }
    /**
     * `optional .essys_middle.LaneType lane_type = 4;`
     * @return Whether the laneType field is set.
     */
    public fun hasLaneType(): kotlin.Boolean {
      return _builder.hasLaneType()
    }

    /**
     * `optional double lane_curvature = 5;`
     */
    public var laneCurvature: kotlin.Double
      @JvmName("getLaneCurvature")
      get() = _builder.getLaneCurvature()
      @JvmName("setLaneCurvature")
      set(value) {
        _builder.setLaneCurvature(value)
      }
    /**
     * `optional double lane_curvature = 5;`
     */
    public fun clearLaneCurvature() {
      _builder.clearLaneCurvature()
    }
    /**
     * `optional double lane_curvature = 5;`
     * @return Whether the laneCurvature field is set.
     */
    public fun hasLaneCurvature(): kotlin.Boolean {
      return _builder.hasLaneCurvature()
    }

    /**
     * `optional double lane_heading = 6;`
     */
    public var laneHeading: kotlin.Double
      @JvmName("getLaneHeading")
      get() = _builder.getLaneHeading()
      @JvmName("setLaneHeading")
      set(value) {
        _builder.setLaneHeading(value)
      }
    /**
     * `optional double lane_heading = 6;`
     */
    public fun clearLaneHeading() {
      _builder.clearLaneHeading()
    }
    /**
     * `optional double lane_heading = 6;`
     * @return Whether the laneHeading field is set.
     */
    public fun hasLaneHeading(): kotlin.Boolean {
      return _builder.hasLaneHeading()
    }

    /**
     * `optional double pitch_angle = 7;`
     */
    public var pitchAngle: kotlin.Double
      @JvmName("getPitchAngle")
      get() = _builder.getPitchAngle()
      @JvmName("setPitchAngle")
      set(value) {
        _builder.setPitchAngle(value)
      }
    /**
     * `optional double pitch_angle = 7;`
     */
    public fun clearPitchAngle() {
      _builder.clearPitchAngle()
    }
    /**
     * `optional double pitch_angle = 7;`
     * @return Whether the pitchAngle field is set.
     */
    public fun hasPitchAngle(): kotlin.Boolean {
      return _builder.hasPitchAngle()
    }

    /**
     * `optional double yaw_angle = 8;`
     */
    public var yawAngle: kotlin.Double
      @JvmName("getYawAngle")
      get() = _builder.getYawAngle()
      @JvmName("setYawAngle")
      set(value) {
        _builder.setYawAngle(value)
      }
    /**
     * `optional double yaw_angle = 8;`
     */
    public fun clearYawAngle() {
      _builder.clearYawAngle()
    }
    /**
     * `optional double yaw_angle = 8;`
     * @return Whether the yawAngle field is set.
     */
    public fun hasYawAngle(): kotlin.Boolean {
      return _builder.hasYawAngle()
    }

    /**
     * `optional .essys_middle.LDWAvailability ldw_availability = 9;`
     */
    public var ldwAvailability: essys_middle.Mobileye.LDWAvailability
      @JvmName("getLdwAvailability")
      get() = _builder.getLdwAvailability()
      @JvmName("setLdwAvailability")
      set(value) {
        _builder.setLdwAvailability(value)
      }
    /**
     * `optional .essys_middle.LDWAvailability ldw_availability = 9;`
     */
    public fun clearLdwAvailability() {
      _builder.clearLdwAvailability()
    }
    /**
     * `optional .essys_middle.LDWAvailability ldw_availability = 9;`
     * @return Whether the ldwAvailability field is set.
     */
    public fun hasLdwAvailability(): kotlin.Boolean {
      return _builder.hasLdwAvailability()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun essys_middle.Mobileye.LaneData.copy(block: `essys_middle`.LaneDataKt.Dsl.() -> kotlin.Unit): essys_middle.Mobileye.LaneData =
  `essys_middle`.LaneDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

