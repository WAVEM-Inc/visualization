// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/perception/proto/perception_obstacle.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.perception;

@kotlin.jvm.JvmName("-initializeperceptionObstacle")
public inline fun perceptionObstacle(block: apollo.perception.PerceptionObstacleKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle =
  apollo.perception.PerceptionObstacleKt.Dsl._create(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.perception.PerceptionObstacle`
 */
public object PerceptionObstacleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle = _builder.build()

    /**
     * ```
     * obstacle ID.
     * ```
     *
     * `optional int32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * obstacle ID.
     * ```
     *
     * `optional int32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * ```
     * obstacle ID.
     * ```
     *
     * `optional int32 id = 1;`
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }

    /**
     * ```
     * obstacle position in the world coordinate system.
     * ```
     *
     * `optional .apollo.common.Point3D position = 2;`
     */
    public var position: apollo.common.Geometry.Point3D
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * ```
     * obstacle position in the world coordinate system.
     * ```
     *
     * `optional .apollo.common.Point3D position = 2;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * ```
     * obstacle position in the world coordinate system.
     * ```
     *
     * `optional .apollo.common.Point3D position = 2;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }
    public val PerceptionObstacleKt.Dsl.positionOrNull: apollo.common.Geometry.Point3D?
      get() = _builder.positionOrNull

    /**
     * ```
     * heading in the world coordinate system.
     * ```
     *
     * `optional double theta = 3;`
     */
    public var theta: kotlin.Double
      @JvmName("getTheta")
      get() = _builder.getTheta()
      @JvmName("setTheta")
      set(value) {
        _builder.setTheta(value)
      }
    /**
     * ```
     * heading in the world coordinate system.
     * ```
     *
     * `optional double theta = 3;`
     */
    public fun clearTheta() {
      _builder.clearTheta()
    }
    /**
     * ```
     * heading in the world coordinate system.
     * ```
     *
     * `optional double theta = 3;`
     * @return Whether the theta field is set.
     */
    public fun hasTheta(): kotlin.Boolean {
      return _builder.hasTheta()
    }

    /**
     * ```
     * obstacle velocity.
     * ```
     *
     * `optional .apollo.common.Point3D velocity = 4;`
     */
    public var velocity: apollo.common.Geometry.Point3D
      @JvmName("getVelocity")
      get() = _builder.getVelocity()
      @JvmName("setVelocity")
      set(value) {
        _builder.setVelocity(value)
      }
    /**
     * ```
     * obstacle velocity.
     * ```
     *
     * `optional .apollo.common.Point3D velocity = 4;`
     */
    public fun clearVelocity() {
      _builder.clearVelocity()
    }
    /**
     * ```
     * obstacle velocity.
     * ```
     *
     * `optional .apollo.common.Point3D velocity = 4;`
     * @return Whether the velocity field is set.
     */
    public fun hasVelocity(): kotlin.Boolean {
      return _builder.hasVelocity()
    }
    public val PerceptionObstacleKt.Dsl.velocityOrNull: apollo.common.Geometry.Point3D?
      get() = _builder.velocityOrNull

    /**
     * ```
     * Size of obstacle bounding box.
     * ```
     *
     * `optional double length = 5;`
     */
    public var length: kotlin.Double
      @JvmName("getLength")
      get() = _builder.getLength()
      @JvmName("setLength")
      set(value) {
        _builder.setLength(value)
      }
    /**
     * ```
     * Size of obstacle bounding box.
     * ```
     *
     * `optional double length = 5;`
     */
    public fun clearLength() {
      _builder.clearLength()
    }
    /**
     * ```
     * Size of obstacle bounding box.
     * ```
     *
     * `optional double length = 5;`
     * @return Whether the length field is set.
     */
    public fun hasLength(): kotlin.Boolean {
      return _builder.hasLength()
    }

    /**
     * ```
     * obstacle width.
     * ```
     *
     * `optional double width = 6;`
     */
    public var width: kotlin.Double
      @JvmName("getWidth")
      get() = _builder.getWidth()
      @JvmName("setWidth")
      set(value) {
        _builder.setWidth(value)
      }
    /**
     * ```
     * obstacle width.
     * ```
     *
     * `optional double width = 6;`
     */
    public fun clearWidth() {
      _builder.clearWidth()
    }
    /**
     * ```
     * obstacle width.
     * ```
     *
     * `optional double width = 6;`
     * @return Whether the width field is set.
     */
    public fun hasWidth(): kotlin.Boolean {
      return _builder.hasWidth()
    }

    /**
     * ```
     * obstacle height.
     * ```
     *
     * `optional double height = 7;`
     */
    public var height: kotlin.Double
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * ```
     * obstacle height.
     * ```
     *
     * `optional double height = 7;`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }
    /**
     * ```
     * obstacle height.
     * ```
     *
     * `optional double height = 7;`
     * @return Whether the height field is set.
     */
    public fun hasHeight(): kotlin.Boolean {
      return _builder.hasHeight()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PolygonPointProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     */
     public val polygonPoint: com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPolygonPointList()
      )
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     * @param value The polygonPoint to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPolygonPoint")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.add(value: apollo.common.Geometry.Point3D) {
      _builder.addPolygonPoint(value)
    }
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     * @param value The polygonPoint to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPolygonPoint")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.plusAssign(value: apollo.common.Geometry.Point3D) {
      add(value)
    }
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     * @param values The polygonPoint to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPolygonPoint")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.addAll(values: kotlin.collections.Iterable<apollo.common.Geometry.Point3D>) {
      _builder.addAllPolygonPoint(values)
    }
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     * @param values The polygonPoint to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPolygonPoint")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.common.Geometry.Point3D>) {
      addAll(values)
    }
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     * @param index The index to set the value at.
     * @param value The polygonPoint to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPolygonPoint")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.set(index: kotlin.Int, value: apollo.common.Geometry.Point3D) {
      _builder.setPolygonPoint(index, value)
    }
    /**
     * ```
     * obstacle corner points.
     * ```
     *
     * `repeated .apollo.common.Point3D polygon_point = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPolygonPoint")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, PolygonPointProxy>.clear() {
      _builder.clearPolygonPoint()
    }


    /**
     * ```
     * duration of an obstacle since detection in s.
     * ```
     *
     * `optional double tracking_time = 9;`
     */
    public var trackingTime: kotlin.Double
      @JvmName("getTrackingTime")
      get() = _builder.getTrackingTime()
      @JvmName("setTrackingTime")
      set(value) {
        _builder.setTrackingTime(value)
      }
    /**
     * ```
     * duration of an obstacle since detection in s.
     * ```
     *
     * `optional double tracking_time = 9;`
     */
    public fun clearTrackingTime() {
      _builder.clearTrackingTime()
    }
    /**
     * ```
     * duration of an obstacle since detection in s.
     * ```
     *
     * `optional double tracking_time = 9;`
     * @return Whether the trackingTime field is set.
     */
    public fun hasTrackingTime(): kotlin.Boolean {
      return _builder.hasTrackingTime()
    }

    /**
     * ```
     * obstacle type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.Type type = 10;`
     */
    public var type: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * obstacle type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.Type type = 10;`
     */
    public fun clearType() {
      _builder.clearType()
    }
    /**
     * ```
     * obstacle type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.Type type = 10;`
     * @return Whether the type field is set.
     */
    public fun hasType(): kotlin.Boolean {
      return _builder.hasType()
    }

    /**
     * ```
     * GPS time in seconds.
     * ```
     *
     * `optional double timestamp = 11;`
     */
    public var timestamp: kotlin.Double
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * ```
     * GPS time in seconds.
     * ```
     *
     * `optional double timestamp = 11;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * ```
     * GPS time in seconds.
     * ```
     *
     * `optional double timestamp = 11;`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PointCloudProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     */
     public val pointCloud: com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPointCloudList()
      )
    /**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     * @param value The pointCloud to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPointCloud")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.add(value: kotlin.Double) {
      _builder.addPointCloud(value)
    }/**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     * @param value The pointCloud to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPointCloud")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     * @param values The pointCloud to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPointCloud")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllPointCloud(values)
    }/**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     * @param values The pointCloud to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPointCloud")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     * @param index The index to set the value at.
     * @param value The pointCloud to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPointCloud")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setPointCloud(index, value)
    }/**
     * ```
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * ```
     *
     * `repeated double point_cloud = 12 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPointCloud")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PointCloudProxy>.clear() {
      _builder.clearPointCloud()
    }
    /**
     * `optional double confidence = 13 [deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field confidence is deprecated") public var confidence: kotlin.Double
      @JvmName("getConfidence")
      get() = _builder.getConfidence()
      @JvmName("setConfidence")
      set(value) {
        _builder.setConfidence(value)
      }
    /**
     * `optional double confidence = 13 [deprecated = true];`
     */
    public fun clearConfidence() {
      _builder.clearConfidence()
    }
    /**
     * `optional double confidence = 13 [deprecated = true];`
     * @return Whether the confidence field is set.
     */
    public fun hasConfidence(): kotlin.Boolean {
      return _builder.hasConfidence()
    }

    /**
     * `optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field confidenceType is deprecated") public var confidenceType: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType
      @JvmName("getConfidenceType")
      get() = _builder.getConfidenceType()
      @JvmName("setConfidenceType")
      set(value) {
        _builder.setConfidenceType(value)
      }
    /**
     * `optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];`
     */
    public fun clearConfidenceType() {
      _builder.clearConfidenceType()
    }
    /**
     * `optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];`
     * @return Whether the confidenceType field is set.
     */
    public fun hasConfidenceType(): kotlin.Boolean {
      return _builder.hasConfidenceType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DropsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field drops is deprecated")  public val drops: com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDropsList()
      )
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     * @param value The drops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDrops")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.add(value: apollo.common.Geometry.Point3D) {
      _builder.addDrops(value)
    }
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     * @param value The drops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDrops")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.plusAssign(value: apollo.common.Geometry.Point3D) {
      add(value)
    }
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     * @param values The drops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDrops")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.addAll(values: kotlin.collections.Iterable<apollo.common.Geometry.Point3D>) {
      _builder.addAllDrops(values)
    }
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     * @param values The drops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDrops")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.common.Geometry.Point3D>) {
      addAll(values)
    }
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     * @param index The index to set the value at.
     * @param value The drops to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDrops")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.set(index: kotlin.Int, value: apollo.common.Geometry.Point3D) {
      _builder.setDrops(index, value)
    }
    /**
     * ```
     * trajectory of object.
     * ```
     *
     * `repeated .apollo.common.Point3D drops = 15 [deprecated = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDrops")
    public fun com.google.protobuf.kotlin.DslList<apollo.common.Geometry.Point3D, DropsProxy>.clear() {
      _builder.clearDrops()
    }


    /**
     * ```
     * The following fields are new added in Apollo 4.0
     * ```
     *
     * `optional .apollo.common.Point3D acceleration = 16;`
     */
    public var acceleration: apollo.common.Geometry.Point3D
      @JvmName("getAcceleration")
      get() = _builder.getAcceleration()
      @JvmName("setAcceleration")
      set(value) {
        _builder.setAcceleration(value)
      }
    /**
     * ```
     * The following fields are new added in Apollo 4.0
     * ```
     *
     * `optional .apollo.common.Point3D acceleration = 16;`
     */
    public fun clearAcceleration() {
      _builder.clearAcceleration()
    }
    /**
     * ```
     * The following fields are new added in Apollo 4.0
     * ```
     *
     * `optional .apollo.common.Point3D acceleration = 16;`
     * @return Whether the acceleration field is set.
     */
    public fun hasAcceleration(): kotlin.Boolean {
      return _builder.hasAcceleration()
    }
    public val PerceptionObstacleKt.Dsl.accelerationOrNull: apollo.common.Geometry.Point3D?
      get() = _builder.accelerationOrNull

    /**
     * ```
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * ```
     *
     * `optional .apollo.common.Point3D anchor_point = 17;`
     */
    public var anchorPoint: apollo.common.Geometry.Point3D
      @JvmName("getAnchorPoint")
      get() = _builder.getAnchorPoint()
      @JvmName("setAnchorPoint")
      set(value) {
        _builder.setAnchorPoint(value)
      }
    /**
     * ```
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * ```
     *
     * `optional .apollo.common.Point3D anchor_point = 17;`
     */
    public fun clearAnchorPoint() {
      _builder.clearAnchorPoint()
    }
    /**
     * ```
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * ```
     *
     * `optional .apollo.common.Point3D anchor_point = 17;`
     * @return Whether the anchorPoint field is set.
     */
    public fun hasAnchorPoint(): kotlin.Boolean {
      return _builder.hasAnchorPoint()
    }
    public val PerceptionObstacleKt.Dsl.anchorPointOrNull: apollo.common.Geometry.Point3D?
      get() = _builder.anchorPointOrNull

    /**
     * `optional .apollo.perception.BBox2D bbox2d = 18;`
     */
    public var bbox2D: apollo.perception.PerceptionObstacleOuterClass.BBox2D
      @JvmName("getBbox2D")
      get() = _builder.getBbox2D()
      @JvmName("setBbox2D")
      set(value) {
        _builder.setBbox2D(value)
      }
    /**
     * `optional .apollo.perception.BBox2D bbox2d = 18;`
     */
    public fun clearBbox2D() {
      _builder.clearBbox2D()
    }
    /**
     * `optional .apollo.perception.BBox2D bbox2d = 18;`
     * @return Whether the bbox2d field is set.
     */
    public fun hasBbox2D(): kotlin.Boolean {
      return _builder.hasBbox2D()
    }
    public val PerceptionObstacleKt.Dsl.bbox2DOrNull: apollo.perception.PerceptionObstacleOuterClass.BBox2D?
      get() = _builder.bbox2DOrNull

    /**
     * ```
     * obstacle sub_type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;`
     */
    public var subType: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType
      @JvmName("getSubType")
      get() = _builder.getSubType()
      @JvmName("setSubType")
      set(value) {
        _builder.setSubType(value)
      }
    /**
     * ```
     * obstacle sub_type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;`
     */
    public fun clearSubType() {
      _builder.clearSubType()
    }
    /**
     * ```
     * obstacle sub_type
     * ```
     *
     * `optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;`
     * @return Whether the subType field is set.
     */
    public fun hasSubType(): kotlin.Boolean {
      return _builder.hasSubType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MeasurementsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     */
     public val measurements: com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMeasurementsList()
      )
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     * @param value The measurements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMeasurements")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.add(value: apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement) {
      _builder.addMeasurements(value)
    }
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     * @param value The measurements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMeasurements")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.plusAssign(value: apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement) {
      add(value)
    }
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     * @param values The measurements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMeasurements")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.addAll(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement>) {
      _builder.addAllMeasurements(values)
    }
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     * @param values The measurements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMeasurements")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement>) {
      addAll(values)
    }
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     * @param index The index to set the value at.
     * @param value The measurements to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMeasurements")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.set(index: kotlin.Int, value: apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement) {
      _builder.setMeasurements(index, value)
    }
    /**
     * ```
     * sensor measurements
     * ```
     *
     * `repeated .apollo.perception.SensorMeasurement measurements = 20;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMeasurements")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, MeasurementsProxy>.clear() {
      _builder.clearMeasurements()
    }


    /**
     * ```
     * orthogonal distance between obstacle lowest point and ground plane
     * ```
     *
     * `optional double height_above_ground = 21 [default = nan];`
     */
    public var heightAboveGround: kotlin.Double
      @JvmName("getHeightAboveGround")
      get() = _builder.getHeightAboveGround()
      @JvmName("setHeightAboveGround")
      set(value) {
        _builder.setHeightAboveGround(value)
      }
    /**
     * ```
     * orthogonal distance between obstacle lowest point and ground plane
     * ```
     *
     * `optional double height_above_ground = 21 [default = nan];`
     */
    public fun clearHeightAboveGround() {
      _builder.clearHeightAboveGround()
    }
    /**
     * ```
     * orthogonal distance between obstacle lowest point and ground plane
     * ```
     *
     * `optional double height_above_ground = 21 [default = nan];`
     * @return Whether the heightAboveGround field is set.
     */
    public fun hasHeightAboveGround(): kotlin.Boolean {
      return _builder.hasHeightAboveGround()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PositionCovarianceProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     */
     public val positionCovariance: com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPositionCovarianceList()
      )
    /**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     * @param value The positionCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPositionCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.add(value: kotlin.Double) {
      _builder.addPositionCovariance(value)
    }/**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     * @param value The positionCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPositionCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     * @param values The positionCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPositionCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllPositionCovariance(values)
    }/**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     * @param values The positionCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPositionCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     * @param index The index to set the value at.
     * @param value The positionCovariance to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPositionCovariance")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setPositionCovariance(index, value)
    }/**
     * ```
     * position covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double position_covariance = 22 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPositionCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, PositionCovarianceProxy>.clear() {
      _builder.clearPositionCovariance()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VelocityCovarianceProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     */
     public val velocityCovariance: com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVelocityCovarianceList()
      )
    /**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     * @param value The velocityCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVelocityCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.add(value: kotlin.Double) {
      _builder.addVelocityCovariance(value)
    }/**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     * @param value The velocityCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVelocityCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     * @param values The velocityCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVelocityCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllVelocityCovariance(values)
    }/**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     * @param values The velocityCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVelocityCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     * @param index The index to set the value at.
     * @param value The velocityCovariance to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVelocityCovariance")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setVelocityCovariance(index, value)
    }/**
     * ```
     * velocity covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double velocity_covariance = 23 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVelocityCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, VelocityCovarianceProxy>.clear() {
      _builder.clearVelocityCovariance()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AccelerationCovarianceProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     */
     public val accelerationCovariance: com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAccelerationCovarianceList()
      )
    /**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     * @param value The accelerationCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAccelerationCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.add(value: kotlin.Double) {
      _builder.addAccelerationCovariance(value)
    }/**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     * @param value The accelerationCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAccelerationCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     * @param values The accelerationCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAccelerationCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllAccelerationCovariance(values)
    }/**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     * @param values The accelerationCovariance to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAccelerationCovariance")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     * @param index The index to set the value at.
     * @param value The accelerationCovariance to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAccelerationCovariance")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setAccelerationCovariance(index, value)
    }/**
     * ```
     * acceleration covariance which is a row-majored 3x3 matrix
     * ```
     *
     * `repeated double acceleration_covariance = 24 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAccelerationCovariance")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, AccelerationCovarianceProxy>.clear() {
      _builder.clearAccelerationCovariance()
    }
    /**
     * ```
     * lights of vehicles
     * ```
     *
     * `optional .apollo.perception.LightStatus light_status = 25;`
     */
    public var lightStatus: apollo.perception.PerceptionObstacleOuterClass.LightStatus
      @JvmName("getLightStatus")
      get() = _builder.getLightStatus()
      @JvmName("setLightStatus")
      set(value) {
        _builder.setLightStatus(value)
      }
    /**
     * ```
     * lights of vehicles
     * ```
     *
     * `optional .apollo.perception.LightStatus light_status = 25;`
     */
    public fun clearLightStatus() {
      _builder.clearLightStatus()
    }
    /**
     * ```
     * lights of vehicles
     * ```
     *
     * `optional .apollo.perception.LightStatus light_status = 25;`
     * @return Whether the lightStatus field is set.
     */
    public fun hasLightStatus(): kotlin.Boolean {
      return _builder.hasLightStatus()
    }
    public val PerceptionObstacleKt.Dsl.lightStatusOrNull: apollo.perception.PerceptionObstacleOuterClass.LightStatus?
      get() = _builder.lightStatusOrNull

    /**
     * ```
     * Debug Message
     * ```
     *
     * `optional .apollo.perception.DebugMessage msg = 26;`
     */
    public var msg: apollo.perception.PerceptionObstacleOuterClass.DebugMessage
      @JvmName("getMsg")
      get() = _builder.getMsg()
      @JvmName("setMsg")
      set(value) {
        _builder.setMsg(value)
      }
    /**
     * ```
     * Debug Message
     * ```
     *
     * `optional .apollo.perception.DebugMessage msg = 26;`
     */
    public fun clearMsg() {
      _builder.clearMsg()
    }
    /**
     * ```
     * Debug Message
     * ```
     *
     * `optional .apollo.perception.DebugMessage msg = 26;`
     * @return Whether the msg field is set.
     */
    public fun hasMsg(): kotlin.Boolean {
      return _builder.hasMsg()
    }
    public val PerceptionObstacleKt.Dsl.msgOrNull: apollo.perception.PerceptionObstacleOuterClass.DebugMessage?
      get() = _builder.msgOrNull

    /**
     * `optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];`
     */
    public var source: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source
      @JvmName("getSource")
      get() = _builder.getSource()
      @JvmName("setSource")
      set(value) {
        _builder.setSource(value)
      }
    /**
     * `optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];`
     */
    public fun clearSource() {
      _builder.clearSource()
    }
    /**
     * `optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];`
     * @return Whether the source field is set.
     */
    public fun hasSource(): kotlin.Boolean {
      return _builder.hasSource()
    }

    /**
     * `optional .apollo.perception.V2XInformation v2x_info = 28;`
     */
    public var v2XInfo: apollo.perception.PerceptionObstacleOuterClass.V2XInformation
      @JvmName("getV2XInfo")
      get() = _builder.getV2XInfo()
      @JvmName("setV2XInfo")
      set(value) {
        _builder.setV2XInfo(value)
      }
    /**
     * `optional .apollo.perception.V2XInformation v2x_info = 28;`
     */
    public fun clearV2XInfo() {
      _builder.clearV2XInfo()
    }
    /**
     * `optional .apollo.perception.V2XInformation v2x_info = 28;`
     * @return Whether the v2xInfo field is set.
     */
    public fun hasV2XInfo(): kotlin.Boolean {
      return _builder.hasV2XInfo()
    }
    public val PerceptionObstacleKt.Dsl.v2XInfoOrNull: apollo.perception.PerceptionObstacleOuterClass.V2XInformation?
      get() = _builder.v2XInfoOrNull

    /**
     * ```
     * add object of the confidence
     * ```
     *
     * `optional double object_confidence = 29;`
     */
    public var objectConfidence: kotlin.Double
      @JvmName("getObjectConfidence")
      get() = _builder.getObjectConfidence()
      @JvmName("setObjectConfidence")
      set(value) {
        _builder.setObjectConfidence(value)
      }
    /**
     * ```
     * add object of the confidence
     * ```
     *
     * `optional double object_confidence = 29;`
     */
    public fun clearObjectConfidence() {
      _builder.clearObjectConfidence()
    }
    /**
     * ```
     * add object of the confidence
     * ```
     *
     * `optional double object_confidence = 29;`
     * @return Whether the objectConfidence field is set.
     */
    public fun hasObjectConfidence(): kotlin.Boolean {
      return _builder.hasObjectConfidence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.copy(block: `apollo.perception`.PerceptionObstacleKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle =
  `apollo.perception`.PerceptionObstacleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.positionOrNull: apollo.common.Geometry.Point3D?
  get() = if (hasPosition()) getPosition() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.velocityOrNull: apollo.common.Geometry.Point3D?
  get() = if (hasVelocity()) getVelocity() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.accelerationOrNull: apollo.common.Geometry.Point3D?
  get() = if (hasAcceleration()) getAcceleration() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.anchorPointOrNull: apollo.common.Geometry.Point3D?
  get() = if (hasAnchorPoint()) getAnchorPoint() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.bbox2DOrNull: apollo.perception.PerceptionObstacleOuterClass.BBox2D?
  get() = if (hasBbox2D()) getBbox2D() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.lightStatusOrNull: apollo.perception.PerceptionObstacleOuterClass.LightStatus?
  get() = if (hasLightStatus()) getLightStatus() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.msgOrNull: apollo.perception.PerceptionObstacleOuterClass.DebugMessage?
  get() = if (hasMsg()) getMsg() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder.v2XInfoOrNull: apollo.perception.PerceptionObstacleOuterClass.V2XInformation?
  get() = if (hasV2XInfo()) getV2XInfo() else null

