// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/perception/proto/perception_obstacle.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.perception;

@kotlin.jvm.JvmName("-initializeperceptionObstacles")
public inline fun perceptionObstacles(block: apollo.perception.PerceptionObstaclesKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles =
  apollo.perception.PerceptionObstaclesKt.Dsl._create(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.perception.PerceptionObstacles`
 */
public object PerceptionObstaclesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PerceptionObstacleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     */
     public val perceptionObstacle: com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPerceptionObstacleList()
      )
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param value The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.add(value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      _builder.addPerceptionObstacle(value)
    }
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param value The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPerceptionObstacle")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.plusAssign(value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      add(value)
    }
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param values The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.addAll(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>) {
      _builder.addAllPerceptionObstacle(values)
    }
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param values The perceptionObstacle to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPerceptionObstacle")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>) {
      addAll(values)
    }
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     * @param index The index to set the value at.
     * @param value The perceptionObstacle to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPerceptionObstacle")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.set(index: kotlin.Int, value: apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
      _builder.setPerceptionObstacle(index, value)
    }
    /**
     * ```
     * An array of obstacles
     * ```
     *
     * `repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPerceptionObstacle")
    public fun com.google.protobuf.kotlin.DslList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, PerceptionObstacleProxy>.clear() {
      _builder.clearPerceptionObstacle()
    }


    /**
     * ```
     * Header
     * ```
     *
     * `optional .apollo.common.Header header = 2;`
     */
    public var header: apollo.common.HeaderOuterClass.Header
      @JvmName("getHeader")
      get() = _builder.getHeader()
      @JvmName("setHeader")
      set(value) {
        _builder.setHeader(value)
      }
    /**
     * ```
     * Header
     * ```
     *
     * `optional .apollo.common.Header header = 2;`
     */
    public fun clearHeader() {
      _builder.clearHeader()
    }
    /**
     * ```
     * Header
     * ```
     *
     * `optional .apollo.common.Header header = 2;`
     * @return Whether the header field is set.
     */
    public fun hasHeader(): kotlin.Boolean {
      return _builder.hasHeader()
    }
    public val PerceptionObstaclesKt.Dsl.headerOrNull: apollo.common.HeaderOuterClass.Header?
      get() = _builder.headerOrNull

    /**
     * `optional .apollo.common.ErrorCode error_code = 3 [default = OK];`
     */
    public var errorCode: apollo.common.ErrorCodeOuterClass.ErrorCode
      @JvmName("getErrorCode")
      get() = _builder.getErrorCode()
      @JvmName("setErrorCode")
      set(value) {
        _builder.setErrorCode(value)
      }
    /**
     * `optional .apollo.common.ErrorCode error_code = 3 [default = OK];`
     */
    public fun clearErrorCode() {
      _builder.clearErrorCode()
    }
    /**
     * `optional .apollo.common.ErrorCode error_code = 3 [default = OK];`
     * @return Whether the errorCode field is set.
     */
    public fun hasErrorCode(): kotlin.Boolean {
      return _builder.hasErrorCode()
    }

    /**
     * `optional .apollo.perception.LaneMarkers lane_marker = 4;`
     */
    public var laneMarker: apollo.perception.PerceptionObstacleOuterClass.LaneMarkers
      @JvmName("getLaneMarker")
      get() = _builder.getLaneMarker()
      @JvmName("setLaneMarker")
      set(value) {
        _builder.setLaneMarker(value)
      }
    /**
     * `optional .apollo.perception.LaneMarkers lane_marker = 4;`
     */
    public fun clearLaneMarker() {
      _builder.clearLaneMarker()
    }
    /**
     * `optional .apollo.perception.LaneMarkers lane_marker = 4;`
     * @return Whether the laneMarker field is set.
     */
    public fun hasLaneMarker(): kotlin.Boolean {
      return _builder.hasLaneMarker()
    }
    public val PerceptionObstaclesKt.Dsl.laneMarkerOrNull: apollo.perception.PerceptionObstacleOuterClass.LaneMarkers?
      get() = _builder.laneMarkerOrNull

    /**
     * ```
     * Closest In Path Vehicle (CIPV)
     * ```
     *
     * `optional .apollo.perception.CIPVInfo cipv_info = 5;`
     */
    public var cipvInfo: apollo.perception.PerceptionObstacleOuterClass.CIPVInfo
      @JvmName("getCipvInfo")
      get() = _builder.getCipvInfo()
      @JvmName("setCipvInfo")
      set(value) {
        _builder.setCipvInfo(value)
      }
    /**
     * ```
     * Closest In Path Vehicle (CIPV)
     * ```
     *
     * `optional .apollo.perception.CIPVInfo cipv_info = 5;`
     */
    public fun clearCipvInfo() {
      _builder.clearCipvInfo()
    }
    /**
     * ```
     * Closest In Path Vehicle (CIPV)
     * ```
     *
     * `optional .apollo.perception.CIPVInfo cipv_info = 5;`
     * @return Whether the cipvInfo field is set.
     */
    public fun hasCipvInfo(): kotlin.Boolean {
      return _builder.hasCipvInfo()
    }
    public val PerceptionObstaclesKt.Dsl.cipvInfoOrNull: apollo.perception.PerceptionObstacleOuterClass.CIPVInfo?
      get() = _builder.cipvInfoOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.copy(block: `apollo.perception`.PerceptionObstaclesKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles =
  `apollo.perception`.PerceptionObstaclesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstaclesOrBuilder.headerOrNull: apollo.common.HeaderOuterClass.Header?
  get() = if (hasHeader()) getHeader() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstaclesOrBuilder.laneMarkerOrNull: apollo.perception.PerceptionObstacleOuterClass.LaneMarkers?
  get() = if (hasLaneMarker()) getLaneMarker() else null

public val apollo.perception.PerceptionObstacleOuterClass.PerceptionObstaclesOrBuilder.cipvInfoOrNull: apollo.perception.PerceptionObstacleOuterClass.CIPVInfo?
  get() = if (hasCipvInfo()) getCipvInfo() else null

