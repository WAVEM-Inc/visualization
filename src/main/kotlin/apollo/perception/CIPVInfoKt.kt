// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/perception/proto/perception_obstacle.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.perception;

@kotlin.jvm.JvmName("-initializecIPVInfo")
public inline fun cIPVInfo(block: apollo.perception.CIPVInfoKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.CIPVInfo =
  apollo.perception.CIPVInfoKt.Dsl._create(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.perception.CIPVInfo`
 */
public object CIPVInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.perception.PerceptionObstacleOuterClass.CIPVInfo = _builder.build()

    /**
     * `optional int32 cipv_id = 1;`
     */
    public var cipvId: kotlin.Int
      @JvmName("getCipvId")
      get() = _builder.getCipvId()
      @JvmName("setCipvId")
      set(value) {
        _builder.setCipvId(value)
      }
    /**
     * `optional int32 cipv_id = 1;`
     */
    public fun clearCipvId() {
      _builder.clearCipvId()
    }
    /**
     * `optional int32 cipv_id = 1;`
     * @return Whether the cipvId field is set.
     */
    public fun hasCipvId(): kotlin.Boolean {
      return _builder.hasCipvId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PotentialCipvIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated int32 potential_cipv_id = 2;`
     */
     public val potentialCipvId: com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPotentialCipvIdList()
      )
    /**
     * `repeated int32 potential_cipv_id = 2;`
     * @param value The potentialCipvId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPotentialCipvId")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.add(value: kotlin.Int) {
      _builder.addPotentialCipvId(value)
    }/**
     * `repeated int32 potential_cipv_id = 2;`
     * @param value The potentialCipvId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPotentialCipvId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * `repeated int32 potential_cipv_id = 2;`
     * @param values The potentialCipvId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPotentialCipvId")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllPotentialCipvId(values)
    }/**
     * `repeated int32 potential_cipv_id = 2;`
     * @param values The potentialCipvId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPotentialCipvId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * `repeated int32 potential_cipv_id = 2;`
     * @param index The index to set the value at.
     * @param value The potentialCipvId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPotentialCipvId")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setPotentialCipvId(index, value)
    }/**
     * `repeated int32 potential_cipv_id = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPotentialCipvId")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, PotentialCipvIdProxy>.clear() {
      _builder.clearPotentialCipvId()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.copy(block: `apollo.perception`.CIPVInfoKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.CIPVInfo =
  `apollo.perception`.CIPVInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

