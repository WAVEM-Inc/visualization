// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/perception/proto/perception_obstacle.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.perception;

@kotlin.jvm.JvmName("-initializebBox2D")
public inline fun bBox2D(block: apollo.perception.BBox2DKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.BBox2D =
  apollo.perception.BBox2DKt.Dsl._create(apollo.perception.PerceptionObstacleOuterClass.BBox2D.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.perception.BBox2D`
 */
public object BBox2DKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.perception.PerceptionObstacleOuterClass.BBox2D = _builder.build()

    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmin = 1;`
     */
    public var xmin: kotlin.Double
      @JvmName("getXmin")
      get() = _builder.getXmin()
      @JvmName("setXmin")
      set(value) {
        _builder.setXmin(value)
      }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmin = 1;`
     */
    public fun clearXmin() {
      _builder.clearXmin()
    }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmin = 1;`
     * @return Whether the xmin field is set.
     */
    public fun hasXmin(): kotlin.Boolean {
      return _builder.hasXmin()
    }

    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymin = 2;`
     */
    public var ymin: kotlin.Double
      @JvmName("getYmin")
      get() = _builder.getYmin()
      @JvmName("setYmin")
      set(value) {
        _builder.setYmin(value)
      }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymin = 2;`
     */
    public fun clearYmin() {
      _builder.clearYmin()
    }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymin = 2;`
     * @return Whether the ymin field is set.
     */
    public fun hasYmin(): kotlin.Boolean {
      return _builder.hasYmin()
    }

    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmax = 3;`
     */
    public var xmax: kotlin.Double
      @JvmName("getXmax")
      get() = _builder.getXmax()
      @JvmName("setXmax")
      set(value) {
        _builder.setXmax(value)
      }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmax = 3;`
     */
    public fun clearXmax() {
      _builder.clearXmax()
    }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double xmax = 3;`
     * @return Whether the xmax field is set.
     */
    public fun hasXmax(): kotlin.Boolean {
      return _builder.hasXmax()
    }

    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymax = 4;`
     */
    public var ymax: kotlin.Double
      @JvmName("getYmax")
      get() = _builder.getYmax()
      @JvmName("setYmax")
      set(value) {
        _builder.setYmax(value)
      }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymax = 4;`
     */
    public fun clearYmax() {
      _builder.clearYmax()
    }
    /**
     * ```
     * in pixels.
     * ```
     *
     * `optional double ymax = 4;`
     * @return Whether the ymax field is set.
     */
    public fun hasYmax(): kotlin.Boolean {
      return _builder.hasYmax()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.perception.PerceptionObstacleOuterClass.BBox2D.copy(block: `apollo.perception`.BBox2DKt.Dsl.() -> kotlin.Unit): apollo.perception.PerceptionObstacleOuterClass.BBox2D =
  `apollo.perception`.BBox2DKt.Dsl._create(this.toBuilder()).apply { block() }._build()

