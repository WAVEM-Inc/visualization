// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/drivers/proto/pointcloud.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.drivers;

@kotlin.jvm.JvmName("-initializepointXYZIT")
public inline fun pointXYZIT(block: apollo.drivers.PointXYZITKt.Dsl.() -> kotlin.Unit): apollo.drivers.Pointcloud.PointXYZIT =
  apollo.drivers.PointXYZITKt.Dsl._create(apollo.drivers.Pointcloud.PointXYZIT.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.drivers.PointXYZIT`
 */
public object PointXYZITKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.drivers.Pointcloud.PointXYZIT.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.drivers.Pointcloud.PointXYZIT.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.drivers.Pointcloud.PointXYZIT = _builder.build()

    /**
     * `optional float x = 1 [default = nan];`
     */
    public var x: kotlin.Float
      @JvmName("getX")
      get() = _builder.getX()
      @JvmName("setX")
      set(value) {
        _builder.setX(value)
      }
    /**
     * `optional float x = 1 [default = nan];`
     */
    public fun clearX() {
      _builder.clearX()
    }
    /**
     * `optional float x = 1 [default = nan];`
     * @return Whether the x field is set.
     */
    public fun hasX(): kotlin.Boolean {
      return _builder.hasX()
    }

    /**
     * `optional float y = 2 [default = nan];`
     */
    public var y: kotlin.Float
      @JvmName("getY")
      get() = _builder.getY()
      @JvmName("setY")
      set(value) {
        _builder.setY(value)
      }
    /**
     * `optional float y = 2 [default = nan];`
     */
    public fun clearY() {
      _builder.clearY()
    }
    /**
     * `optional float y = 2 [default = nan];`
     * @return Whether the y field is set.
     */
    public fun hasY(): kotlin.Boolean {
      return _builder.hasY()
    }

    /**
     * `optional float z = 3 [default = nan];`
     */
    public var z: kotlin.Float
      @JvmName("getZ")
      get() = _builder.getZ()
      @JvmName("setZ")
      set(value) {
        _builder.setZ(value)
      }
    /**
     * `optional float z = 3 [default = nan];`
     */
    public fun clearZ() {
      _builder.clearZ()
    }
    /**
     * `optional float z = 3 [default = nan];`
     * @return Whether the z field is set.
     */
    public fun hasZ(): kotlin.Boolean {
      return _builder.hasZ()
    }

    /**
     * `optional uint32 intensity = 4 [default = 0];`
     */
    public var intensity: kotlin.Int
      @JvmName("getIntensity")
      get() = _builder.getIntensity()
      @JvmName("setIntensity")
      set(value) {
        _builder.setIntensity(value)
      }
    /**
     * `optional uint32 intensity = 4 [default = 0];`
     */
    public fun clearIntensity() {
      _builder.clearIntensity()
    }
    /**
     * `optional uint32 intensity = 4 [default = 0];`
     * @return Whether the intensity field is set.
     */
    public fun hasIntensity(): kotlin.Boolean {
      return _builder.hasIntensity()
    }

    /**
     * `optional uint64 timestamp = 5 [default = 0];`
     */
    public var timestamp: kotlin.Long
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * `optional uint64 timestamp = 5 [default = 0];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * `optional uint64 timestamp = 5 [default = 0];`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.drivers.Pointcloud.PointXYZIT.copy(block: `apollo.drivers`.PointXYZITKt.Dsl.() -> kotlin.Unit): apollo.drivers.Pointcloud.PointXYZIT =
  `apollo.drivers`.PointXYZITKt.Dsl._create(this.toBuilder()).apply { block() }._build()

