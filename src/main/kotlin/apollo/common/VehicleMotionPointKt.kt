// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/common/proto/pnc_point.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.common;

@kotlin.jvm.JvmName("-initializevehicleMotionPoint")
public inline fun vehicleMotionPoint(block: apollo.common.VehicleMotionPointKt.Dsl.() -> kotlin.Unit): apollo.common.PncPoint.VehicleMotionPoint =
  apollo.common.VehicleMotionPointKt.Dsl._create(apollo.common.PncPoint.VehicleMotionPoint.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.common.VehicleMotionPoint`
 */
public object VehicleMotionPointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.common.PncPoint.VehicleMotionPoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.common.PncPoint.VehicleMotionPoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.common.PncPoint.VehicleMotionPoint = _builder.build()

    /**
     * ```
     * trajectory point
     * ```
     *
     * `optional .apollo.common.TrajectoryPoint trajectory_point = 1;`
     */
    public var trajectoryPoint: apollo.common.PncPoint.TrajectoryPoint
      @JvmName("getTrajectoryPoint")
      get() = _builder.getTrajectoryPoint()
      @JvmName("setTrajectoryPoint")
      set(value) {
        _builder.setTrajectoryPoint(value)
      }
    /**
     * ```
     * trajectory point
     * ```
     *
     * `optional .apollo.common.TrajectoryPoint trajectory_point = 1;`
     */
    public fun clearTrajectoryPoint() {
      _builder.clearTrajectoryPoint()
    }
    /**
     * ```
     * trajectory point
     * ```
     *
     * `optional .apollo.common.TrajectoryPoint trajectory_point = 1;`
     * @return Whether the trajectoryPoint field is set.
     */
    public fun hasTrajectoryPoint(): kotlin.Boolean {
      return _builder.hasTrajectoryPoint()
    }
    public val VehicleMotionPointKt.Dsl.trajectoryPointOrNull: apollo.common.PncPoint.TrajectoryPoint?
      get() = _builder.trajectoryPointOrNull

    /**
     * ```
     * The angle between vehicle front wheel and vehicle longitudinal axis
     * ```
     *
     * `optional double steer = 2;`
     */
    public var steer: kotlin.Double
      @JvmName("getSteer")
      get() = _builder.getSteer()
      @JvmName("setSteer")
      set(value) {
        _builder.setSteer(value)
      }
    /**
     * ```
     * The angle between vehicle front wheel and vehicle longitudinal axis
     * ```
     *
     * `optional double steer = 2;`
     */
    public fun clearSteer() {
      _builder.clearSteer()
    }
    /**
     * ```
     * The angle between vehicle front wheel and vehicle longitudinal axis
     * ```
     *
     * `optional double steer = 2;`
     * @return Whether the steer field is set.
     */
    public fun hasSteer(): kotlin.Boolean {
      return _builder.hasSteer()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.common.PncPoint.VehicleMotionPoint.copy(block: `apollo.common`.VehicleMotionPointKt.Dsl.() -> kotlin.Unit): apollo.common.PncPoint.VehicleMotionPoint =
  `apollo.common`.VehicleMotionPointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val apollo.common.PncPoint.VehicleMotionPointOrBuilder.trajectoryPointOrNull: apollo.common.PncPoint.TrajectoryPoint?
  get() = if (hasTrajectoryPoint()) getTrajectoryPoint() else null

