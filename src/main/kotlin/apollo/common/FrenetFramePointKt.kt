// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/common/proto/pnc_point.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.common;

@kotlin.jvm.JvmName("-initializefrenetFramePoint")
public inline fun frenetFramePoint(block: apollo.common.FrenetFramePointKt.Dsl.() -> kotlin.Unit): apollo.common.PncPoint.FrenetFramePoint =
  apollo.common.FrenetFramePointKt.Dsl._create(apollo.common.PncPoint.FrenetFramePoint.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.common.FrenetFramePoint`
 */
public object FrenetFramePointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.common.PncPoint.FrenetFramePoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.common.PncPoint.FrenetFramePoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.common.PncPoint.FrenetFramePoint = _builder.build()

    /**
     * `optional double s = 1;`
     */
    public var s: kotlin.Double
      @JvmName("getS")
      get() = _builder.getS()
      @JvmName("setS")
      set(value) {
        _builder.setS(value)
      }
    /**
     * `optional double s = 1;`
     */
    public fun clearS() {
      _builder.clearS()
    }
    /**
     * `optional double s = 1;`
     * @return Whether the s field is set.
     */
    public fun hasS(): kotlin.Boolean {
      return _builder.hasS()
    }

    /**
     * `optional double l = 2;`
     */
    public var l: kotlin.Double
      @JvmName("getL")
      get() = _builder.getL()
      @JvmName("setL")
      set(value) {
        _builder.setL(value)
      }
    /**
     * `optional double l = 2;`
     */
    public fun clearL() {
      _builder.clearL()
    }
    /**
     * `optional double l = 2;`
     * @return Whether the l field is set.
     */
    public fun hasL(): kotlin.Boolean {
      return _builder.hasL()
    }

    /**
     * `optional double dl = 3;`
     */
    public var dl: kotlin.Double
      @JvmName("getDl")
      get() = _builder.getDl()
      @JvmName("setDl")
      set(value) {
        _builder.setDl(value)
      }
    /**
     * `optional double dl = 3;`
     */
    public fun clearDl() {
      _builder.clearDl()
    }
    /**
     * `optional double dl = 3;`
     * @return Whether the dl field is set.
     */
    public fun hasDl(): kotlin.Boolean {
      return _builder.hasDl()
    }

    /**
     * `optional double ddl = 4;`
     */
    public var ddl: kotlin.Double
      @JvmName("getDdl")
      get() = _builder.getDdl()
      @JvmName("setDdl")
      set(value) {
        _builder.setDdl(value)
      }
    /**
     * `optional double ddl = 4;`
     */
    public fun clearDdl() {
      _builder.clearDdl()
    }
    /**
     * `optional double ddl = 4;`
     * @return Whether the ddl field is set.
     */
    public fun hasDdl(): kotlin.Boolean {
      return _builder.hasDdl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.common.PncPoint.FrenetFramePoint.copy(block: `apollo.common`.FrenetFramePointKt.Dsl.() -> kotlin.Unit): apollo.common.PncPoint.FrenetFramePoint =
  `apollo.common`.FrenetFramePointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

