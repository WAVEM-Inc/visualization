// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/map/proto/map_lane.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.hdmap;

@kotlin.jvm.JvmName("-initializelaneBoundaryType")
public inline fun laneBoundaryType(block: apollo.hdmap.LaneBoundaryTypeKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.LaneBoundaryType =
  apollo.hdmap.LaneBoundaryTypeKt.Dsl._create(apollo.hdmap.MapLane.LaneBoundaryType.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `apollo.hdmap.LaneBoundaryType`
 */
public object LaneBoundaryTypeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.hdmap.MapLane.LaneBoundaryType.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.hdmap.MapLane.LaneBoundaryType.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.hdmap.MapLane.LaneBoundaryType = _builder.build()

    /**
     * ```
     * Offset relative to the starting point of boundary
     * ```
     *
     * `optional double s = 1;`
     */
    public var s: kotlin.Double
      @JvmName("getS")
      get() = _builder.getS()
      @JvmName("setS")
      set(value) {
        _builder.setS(value)
      }
    /**
     * ```
     * Offset relative to the starting point of boundary
     * ```
     *
     * `optional double s = 1;`
     */
    public fun clearS() {
      _builder.clearS()
    }
    /**
     * ```
     * Offset relative to the starting point of boundary
     * ```
     *
     * `optional double s = 1;`
     * @return Whether the s field is set.
     */
    public fun hasS(): kotlin.Boolean {
      return _builder.hasS()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     */
    public val types: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTypesList()
      )
    /**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTypes")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.add(value: apollo.hdmap.MapLane.LaneBoundaryType.Type) {
      _builder.addTypes(value)
    }/**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.plusAssign(value: apollo.hdmap.MapLane.LaneBoundaryType.Type) {
      add(value)
    }/**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTypes")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneBoundaryType.Type>) {
      _builder.addAllTypes(values)
    }/**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneBoundaryType.Type>) {
      addAll(values)
    }/**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     * @param index The index to set the value at.
     * @param value The types to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTypes")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapLane.LaneBoundaryType.Type) {
      _builder.setTypes(index, value)
    }/**
     * ```
     * support multiple types
     * ```
     *
     * `repeated .apollo.hdmap.LaneBoundaryType.Type types = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTypes")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneBoundaryType.Type, TypesProxy>.clear() {
      _builder.clearTypes()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.hdmap.MapLane.LaneBoundaryType.copy(block: `apollo.hdmap`.LaneBoundaryTypeKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.LaneBoundaryType =
  `apollo.hdmap`.LaneBoundaryTypeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

