// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/map/proto/map_geometry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.hdmap;

@kotlin.jvm.JvmName("-initializecurve")
public inline fun curve(block: apollo.hdmap.CurveKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapGeometry.Curve =
  apollo.hdmap.CurveKt.Dsl._create(apollo.hdmap.MapGeometry.Curve.newBuilder()).apply { block() }._build()
/**
 * ```
 * An object similar to a line but that need not be straight.
 * ```
 *
 * Protobuf type `apollo.hdmap.Curve`
 */
public object CurveKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.hdmap.MapGeometry.Curve.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.hdmap.MapGeometry.Curve.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.hdmap.MapGeometry.Curve = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SegmentProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     */
     public val segment: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSegmentList()
      )
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     * @param value The segment to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSegment")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.add(value: apollo.hdmap.MapGeometry.CurveSegment) {
      _builder.addSegment(value)
    }
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     * @param value The segment to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSegment")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.plusAssign(value: apollo.hdmap.MapGeometry.CurveSegment) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     * @param values The segment to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSegment")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapGeometry.CurveSegment>) {
      _builder.addAllSegment(values)
    }
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     * @param values The segment to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSegment")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapGeometry.CurveSegment>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     * @param index The index to set the value at.
     * @param value The segment to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSegment")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapGeometry.CurveSegment) {
      _builder.setSegment(index, value)
    }
    /**
     * `repeated .apollo.hdmap.CurveSegment segment = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSegment")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapGeometry.CurveSegment, SegmentProxy>.clear() {
      _builder.clearSegment()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.hdmap.MapGeometry.Curve.copy(block: `apollo.hdmap`.CurveKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapGeometry.Curve =
  `apollo.hdmap`.CurveKt.Dsl._create(this.toBuilder()).apply { block() }._build()

