// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/map/proto/map_lane.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.hdmap;

@kotlin.jvm.JvmName("-initializelaneSampleAssociation")
public inline fun laneSampleAssociation(block: apollo.hdmap.LaneSampleAssociationKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.LaneSampleAssociation =
  apollo.hdmap.LaneSampleAssociationKt.Dsl._create(apollo.hdmap.MapLane.LaneSampleAssociation.newBuilder()).apply { block() }._build()
/**
 * ```
 * Association between central point to closest boundary.
 * ```
 *
 * Protobuf type `apollo.hdmap.LaneSampleAssociation`
 */
public object LaneSampleAssociationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.hdmap.MapLane.LaneSampleAssociation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.hdmap.MapLane.LaneSampleAssociation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.hdmap.MapLane.LaneSampleAssociation = _builder.build()

    /**
     * `optional double s = 1;`
     */
    public var s: kotlin.Double
      @JvmName("getS")
      get() = _builder.getS()
      @JvmName("setS")
      set(value) {
        _builder.setS(value)
      }
    /**
     * `optional double s = 1;`
     */
    public fun clearS() {
      _builder.clearS()
    }
    /**
     * `optional double s = 1;`
     * @return Whether the s field is set.
     */
    public fun hasS(): kotlin.Boolean {
      return _builder.hasS()
    }

    /**
     * `optional double width = 2;`
     */
    public var width: kotlin.Double
      @JvmName("getWidth")
      get() = _builder.getWidth()
      @JvmName("setWidth")
      set(value) {
        _builder.setWidth(value)
      }
    /**
     * `optional double width = 2;`
     */
    public fun clearWidth() {
      _builder.clearWidth()
    }
    /**
     * `optional double width = 2;`
     * @return Whether the width field is set.
     */
    public fun hasWidth(): kotlin.Boolean {
      return _builder.hasWidth()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.hdmap.MapLane.LaneSampleAssociation.copy(block: `apollo.hdmap`.LaneSampleAssociationKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.LaneSampleAssociation =
  `apollo.hdmap`.LaneSampleAssociationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

