// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/map/proto/map_id.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.hdmap;

@kotlin.jvm.JvmName("-initializeid")
public inline fun id(block: apollo.hdmap.IdKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapId.Id =
  apollo.hdmap.IdKt.Dsl._create(apollo.hdmap.MapId.Id.newBuilder()).apply { block() }._build()
/**
 * ```
 * Global unique ids for all objects (include lanes, junctions, overlaps, etc).
 * ```
 *
 * Protobuf type `apollo.hdmap.Id`
 */
public object IdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.hdmap.MapId.Id.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.hdmap.MapId.Id.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.hdmap.MapId.Id = _builder.build()

    /**
     * `optional string id = 1;`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `optional string id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * `optional string id = 1;`
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.hdmap.MapId.Id.copy(block: `apollo.hdmap`.IdKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapId.Id =
  `apollo.hdmap`.IdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

