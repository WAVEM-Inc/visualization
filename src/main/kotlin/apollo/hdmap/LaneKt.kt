// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: modules/map/proto/map_lane.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package apollo.hdmap;

@kotlin.jvm.JvmName("-initializelane")
public inline fun lane(block: apollo.hdmap.LaneKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.Lane =
  apollo.hdmap.LaneKt.Dsl._create(apollo.hdmap.MapLane.Lane.newBuilder()).apply { block() }._build()
/**
 * ```
 * A lane is part of a roadway, that is designated for use by a single line of
 * vehicles.
 * Most public roads (include highways) have more than two lanes.
 * ```
 *
 * Protobuf type `apollo.hdmap.Lane`
 */
public object LaneKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: apollo.hdmap.MapLane.Lane.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: apollo.hdmap.MapLane.Lane.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): apollo.hdmap.MapLane.Lane = _builder.build()

    /**
     * `optional .apollo.hdmap.Id id = 1;`
     */
    public var id: apollo.hdmap.MapId.Id
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `optional .apollo.hdmap.Id id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * `optional .apollo.hdmap.Id id = 1;`
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val LaneKt.Dsl.idOrNull: apollo.hdmap.MapId.Id?
      get() = _builder.idOrNull

    /**
     * ```
     * Central lane as reference trajectory, not necessary to be the geometry
     * central.
     * ```
     *
     * `optional .apollo.hdmap.Curve central_curve = 2;`
     */
    public var centralCurve: apollo.hdmap.MapGeometry.Curve
      @JvmName("getCentralCurve")
      get() = _builder.getCentralCurve()
      @JvmName("setCentralCurve")
      set(value) {
        _builder.setCentralCurve(value)
      }
    /**
     * ```
     * Central lane as reference trajectory, not necessary to be the geometry
     * central.
     * ```
     *
     * `optional .apollo.hdmap.Curve central_curve = 2;`
     */
    public fun clearCentralCurve() {
      _builder.clearCentralCurve()
    }
    /**
     * ```
     * Central lane as reference trajectory, not necessary to be the geometry
     * central.
     * ```
     *
     * `optional .apollo.hdmap.Curve central_curve = 2;`
     * @return Whether the centralCurve field is set.
     */
    public fun hasCentralCurve(): kotlin.Boolean {
      return _builder.hasCentralCurve()
    }
    public val LaneKt.Dsl.centralCurveOrNull: apollo.hdmap.MapGeometry.Curve?
      get() = _builder.centralCurveOrNull

    /**
     * ```
     * Lane boundary curve.
     * ```
     *
     * `optional .apollo.hdmap.LaneBoundary left_boundary = 3;`
     */
    public var leftBoundary: apollo.hdmap.MapLane.LaneBoundary
      @JvmName("getLeftBoundary")
      get() = _builder.getLeftBoundary()
      @JvmName("setLeftBoundary")
      set(value) {
        _builder.setLeftBoundary(value)
      }
    /**
     * ```
     * Lane boundary curve.
     * ```
     *
     * `optional .apollo.hdmap.LaneBoundary left_boundary = 3;`
     */
    public fun clearLeftBoundary() {
      _builder.clearLeftBoundary()
    }
    /**
     * ```
     * Lane boundary curve.
     * ```
     *
     * `optional .apollo.hdmap.LaneBoundary left_boundary = 3;`
     * @return Whether the leftBoundary field is set.
     */
    public fun hasLeftBoundary(): kotlin.Boolean {
      return _builder.hasLeftBoundary()
    }
    public val LaneKt.Dsl.leftBoundaryOrNull: apollo.hdmap.MapLane.LaneBoundary?
      get() = _builder.leftBoundaryOrNull

    /**
     * `optional .apollo.hdmap.LaneBoundary right_boundary = 4;`
     */
    public var rightBoundary: apollo.hdmap.MapLane.LaneBoundary
      @JvmName("getRightBoundary")
      get() = _builder.getRightBoundary()
      @JvmName("setRightBoundary")
      set(value) {
        _builder.setRightBoundary(value)
      }
    /**
     * `optional .apollo.hdmap.LaneBoundary right_boundary = 4;`
     */
    public fun clearRightBoundary() {
      _builder.clearRightBoundary()
    }
    /**
     * `optional .apollo.hdmap.LaneBoundary right_boundary = 4;`
     * @return Whether the rightBoundary field is set.
     */
    public fun hasRightBoundary(): kotlin.Boolean {
      return _builder.hasRightBoundary()
    }
    public val LaneKt.Dsl.rightBoundaryOrNull: apollo.hdmap.MapLane.LaneBoundary?
      get() = _builder.rightBoundaryOrNull

    /**
     * ```
     * in meters.
     * ```
     *
     * `optional double length = 5;`
     */
    public var length: kotlin.Double
      @JvmName("getLength")
      get() = _builder.getLength()
      @JvmName("setLength")
      set(value) {
        _builder.setLength(value)
      }
    /**
     * ```
     * in meters.
     * ```
     *
     * `optional double length = 5;`
     */
    public fun clearLength() {
      _builder.clearLength()
    }
    /**
     * ```
     * in meters.
     * ```
     *
     * `optional double length = 5;`
     * @return Whether the length field is set.
     */
    public fun hasLength(): kotlin.Boolean {
      return _builder.hasLength()
    }

    /**
     * ```
     * Speed limit of the lane, in meters per second.
     * ```
     *
     * `optional double speed_limit = 6;`
     */
    public var speedLimit: kotlin.Double
      @JvmName("getSpeedLimit")
      get() = _builder.getSpeedLimit()
      @JvmName("setSpeedLimit")
      set(value) {
        _builder.setSpeedLimit(value)
      }
    /**
     * ```
     * Speed limit of the lane, in meters per second.
     * ```
     *
     * `optional double speed_limit = 6;`
     */
    public fun clearSpeedLimit() {
      _builder.clearSpeedLimit()
    }
    /**
     * ```
     * Speed limit of the lane, in meters per second.
     * ```
     *
     * `optional double speed_limit = 6;`
     * @return Whether the speedLimit field is set.
     */
    public fun hasSpeedLimit(): kotlin.Boolean {
      return _builder.hasSpeedLimit()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class OverlapIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     */
     public val overlapId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getOverlapIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     * @param value The overlapId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addOverlapId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addOverlapId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     * @param value The overlapId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignOverlapId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     * @param values The overlapId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllOverlapId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllOverlapId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     * @param values The overlapId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllOverlapId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     * @param index The index to set the value at.
     * @param value The overlapId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setOverlapId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setOverlapId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id overlap_id = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearOverlapId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, OverlapIdProxy>.clear() {
      _builder.clearOverlapId()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PredecessorIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     */
     public val predecessorId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPredecessorIdList()
      )
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     * @param value The predecessorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPredecessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addPredecessorId(value)
    }
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     * @param value The predecessorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPredecessorId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     * @param values The predecessorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPredecessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllPredecessorId(values)
    }
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     * @param values The predecessorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPredecessorId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     * @param index The index to set the value at.
     * @param value The predecessorId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPredecessorId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setPredecessorId(index, value)
    }
    /**
     * ```
     * All lanes can be driving into (or from).
     * ```
     *
     * `repeated .apollo.hdmap.Id predecessor_id = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPredecessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, PredecessorIdProxy>.clear() {
      _builder.clearPredecessorId()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SuccessorIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     */
     public val successorId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSuccessorIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     * @param value The successorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSuccessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addSuccessorId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     * @param value The successorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSuccessorId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     * @param values The successorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSuccessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllSuccessorId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     * @param values The successorId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSuccessorId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     * @param index The index to set the value at.
     * @param value The successorId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSuccessorId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setSuccessorId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id successor_id = 9;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSuccessorId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SuccessorIdProxy>.clear() {
      _builder.clearSuccessorId()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LeftNeighborForwardLaneIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     */
     public val leftNeighborForwardLaneId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLeftNeighborForwardLaneIdList()
      )
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     * @param value The leftNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLeftNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addLeftNeighborForwardLaneId(value)
    }
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     * @param value The leftNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLeftNeighborForwardLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     * @param values The leftNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLeftNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllLeftNeighborForwardLaneId(values)
    }
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     * @param values The leftNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLeftNeighborForwardLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     * @param index The index to set the value at.
     * @param value The leftNeighborForwardLaneId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLeftNeighborForwardLaneId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setLeftNeighborForwardLaneId(index, value)
    }
    /**
     * ```
     * Neighbor lanes on the same direction.
     * ```
     *
     * `repeated .apollo.hdmap.Id left_neighbor_forward_lane_id = 10;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLeftNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborForwardLaneIdProxy>.clear() {
      _builder.clearLeftNeighborForwardLaneId()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RightNeighborForwardLaneIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     */
     public val rightNeighborForwardLaneId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRightNeighborForwardLaneIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     * @param value The rightNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRightNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addRightNeighborForwardLaneId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     * @param value The rightNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRightNeighborForwardLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     * @param values The rightNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRightNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllRightNeighborForwardLaneId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     * @param values The rightNeighborForwardLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRightNeighborForwardLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     * @param index The index to set the value at.
     * @param value The rightNeighborForwardLaneId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRightNeighborForwardLaneId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setRightNeighborForwardLaneId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_forward_lane_id = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRightNeighborForwardLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborForwardLaneIdProxy>.clear() {
      _builder.clearRightNeighborForwardLaneId()
    }


    /**
     * `optional .apollo.hdmap.Lane.LaneType type = 12;`
     */
    public var type: apollo.hdmap.MapLane.Lane.LaneType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * `optional .apollo.hdmap.Lane.LaneType type = 12;`
     */
    public fun clearType() {
      _builder.clearType()
    }
    /**
     * `optional .apollo.hdmap.Lane.LaneType type = 12;`
     * @return Whether the type field is set.
     */
    public fun hasType(): kotlin.Boolean {
      return _builder.hasType()
    }

    /**
     * `optional .apollo.hdmap.Lane.LaneTurn turn = 13;`
     */
    public var turn: apollo.hdmap.MapLane.Lane.LaneTurn
      @JvmName("getTurn")
      get() = _builder.getTurn()
      @JvmName("setTurn")
      set(value) {
        _builder.setTurn(value)
      }
    /**
     * `optional .apollo.hdmap.Lane.LaneTurn turn = 13;`
     */
    public fun clearTurn() {
      _builder.clearTurn()
    }
    /**
     * `optional .apollo.hdmap.Lane.LaneTurn turn = 13;`
     * @return Whether the turn field is set.
     */
    public fun hasTurn(): kotlin.Boolean {
      return _builder.hasTurn()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LeftNeighborReverseLaneIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     */
     public val leftNeighborReverseLaneId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLeftNeighborReverseLaneIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     * @param value The leftNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLeftNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addLeftNeighborReverseLaneId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     * @param value The leftNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLeftNeighborReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     * @param values The leftNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLeftNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllLeftNeighborReverseLaneId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     * @param values The leftNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLeftNeighborReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     * @param index The index to set the value at.
     * @param value The leftNeighborReverseLaneId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLeftNeighborReverseLaneId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setLeftNeighborReverseLaneId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id left_neighbor_reverse_lane_id = 14;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLeftNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, LeftNeighborReverseLaneIdProxy>.clear() {
      _builder.clearLeftNeighborReverseLaneId()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RightNeighborReverseLaneIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     */
     public val rightNeighborReverseLaneId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRightNeighborReverseLaneIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     * @param value The rightNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRightNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addRightNeighborReverseLaneId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     * @param value The rightNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRightNeighborReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     * @param values The rightNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRightNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllRightNeighborReverseLaneId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     * @param values The rightNeighborReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRightNeighborReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     * @param index The index to set the value at.
     * @param value The rightNeighborReverseLaneId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRightNeighborReverseLaneId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setRightNeighborReverseLaneId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id right_neighbor_reverse_lane_id = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRightNeighborReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, RightNeighborReverseLaneIdProxy>.clear() {
      _builder.clearRightNeighborReverseLaneId()
    }


    /**
     * `optional .apollo.hdmap.Id junction_id = 16;`
     */
    public var junctionId: apollo.hdmap.MapId.Id
      @JvmName("getJunctionId")
      get() = _builder.getJunctionId()
      @JvmName("setJunctionId")
      set(value) {
        _builder.setJunctionId(value)
      }
    /**
     * `optional .apollo.hdmap.Id junction_id = 16;`
     */
    public fun clearJunctionId() {
      _builder.clearJunctionId()
    }
    /**
     * `optional .apollo.hdmap.Id junction_id = 16;`
     * @return Whether the junctionId field is set.
     */
    public fun hasJunctionId(): kotlin.Boolean {
      return _builder.hasJunctionId()
    }
    public val LaneKt.Dsl.junctionIdOrNull: apollo.hdmap.MapId.Id?
      get() = _builder.junctionIdOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LeftSampleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     */
     public val leftSample: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLeftSampleList()
      )
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     * @param value The leftSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLeftSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.add(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.addLeftSample(value)
    }
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     * @param value The leftSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLeftSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.plusAssign(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      add(value)
    }
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     * @param values The leftSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLeftSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      _builder.addAllLeftSample(values)
    }
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     * @param values The leftSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLeftSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      addAll(values)
    }
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     * @param index The index to set the value at.
     * @param value The leftSample to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLeftSample")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.setLeftSample(index, value)
    }
    /**
     * ```
     * Association between central point to closest boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_sample = 17;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLeftSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftSampleProxy>.clear() {
      _builder.clearLeftSample()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RightSampleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     */
     public val rightSample: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRightSampleList()
      )
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     * @param value The rightSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRightSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.add(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.addRightSample(value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     * @param value The rightSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRightSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.plusAssign(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     * @param values The rightSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRightSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      _builder.addAllRightSample(values)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     * @param values The rightSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRightSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     * @param index The index to set the value at.
     * @param value The rightSample to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRightSample")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.setRightSample(index, value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_sample = 18;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRightSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightSampleProxy>.clear() {
      _builder.clearRightSample()
    }


    /**
     * `optional .apollo.hdmap.Lane.LaneDirection direction = 19;`
     */
    public var direction: apollo.hdmap.MapLane.Lane.LaneDirection
      @JvmName("getDirection")
      get() = _builder.getDirection()
      @JvmName("setDirection")
      set(value) {
        _builder.setDirection(value)
      }
    /**
     * `optional .apollo.hdmap.Lane.LaneDirection direction = 19;`
     */
    public fun clearDirection() {
      _builder.clearDirection()
    }
    /**
     * `optional .apollo.hdmap.Lane.LaneDirection direction = 19;`
     * @return Whether the direction field is set.
     */
    public fun hasDirection(): kotlin.Boolean {
      return _builder.hasDirection()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LeftRoadSampleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     */
     public val leftRoadSample: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLeftRoadSampleList()
      )
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     * @param value The leftRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLeftRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.add(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.addLeftRoadSample(value)
    }
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     * @param value The leftRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLeftRoadSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.plusAssign(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      add(value)
    }
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     * @param values The leftRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLeftRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      _builder.addAllLeftRoadSample(values)
    }
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     * @param values The leftRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLeftRoadSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      addAll(values)
    }
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     * @param index The index to set the value at.
     * @param value The leftRoadSample to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLeftRoadSample")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.setLeftRoadSample(index, value)
    }
    /**
     * ```
     * Association between central point to closest road boundary.
     * ```
     *
     * `repeated .apollo.hdmap.LaneSampleAssociation left_road_sample = 20;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLeftRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, LeftRoadSampleProxy>.clear() {
      _builder.clearLeftRoadSample()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RightRoadSampleProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     */
     public val rightRoadSample: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRightRoadSampleList()
      )
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     * @param value The rightRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRightRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.add(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.addRightRoadSample(value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     * @param value The rightRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRightRoadSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.plusAssign(value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     * @param values The rightRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRightRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      _builder.addAllRightRoadSample(values)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     * @param values The rightRoadSample to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRightRoadSample")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapLane.LaneSampleAssociation>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     * @param index The index to set the value at.
     * @param value The rightRoadSample to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRightRoadSample")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapLane.LaneSampleAssociation) {
      _builder.setRightRoadSample(index, value)
    }
    /**
     * `repeated .apollo.hdmap.LaneSampleAssociation right_road_sample = 21;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRightRoadSample")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapLane.LaneSampleAssociation, RightRoadSampleProxy>.clear() {
      _builder.clearRightRoadSample()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SelfReverseLaneIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     */
     public val selfReverseLaneId: com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSelfReverseLaneIdList()
      )
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     * @param value The selfReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSelfReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.add(value: apollo.hdmap.MapId.Id) {
      _builder.addSelfReverseLaneId(value)
    }
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     * @param value The selfReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSelfReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.plusAssign(value: apollo.hdmap.MapId.Id) {
      add(value)
    }
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     * @param values The selfReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSelfReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.addAll(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      _builder.addAllSelfReverseLaneId(values)
    }
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     * @param values The selfReverseLaneId to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSelfReverseLaneId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.plusAssign(values: kotlin.collections.Iterable<apollo.hdmap.MapId.Id>) {
      addAll(values)
    }
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     * @param index The index to set the value at.
     * @param value The selfReverseLaneId to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSelfReverseLaneId")
    public operator fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.set(index: kotlin.Int, value: apollo.hdmap.MapId.Id) {
      _builder.setSelfReverseLaneId(index, value)
    }
    /**
     * `repeated .apollo.hdmap.Id self_reverse_lane_id = 22;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSelfReverseLaneId")
    public fun com.google.protobuf.kotlin.DslList<apollo.hdmap.MapId.Id, SelfReverseLaneIdProxy>.clear() {
      _builder.clearSelfReverseLaneId()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun apollo.hdmap.MapLane.Lane.copy(block: `apollo.hdmap`.LaneKt.Dsl.() -> kotlin.Unit): apollo.hdmap.MapLane.Lane =
  `apollo.hdmap`.LaneKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val apollo.hdmap.MapLane.LaneOrBuilder.idOrNull: apollo.hdmap.MapId.Id?
  get() = if (hasId()) getId() else null

public val apollo.hdmap.MapLane.LaneOrBuilder.centralCurveOrNull: apollo.hdmap.MapGeometry.Curve?
  get() = if (hasCentralCurve()) getCentralCurve() else null

public val apollo.hdmap.MapLane.LaneOrBuilder.leftBoundaryOrNull: apollo.hdmap.MapLane.LaneBoundary?
  get() = if (hasLeftBoundary()) getLeftBoundary() else null

public val apollo.hdmap.MapLane.LaneOrBuilder.rightBoundaryOrNull: apollo.hdmap.MapLane.LaneBoundary?
  get() = if (hasRightBoundary()) getRightBoundary() else null

public val apollo.hdmap.MapLane.LaneOrBuilder.junctionIdOrNull: apollo.hdmap.MapId.Id?
  get() = if (hasJunctionId()) getJunctionId() else null

