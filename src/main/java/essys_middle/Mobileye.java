// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/essys/mobileye.proto
// Protobuf Java Version: 4.26.1

package essys_middle;

public final class Mobileye {
  private Mobileye() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      Mobileye.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code essys_middle.LaneType}
   */
  public enum LaneType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DASHED = 0;</code>
     */
    DASHED(0),
    /**
     * <code>SOLID = 1;</code>
     */
    SOLID(1),
    /**
     * <code>NONE = 2;</code>
     */
    NONE(2),
    /**
     * <code>ROAD_EDGE = 3;</code>
     */
    ROAD_EDGE(3),
    /**
     * <code>DOUBLE_LANE_MARK = 4;</code>
     */
    DOUBLE_LANE_MARK(4),
    /**
     * <code>BOTTS_DOTS = 5;</code>
     */
    BOTTS_DOTS(5),
    /**
     * <code>INVALID = 6;</code>
     */
    INVALID(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LaneType.class.getName());
    }
    /**
     * <code>DASHED = 0;</code>
     */
    public static final int DASHED_VALUE = 0;
    /**
     * <code>SOLID = 1;</code>
     */
    public static final int SOLID_VALUE = 1;
    /**
     * <code>NONE = 2;</code>
     */
    public static final int NONE_VALUE = 2;
    /**
     * <code>ROAD_EDGE = 3;</code>
     */
    public static final int ROAD_EDGE_VALUE = 3;
    /**
     * <code>DOUBLE_LANE_MARK = 4;</code>
     */
    public static final int DOUBLE_LANE_MARK_VALUE = 4;
    /**
     * <code>BOTTS_DOTS = 5;</code>
     */
    public static final int BOTTS_DOTS_VALUE = 5;
    /**
     * <code>INVALID = 6;</code>
     */
    public static final int INVALID_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LaneType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LaneType forNumber(int value) {
      switch (value) {
        case 0: return DASHED;
        case 1: return SOLID;
        case 2: return NONE;
        case 3: return ROAD_EDGE;
        case 4: return DOUBLE_LANE_MARK;
        case 5: return BOTTS_DOTS;
        case 6: return INVALID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LaneType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LaneType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LaneType>() {
            public LaneType findValueByNumber(int number) {
              return LaneType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return essys_middle.Mobileye.getDescriptor().getEnumTypes().get(0);
    }

    private static final LaneType[] VALUES = values();

    public static LaneType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LaneType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:essys_middle.LaneType)
  }

  /**
   * Protobuf enum {@code essys_middle.Direction}
   */
  public enum Direction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>FRONT = 1;</code>
     */
    FRONT(1),
    /**
     * <code>RIGHT = 2;</code>
     */
    RIGHT(2),
    /**
     * <code>REAR = 3;</code>
     */
    REAR(3),
    /**
     * <code>LEFT = 4;</code>
     */
    LEFT(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Direction.class.getName());
    }
    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>FRONT = 1;</code>
     */
    public static final int FRONT_VALUE = 1;
    /**
     * <code>RIGHT = 2;</code>
     */
    public static final int RIGHT_VALUE = 2;
    /**
     * <code>REAR = 3;</code>
     */
    public static final int REAR_VALUE = 3;
    /**
     * <code>LEFT = 4;</code>
     */
    public static final int LEFT_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Direction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Direction forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return FRONT;
        case 2: return RIGHT;
        case 3: return REAR;
        case 4: return LEFT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Direction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Direction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
            public Direction findValueByNumber(int number) {
              return Direction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return essys_middle.Mobileye.getDescriptor().getEnumTypes().get(1);
    }

    private static final Direction[] VALUES = values();

    public static Direction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Direction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:essys_middle.Direction)
  }

  /**
   * Protobuf enum {@code essys_middle.LDWAvailability}
   */
  public enum LDWAvailability
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINE_OUT = 0;</code>
     */
    LINE_OUT(0),
    /**
     * <code>LINE_IN = 1;</code>
     */
    LINE_IN(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LDWAvailability.class.getName());
    }
    /**
     * <code>LINE_OUT = 0;</code>
     */
    public static final int LINE_OUT_VALUE = 0;
    /**
     * <code>LINE_IN = 1;</code>
     */
    public static final int LINE_IN_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LDWAvailability valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LDWAvailability forNumber(int value) {
      switch (value) {
        case 0: return LINE_OUT;
        case 1: return LINE_IN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LDWAvailability>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LDWAvailability> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LDWAvailability>() {
            public LDWAvailability findValueByNumber(int number) {
              return LDWAvailability.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return essys_middle.Mobileye.getDescriptor().getEnumTypes().get(2);
    }

    private static final LDWAvailability[] VALUES = values();

    public static LDWAvailability valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LDWAvailability(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:essys_middle.LDWAvailability)
  }

  public interface LaneDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:essys_middle.LaneData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .essys_middle.Direction direction = 1;</code>
     * @return Whether the direction field is set.
     */
    boolean hasDirection();
    /**
     * <code>optional .essys_middle.Direction direction = 1;</code>
     * @return The direction.
     */
    essys_middle.Mobileye.Direction getDirection();

    /**
     * <pre>
     * -40 ~ 40
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     * @return Whether the distance field is set.
     */
    boolean hasDistance();
    /**
     * <pre>
     * -40 ~ 40
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     * @return The distance.
     */
    double getDistance();

    /**
     * <pre>
     * 0 ~ 3
     * </pre>
     *
     * <code>optional uint32 confidence = 3;</code>
     * @return Whether the confidence field is set.
     */
    boolean hasConfidence();
    /**
     * <pre>
     * 0 ~ 3
     * </pre>
     *
     * <code>optional uint32 confidence = 3;</code>
     * @return The confidence.
     */
    int getConfidence();

    /**
     * <code>optional .essys_middle.LaneType lane_type = 4;</code>
     * @return Whether the laneType field is set.
     */
    boolean hasLaneType();
    /**
     * <code>optional .essys_middle.LaneType lane_type = 4;</code>
     * @return The laneType.
     */
    essys_middle.Mobileye.LaneType getLaneType();

    /**
     * <code>optional double lane_curvature = 5;</code>
     * @return Whether the laneCurvature field is set.
     */
    boolean hasLaneCurvature();
    /**
     * <code>optional double lane_curvature = 5;</code>
     * @return The laneCurvature.
     */
    double getLaneCurvature();

    /**
     * <code>optional double lane_heading = 6;</code>
     * @return Whether the laneHeading field is set.
     */
    boolean hasLaneHeading();
    /**
     * <code>optional double lane_heading = 6;</code>
     * @return The laneHeading.
     */
    double getLaneHeading();

    /**
     * <code>optional double pitch_angle = 7;</code>
     * @return Whether the pitchAngle field is set.
     */
    boolean hasPitchAngle();
    /**
     * <code>optional double pitch_angle = 7;</code>
     * @return The pitchAngle.
     */
    double getPitchAngle();

    /**
     * <code>optional double yaw_angle = 8;</code>
     * @return Whether the yawAngle field is set.
     */
    boolean hasYawAngle();
    /**
     * <code>optional double yaw_angle = 8;</code>
     * @return The yawAngle.
     */
    double getYawAngle();

    /**
     * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
     * @return Whether the ldwAvailability field is set.
     */
    boolean hasLdwAvailability();
    /**
     * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
     * @return The ldwAvailability.
     */
    essys_middle.Mobileye.LDWAvailability getLdwAvailability();
  }
  /**
   * Protobuf type {@code essys_middle.LaneData}
   */
  public static final class LaneData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:essys_middle.LaneData)
      LaneDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LaneData.class.getName());
    }
    // Use LaneData.newBuilder() to construct.
    private LaneData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LaneData() {
      direction_ = 0;
      laneType_ = 0;
      ldwAvailability_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return essys_middle.Mobileye.internal_static_essys_middle_LaneData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return essys_middle.Mobileye.internal_static_essys_middle_LaneData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              essys_middle.Mobileye.LaneData.class, essys_middle.Mobileye.LaneData.Builder.class);
    }

    private int bitField0_;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private int direction_ = 0;
    /**
     * <code>optional .essys_middle.Direction direction = 1;</code>
     * @return Whether the direction field is set.
     */
    @java.lang.Override public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .essys_middle.Direction direction = 1;</code>
     * @return The direction.
     */
    @java.lang.Override public essys_middle.Mobileye.Direction getDirection() {
      essys_middle.Mobileye.Direction result = essys_middle.Mobileye.Direction.forNumber(direction_);
      return result == null ? essys_middle.Mobileye.Direction.UNKNOWN : result;
    }

    public static final int DISTANCE_FIELD_NUMBER = 2;
    private double distance_ = 0D;
    /**
     * <pre>
     * -40 ~ 40
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     * @return Whether the distance field is set.
     */
    @java.lang.Override
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * -40 ~ 40
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     * @return The distance.
     */
    @java.lang.Override
    public double getDistance() {
      return distance_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 3;
    private int confidence_ = 0;
    /**
     * <pre>
     * 0 ~ 3
     * </pre>
     *
     * <code>optional uint32 confidence = 3;</code>
     * @return Whether the confidence field is set.
     */
    @java.lang.Override
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 0 ~ 3
     * </pre>
     *
     * <code>optional uint32 confidence = 3;</code>
     * @return The confidence.
     */
    @java.lang.Override
    public int getConfidence() {
      return confidence_;
    }

    public static final int LANE_TYPE_FIELD_NUMBER = 4;
    private int laneType_ = 0;
    /**
     * <code>optional .essys_middle.LaneType lane_type = 4;</code>
     * @return Whether the laneType field is set.
     */
    @java.lang.Override public boolean hasLaneType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .essys_middle.LaneType lane_type = 4;</code>
     * @return The laneType.
     */
    @java.lang.Override public essys_middle.Mobileye.LaneType getLaneType() {
      essys_middle.Mobileye.LaneType result = essys_middle.Mobileye.LaneType.forNumber(laneType_);
      return result == null ? essys_middle.Mobileye.LaneType.DASHED : result;
    }

    public static final int LANE_CURVATURE_FIELD_NUMBER = 5;
    private double laneCurvature_ = 0D;
    /**
     * <code>optional double lane_curvature = 5;</code>
     * @return Whether the laneCurvature field is set.
     */
    @java.lang.Override
    public boolean hasLaneCurvature() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double lane_curvature = 5;</code>
     * @return The laneCurvature.
     */
    @java.lang.Override
    public double getLaneCurvature() {
      return laneCurvature_;
    }

    public static final int LANE_HEADING_FIELD_NUMBER = 6;
    private double laneHeading_ = 0D;
    /**
     * <code>optional double lane_heading = 6;</code>
     * @return Whether the laneHeading field is set.
     */
    @java.lang.Override
    public boolean hasLaneHeading() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double lane_heading = 6;</code>
     * @return The laneHeading.
     */
    @java.lang.Override
    public double getLaneHeading() {
      return laneHeading_;
    }

    public static final int PITCH_ANGLE_FIELD_NUMBER = 7;
    private double pitchAngle_ = 0D;
    /**
     * <code>optional double pitch_angle = 7;</code>
     * @return Whether the pitchAngle field is set.
     */
    @java.lang.Override
    public boolean hasPitchAngle() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double pitch_angle = 7;</code>
     * @return The pitchAngle.
     */
    @java.lang.Override
    public double getPitchAngle() {
      return pitchAngle_;
    }

    public static final int YAW_ANGLE_FIELD_NUMBER = 8;
    private double yawAngle_ = 0D;
    /**
     * <code>optional double yaw_angle = 8;</code>
     * @return Whether the yawAngle field is set.
     */
    @java.lang.Override
    public boolean hasYawAngle() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double yaw_angle = 8;</code>
     * @return The yawAngle.
     */
    @java.lang.Override
    public double getYawAngle() {
      return yawAngle_;
    }

    public static final int LDW_AVAILABILITY_FIELD_NUMBER = 9;
    private int ldwAvailability_ = 0;
    /**
     * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
     * @return Whether the ldwAvailability field is set.
     */
    @java.lang.Override public boolean hasLdwAvailability() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
     * @return The ldwAvailability.
     */
    @java.lang.Override public essys_middle.Mobileye.LDWAvailability getLdwAvailability() {
      essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(ldwAvailability_);
      return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, confidence_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, laneType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, laneCurvature_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, laneHeading_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, pitchAngle_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, yawAngle_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeEnum(9, ldwAvailability_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, confidence_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, laneType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, laneCurvature_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, laneHeading_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pitchAngle_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, yawAngle_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, ldwAvailability_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof essys_middle.Mobileye.LaneData)) {
        return super.equals(obj);
      }
      essys_middle.Mobileye.LaneData other = (essys_middle.Mobileye.LaneData) obj;

      if (hasDirection() != other.hasDirection()) return false;
      if (hasDirection()) {
        if (direction_ != other.direction_) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (java.lang.Double.doubleToLongBits(getDistance())
            != java.lang.Double.doubleToLongBits(
                other.getDistance())) return false;
      }
      if (hasConfidence() != other.hasConfidence()) return false;
      if (hasConfidence()) {
        if (getConfidence()
            != other.getConfidence()) return false;
      }
      if (hasLaneType() != other.hasLaneType()) return false;
      if (hasLaneType()) {
        if (laneType_ != other.laneType_) return false;
      }
      if (hasLaneCurvature() != other.hasLaneCurvature()) return false;
      if (hasLaneCurvature()) {
        if (java.lang.Double.doubleToLongBits(getLaneCurvature())
            != java.lang.Double.doubleToLongBits(
                other.getLaneCurvature())) return false;
      }
      if (hasLaneHeading() != other.hasLaneHeading()) return false;
      if (hasLaneHeading()) {
        if (java.lang.Double.doubleToLongBits(getLaneHeading())
            != java.lang.Double.doubleToLongBits(
                other.getLaneHeading())) return false;
      }
      if (hasPitchAngle() != other.hasPitchAngle()) return false;
      if (hasPitchAngle()) {
        if (java.lang.Double.doubleToLongBits(getPitchAngle())
            != java.lang.Double.doubleToLongBits(
                other.getPitchAngle())) return false;
      }
      if (hasYawAngle() != other.hasYawAngle()) return false;
      if (hasYawAngle()) {
        if (java.lang.Double.doubleToLongBits(getYawAngle())
            != java.lang.Double.doubleToLongBits(
                other.getYawAngle())) return false;
      }
      if (hasLdwAvailability() != other.hasLdwAvailability()) return false;
      if (hasLdwAvailability()) {
        if (ldwAvailability_ != other.ldwAvailability_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + direction_;
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDistance()));
      }
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence();
      }
      if (hasLaneType()) {
        hash = (37 * hash) + LANE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + laneType_;
      }
      if (hasLaneCurvature()) {
        hash = (37 * hash) + LANE_CURVATURE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLaneCurvature()));
      }
      if (hasLaneHeading()) {
        hash = (37 * hash) + LANE_HEADING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLaneHeading()));
      }
      if (hasPitchAngle()) {
        hash = (37 * hash) + PITCH_ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPitchAngle()));
      }
      if (hasYawAngle()) {
        hash = (37 * hash) + YAW_ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getYawAngle()));
      }
      if (hasLdwAvailability()) {
        hash = (37 * hash) + LDW_AVAILABILITY_FIELD_NUMBER;
        hash = (53 * hash) + ldwAvailability_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static essys_middle.Mobileye.LaneData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static essys_middle.Mobileye.LaneData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static essys_middle.Mobileye.LaneData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static essys_middle.Mobileye.LaneData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(essys_middle.Mobileye.LaneData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code essys_middle.LaneData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:essys_middle.LaneData)
        essys_middle.Mobileye.LaneDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return essys_middle.Mobileye.internal_static_essys_middle_LaneData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return essys_middle.Mobileye.internal_static_essys_middle_LaneData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                essys_middle.Mobileye.LaneData.class, essys_middle.Mobileye.LaneData.Builder.class);
      }

      // Construct using essys_middle.Mobileye.LaneData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        direction_ = 0;
        distance_ = 0D;
        confidence_ = 0;
        laneType_ = 0;
        laneCurvature_ = 0D;
        laneHeading_ = 0D;
        pitchAngle_ = 0D;
        yawAngle_ = 0D;
        ldwAvailability_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return essys_middle.Mobileye.internal_static_essys_middle_LaneData_descriptor;
      }

      @java.lang.Override
      public essys_middle.Mobileye.LaneData getDefaultInstanceForType() {
        return essys_middle.Mobileye.LaneData.getDefaultInstance();
      }

      @java.lang.Override
      public essys_middle.Mobileye.LaneData build() {
        essys_middle.Mobileye.LaneData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public essys_middle.Mobileye.LaneData buildPartial() {
        essys_middle.Mobileye.LaneData result = new essys_middle.Mobileye.LaneData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(essys_middle.Mobileye.LaneData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.direction_ = direction_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.confidence_ = confidence_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.laneType_ = laneType_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.laneCurvature_ = laneCurvature_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.laneHeading_ = laneHeading_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.pitchAngle_ = pitchAngle_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.yawAngle_ = yawAngle_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.ldwAvailability_ = ldwAvailability_;
          to_bitField0_ |= 0x00000100;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof essys_middle.Mobileye.LaneData) {
          return mergeFrom((essys_middle.Mobileye.LaneData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(essys_middle.Mobileye.LaneData other) {
        if (other == essys_middle.Mobileye.LaneData.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasLaneType()) {
          setLaneType(other.getLaneType());
        }
        if (other.hasLaneCurvature()) {
          setLaneCurvature(other.getLaneCurvature());
        }
        if (other.hasLaneHeading()) {
          setLaneHeading(other.getLaneHeading());
        }
        if (other.hasPitchAngle()) {
          setPitchAngle(other.getPitchAngle());
        }
        if (other.hasYawAngle()) {
          setYawAngle(other.getYawAngle());
        }
        if (other.hasLdwAvailability()) {
          setLdwAvailability(other.getLdwAvailability());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                essys_middle.Mobileye.Direction tmpValue =
                    essys_middle.Mobileye.Direction.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  direction_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 17: {
                distance_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                confidence_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int tmpRaw = input.readEnum();
                essys_middle.Mobileye.LaneType tmpValue =
                    essys_middle.Mobileye.LaneType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  laneType_ = tmpRaw;
                  bitField0_ |= 0x00000008;
                }
                break;
              } // case 32
              case 41: {
                laneCurvature_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                laneHeading_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                pitchAngle_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                yawAngle_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 72: {
                int tmpRaw = input.readEnum();
                essys_middle.Mobileye.LDWAvailability tmpValue =
                    essys_middle.Mobileye.LDWAvailability.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(9, tmpRaw);
                } else {
                  ldwAvailability_ = tmpRaw;
                  bitField0_ |= 0x00000100;
                }
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int direction_ = 0;
      /**
       * <code>optional .essys_middle.Direction direction = 1;</code>
       * @return Whether the direction field is set.
       */
      @java.lang.Override public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .essys_middle.Direction direction = 1;</code>
       * @return The direction.
       */
      @java.lang.Override
      public essys_middle.Mobileye.Direction getDirection() {
        essys_middle.Mobileye.Direction result = essys_middle.Mobileye.Direction.forNumber(direction_);
        return result == null ? essys_middle.Mobileye.Direction.UNKNOWN : result;
      }
      /**
       * <code>optional .essys_middle.Direction direction = 1;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(essys_middle.Mobileye.Direction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .essys_middle.Direction direction = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000001);
        direction_ = 0;
        onChanged();
        return this;
      }

      private double distance_ ;
      /**
       * <pre>
       * -40 ~ 40
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       * @return Whether the distance field is set.
       */
      @java.lang.Override
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * -40 ~ 40
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       * @return The distance.
       */
      @java.lang.Override
      public double getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * -40 ~ 40
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(double value) {

        distance_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * -40 ~ 40
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0D;
        onChanged();
        return this;
      }

      private int confidence_ ;
      /**
       * <pre>
       * 0 ~ 3
       * </pre>
       *
       * <code>optional uint32 confidence = 3;</code>
       * @return Whether the confidence field is set.
       */
      @java.lang.Override
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * 0 ~ 3
       * </pre>
       *
       * <code>optional uint32 confidence = 3;</code>
       * @return The confidence.
       */
      @java.lang.Override
      public int getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       * 0 ~ 3
       * </pre>
       *
       * <code>optional uint32 confidence = 3;</code>
       * @param value The confidence to set.
       * @return This builder for chaining.
       */
      public Builder setConfidence(int value) {

        confidence_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0 ~ 3
       * </pre>
       *
       * <code>optional uint32 confidence = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        confidence_ = 0;
        onChanged();
        return this;
      }

      private int laneType_ = 0;
      /**
       * <code>optional .essys_middle.LaneType lane_type = 4;</code>
       * @return Whether the laneType field is set.
       */
      @java.lang.Override public boolean hasLaneType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .essys_middle.LaneType lane_type = 4;</code>
       * @return The laneType.
       */
      @java.lang.Override
      public essys_middle.Mobileye.LaneType getLaneType() {
        essys_middle.Mobileye.LaneType result = essys_middle.Mobileye.LaneType.forNumber(laneType_);
        return result == null ? essys_middle.Mobileye.LaneType.DASHED : result;
      }
      /**
       * <code>optional .essys_middle.LaneType lane_type = 4;</code>
       * @param value The laneType to set.
       * @return This builder for chaining.
       */
      public Builder setLaneType(essys_middle.Mobileye.LaneType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        laneType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .essys_middle.LaneType lane_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        laneType_ = 0;
        onChanged();
        return this;
      }

      private double laneCurvature_ ;
      /**
       * <code>optional double lane_curvature = 5;</code>
       * @return Whether the laneCurvature field is set.
       */
      @java.lang.Override
      public boolean hasLaneCurvature() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double lane_curvature = 5;</code>
       * @return The laneCurvature.
       */
      @java.lang.Override
      public double getLaneCurvature() {
        return laneCurvature_;
      }
      /**
       * <code>optional double lane_curvature = 5;</code>
       * @param value The laneCurvature to set.
       * @return This builder for chaining.
       */
      public Builder setLaneCurvature(double value) {

        laneCurvature_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lane_curvature = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneCurvature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        laneCurvature_ = 0D;
        onChanged();
        return this;
      }

      private double laneHeading_ ;
      /**
       * <code>optional double lane_heading = 6;</code>
       * @return Whether the laneHeading field is set.
       */
      @java.lang.Override
      public boolean hasLaneHeading() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double lane_heading = 6;</code>
       * @return The laneHeading.
       */
      @java.lang.Override
      public double getLaneHeading() {
        return laneHeading_;
      }
      /**
       * <code>optional double lane_heading = 6;</code>
       * @param value The laneHeading to set.
       * @return This builder for chaining.
       */
      public Builder setLaneHeading(double value) {

        laneHeading_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lane_heading = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneHeading() {
        bitField0_ = (bitField0_ & ~0x00000020);
        laneHeading_ = 0D;
        onChanged();
        return this;
      }

      private double pitchAngle_ ;
      /**
       * <code>optional double pitch_angle = 7;</code>
       * @return Whether the pitchAngle field is set.
       */
      @java.lang.Override
      public boolean hasPitchAngle() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double pitch_angle = 7;</code>
       * @return The pitchAngle.
       */
      @java.lang.Override
      public double getPitchAngle() {
        return pitchAngle_;
      }
      /**
       * <code>optional double pitch_angle = 7;</code>
       * @param value The pitchAngle to set.
       * @return This builder for chaining.
       */
      public Builder setPitchAngle(double value) {

        pitchAngle_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitch_angle = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pitchAngle_ = 0D;
        onChanged();
        return this;
      }

      private double yawAngle_ ;
      /**
       * <code>optional double yaw_angle = 8;</code>
       * @return Whether the yawAngle field is set.
       */
      @java.lang.Override
      public boolean hasYawAngle() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double yaw_angle = 8;</code>
       * @return The yawAngle.
       */
      @java.lang.Override
      public double getYawAngle() {
        return yawAngle_;
      }
      /**
       * <code>optional double yaw_angle = 8;</code>
       * @param value The yawAngle to set.
       * @return This builder for chaining.
       */
      public Builder setYawAngle(double value) {

        yawAngle_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yaw_angle = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearYawAngle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        yawAngle_ = 0D;
        onChanged();
        return this;
      }

      private int ldwAvailability_ = 0;
      /**
       * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
       * @return Whether the ldwAvailability field is set.
       */
      @java.lang.Override public boolean hasLdwAvailability() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
       * @return The ldwAvailability.
       */
      @java.lang.Override
      public essys_middle.Mobileye.LDWAvailability getLdwAvailability() {
        essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(ldwAvailability_);
        return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
       * @param value The ldwAvailability to set.
       * @return This builder for chaining.
       */
      public Builder setLdwAvailability(essys_middle.Mobileye.LDWAvailability value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        ldwAvailability_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability ldw_availability = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLdwAvailability() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ldwAvailability_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:essys_middle.LaneData)
    }

    // @@protoc_insertion_point(class_scope:essys_middle.LaneData)
    private static final essys_middle.Mobileye.LaneData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new essys_middle.Mobileye.LaneData();
    }

    public static essys_middle.Mobileye.LaneData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LaneData>
        PARSER = new com.google.protobuf.AbstractParser<LaneData>() {
      @java.lang.Override
      public LaneData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LaneData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LaneData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public essys_middle.Mobileye.LaneData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MobileyeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:essys_middle.MobileyeData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> 
        getPerceptionObstacleList();
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index);
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    int getPerceptionObstacleCount();
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
        getPerceptionObstacleOrBuilderList();
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
        int index);

    /**
     * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
     * @return Whether the leftLdwAvailability field is set.
     */
    boolean hasLeftLdwAvailability();
    /**
     * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
     * @return The leftLdwAvailability.
     */
    essys_middle.Mobileye.LDWAvailability getLeftLdwAvailability();

    /**
     * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
     * @return Whether the rightLdwAvailability field is set.
     */
    boolean hasRightLdwAvailability();
    /**
     * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
     * @return The rightLdwAvailability.
     */
    essys_middle.Mobileye.LDWAvailability getRightLdwAvailability();
  }
  /**
   * Protobuf type {@code essys_middle.MobileyeData}
   */
  public static final class MobileyeData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:essys_middle.MobileyeData)
      MobileyeDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        MobileyeData.class.getName());
    }
    // Use MobileyeData.newBuilder() to construct.
    private MobileyeData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MobileyeData() {
      perceptionObstacle_ = java.util.Collections.emptyList();
      leftLdwAvailability_ = 0;
      rightLdwAvailability_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return essys_middle.Mobileye.internal_static_essys_middle_MobileyeData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return essys_middle.Mobileye.internal_static_essys_middle_MobileyeData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              essys_middle.Mobileye.MobileyeData.class, essys_middle.Mobileye.MobileyeData.Builder.class);
    }

    private int bitField0_;
    public static final int PERCEPTION_OBSTACLE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> perceptionObstacle_;
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> getPerceptionObstacleList() {
      return perceptionObstacle_;
    }
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
        getPerceptionObstacleOrBuilderList() {
      return perceptionObstacle_;
    }
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public int getPerceptionObstacleCount() {
      return perceptionObstacle_.size();
    }
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index) {
      return perceptionObstacle_.get(index);
    }
    /**
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
        int index) {
      return perceptionObstacle_.get(index);
    }

    public static final int LEFT_LDW_AVAILABILITY_FIELD_NUMBER = 2;
    private int leftLdwAvailability_ = 0;
    /**
     * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
     * @return Whether the leftLdwAvailability field is set.
     */
    @java.lang.Override public boolean hasLeftLdwAvailability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
     * @return The leftLdwAvailability.
     */
    @java.lang.Override public essys_middle.Mobileye.LDWAvailability getLeftLdwAvailability() {
      essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(leftLdwAvailability_);
      return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
    }

    public static final int RIGHT_LDW_AVAILABILITY_FIELD_NUMBER = 3;
    private int rightLdwAvailability_ = 0;
    /**
     * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
     * @return Whether the rightLdwAvailability field is set.
     */
    @java.lang.Override public boolean hasRightLdwAvailability() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
     * @return The rightLdwAvailability.
     */
    @java.lang.Override public essys_middle.Mobileye.LDWAvailability getRightLdwAvailability() {
      essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(rightLdwAvailability_);
      return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < perceptionObstacle_.size(); i++) {
        output.writeMessage(1, perceptionObstacle_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(2, leftLdwAvailability_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(3, rightLdwAvailability_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < perceptionObstacle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, perceptionObstacle_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, leftLdwAvailability_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, rightLdwAvailability_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof essys_middle.Mobileye.MobileyeData)) {
        return super.equals(obj);
      }
      essys_middle.Mobileye.MobileyeData other = (essys_middle.Mobileye.MobileyeData) obj;

      if (!getPerceptionObstacleList()
          .equals(other.getPerceptionObstacleList())) return false;
      if (hasLeftLdwAvailability() != other.hasLeftLdwAvailability()) return false;
      if (hasLeftLdwAvailability()) {
        if (leftLdwAvailability_ != other.leftLdwAvailability_) return false;
      }
      if (hasRightLdwAvailability() != other.hasRightLdwAvailability()) return false;
      if (hasRightLdwAvailability()) {
        if (rightLdwAvailability_ != other.rightLdwAvailability_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPerceptionObstacleCount() > 0) {
        hash = (37 * hash) + PERCEPTION_OBSTACLE_FIELD_NUMBER;
        hash = (53 * hash) + getPerceptionObstacleList().hashCode();
      }
      if (hasLeftLdwAvailability()) {
        hash = (37 * hash) + LEFT_LDW_AVAILABILITY_FIELD_NUMBER;
        hash = (53 * hash) + leftLdwAvailability_;
      }
      if (hasRightLdwAvailability()) {
        hash = (37 * hash) + RIGHT_LDW_AVAILABILITY_FIELD_NUMBER;
        hash = (53 * hash) + rightLdwAvailability_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static essys_middle.Mobileye.MobileyeData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static essys_middle.Mobileye.MobileyeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static essys_middle.Mobileye.MobileyeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static essys_middle.Mobileye.MobileyeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(essys_middle.Mobileye.MobileyeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code essys_middle.MobileyeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:essys_middle.MobileyeData)
        essys_middle.Mobileye.MobileyeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return essys_middle.Mobileye.internal_static_essys_middle_MobileyeData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return essys_middle.Mobileye.internal_static_essys_middle_MobileyeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                essys_middle.Mobileye.MobileyeData.class, essys_middle.Mobileye.MobileyeData.Builder.class);
      }

      // Construct using essys_middle.Mobileye.MobileyeData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacle_ = java.util.Collections.emptyList();
        } else {
          perceptionObstacle_ = null;
          perceptionObstacleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        leftLdwAvailability_ = 0;
        rightLdwAvailability_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return essys_middle.Mobileye.internal_static_essys_middle_MobileyeData_descriptor;
      }

      @java.lang.Override
      public essys_middle.Mobileye.MobileyeData getDefaultInstanceForType() {
        return essys_middle.Mobileye.MobileyeData.getDefaultInstance();
      }

      @java.lang.Override
      public essys_middle.Mobileye.MobileyeData build() {
        essys_middle.Mobileye.MobileyeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public essys_middle.Mobileye.MobileyeData buildPartial() {
        essys_middle.Mobileye.MobileyeData result = new essys_middle.Mobileye.MobileyeData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(essys_middle.Mobileye.MobileyeData result) {
        if (perceptionObstacleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            perceptionObstacle_ = java.util.Collections.unmodifiableList(perceptionObstacle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.perceptionObstacle_ = perceptionObstacle_;
        } else {
          result.perceptionObstacle_ = perceptionObstacleBuilder_.build();
        }
      }

      private void buildPartial0(essys_middle.Mobileye.MobileyeData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.leftLdwAvailability_ = leftLdwAvailability_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rightLdwAvailability_ = rightLdwAvailability_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof essys_middle.Mobileye.MobileyeData) {
          return mergeFrom((essys_middle.Mobileye.MobileyeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(essys_middle.Mobileye.MobileyeData other) {
        if (other == essys_middle.Mobileye.MobileyeData.getDefaultInstance()) return this;
        if (perceptionObstacleBuilder_ == null) {
          if (!other.perceptionObstacle_.isEmpty()) {
            if (perceptionObstacle_.isEmpty()) {
              perceptionObstacle_ = other.perceptionObstacle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePerceptionObstacleIsMutable();
              perceptionObstacle_.addAll(other.perceptionObstacle_);
            }
            onChanged();
          }
        } else {
          if (!other.perceptionObstacle_.isEmpty()) {
            if (perceptionObstacleBuilder_.isEmpty()) {
              perceptionObstacleBuilder_.dispose();
              perceptionObstacleBuilder_ = null;
              perceptionObstacle_ = other.perceptionObstacle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              perceptionObstacleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPerceptionObstacleFieldBuilder() : null;
            } else {
              perceptionObstacleBuilder_.addAllMessages(other.perceptionObstacle_);
            }
          }
        }
        if (other.hasLeftLdwAvailability()) {
          setLeftLdwAvailability(other.getLeftLdwAvailability());
        }
        if (other.hasRightLdwAvailability()) {
          setRightLdwAvailability(other.getRightLdwAvailability());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.parser(),
                        extensionRegistry);
                if (perceptionObstacleBuilder_ == null) {
                  ensurePerceptionObstacleIsMutable();
                  perceptionObstacle_.add(m);
                } else {
                  perceptionObstacleBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                essys_middle.Mobileye.LDWAvailability tmpValue =
                    essys_middle.Mobileye.LDWAvailability.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  leftLdwAvailability_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                int tmpRaw = input.readEnum();
                essys_middle.Mobileye.LDWAvailability tmpValue =
                    essys_middle.Mobileye.LDWAvailability.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  rightLdwAvailability_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> perceptionObstacle_ =
        java.util.Collections.emptyList();
      private void ensurePerceptionObstacleIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          perceptionObstacle_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>(perceptionObstacle_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> perceptionObstacleBuilder_;

      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> getPerceptionObstacleList() {
        if (perceptionObstacleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(perceptionObstacle_);
        } else {
          return perceptionObstacleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public int getPerceptionObstacleCount() {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.size();
        } else {
          return perceptionObstacleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index) {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.get(index);
        } else {
          return perceptionObstacleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder setPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.set(index, value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder setPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.set(index, builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(index, value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(index, builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addAllPerceptionObstacle(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> values) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, perceptionObstacle_);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder clearPerceptionObstacle() {
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          perceptionObstacleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder removePerceptionObstacle(int index) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.remove(index);
          onChanged();
        } else {
          perceptionObstacleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder getPerceptionObstacleBuilder(
          int index) {
        return getPerceptionObstacleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
          int index) {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.get(index);  } else {
          return perceptionObstacleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
           getPerceptionObstacleOrBuilderList() {
        if (perceptionObstacleBuilder_ != null) {
          return perceptionObstacleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(perceptionObstacle_);
        }
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder addPerceptionObstacleBuilder() {
        return getPerceptionObstacleFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder addPerceptionObstacleBuilder(
          int index) {
        return getPerceptionObstacleFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder> 
           getPerceptionObstacleBuilderList() {
        return getPerceptionObstacleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
          getPerceptionObstacleFieldBuilder() {
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder>(
                  perceptionObstacle_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          perceptionObstacle_ = null;
        }
        return perceptionObstacleBuilder_;
      }

      private int leftLdwAvailability_ = 0;
      /**
       * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
       * @return Whether the leftLdwAvailability field is set.
       */
      @java.lang.Override public boolean hasLeftLdwAvailability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
       * @return The leftLdwAvailability.
       */
      @java.lang.Override
      public essys_middle.Mobileye.LDWAvailability getLeftLdwAvailability() {
        essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(leftLdwAvailability_);
        return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
       * @param value The leftLdwAvailability to set.
       * @return This builder for chaining.
       */
      public Builder setLeftLdwAvailability(essys_middle.Mobileye.LDWAvailability value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        leftLdwAvailability_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability left_ldw_availability = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftLdwAvailability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leftLdwAvailability_ = 0;
        onChanged();
        return this;
      }

      private int rightLdwAvailability_ = 0;
      /**
       * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
       * @return Whether the rightLdwAvailability field is set.
       */
      @java.lang.Override public boolean hasRightLdwAvailability() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
       * @return The rightLdwAvailability.
       */
      @java.lang.Override
      public essys_middle.Mobileye.LDWAvailability getRightLdwAvailability() {
        essys_middle.Mobileye.LDWAvailability result = essys_middle.Mobileye.LDWAvailability.forNumber(rightLdwAvailability_);
        return result == null ? essys_middle.Mobileye.LDWAvailability.LINE_OUT : result;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
       * @param value The rightLdwAvailability to set.
       * @return This builder for chaining.
       */
      public Builder setRightLdwAvailability(essys_middle.Mobileye.LDWAvailability value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        rightLdwAvailability_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .essys_middle.LDWAvailability right_ldw_availability = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightLdwAvailability() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rightLdwAvailability_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:essys_middle.MobileyeData)
    }

    // @@protoc_insertion_point(class_scope:essys_middle.MobileyeData)
    private static final essys_middle.Mobileye.MobileyeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new essys_middle.Mobileye.MobileyeData();
    }

    public static essys_middle.Mobileye.MobileyeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MobileyeData>
        PARSER = new com.google.protobuf.AbstractParser<MobileyeData>() {
      @java.lang.Override
      public MobileyeData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MobileyeData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MobileyeData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public essys_middle.Mobileye.MobileyeData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_essys_middle_LaneData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_essys_middle_LaneData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_essys_middle_MobileyeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_essys_middle_MobileyeData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034modules/essys/mobileye.proto\022\014essys_mi" +
      "ddle\0322modules/perception/proto/perceptio" +
      "n_obstacle.proto\"\226\002\n\010LaneData\022*\n\tdirecti" +
      "on\030\001 \001(\0162\027.essys_middle.Direction\022\020\n\010dis" +
      "tance\030\002 \001(\001\022\022\n\nconfidence\030\003 \001(\r\022)\n\tlane_" +
      "type\030\004 \001(\0162\026.essys_middle.LaneType\022\026\n\016la" +
      "ne_curvature\030\005 \001(\001\022\024\n\014lane_heading\030\006 \001(\001" +
      "\022\023\n\013pitch_angle\030\007 \001(\001\022\021\n\tyaw_angle\030\010 \001(\001" +
      "\0227\n\020ldw_availability\030\t \001(\0162\035.essys_middl" +
      "e.LDWAvailability\"\317\001\n\014MobileyeData\022B\n\023pe" +
      "rception_obstacle\030\001 \003(\0132%.apollo.percept" +
      "ion.PerceptionObstacle\022<\n\025left_ldw_avail" +
      "ability\030\002 \001(\0162\035.essys_middle.LDWAvailabi" +
      "lity\022=\n\026right_ldw_availability\030\003 \001(\0162\035.e" +
      "ssys_middle.LDWAvailability*m\n\010LaneType\022" +
      "\n\n\006DASHED\020\000\022\t\n\005SOLID\020\001\022\010\n\004NONE\020\002\022\r\n\tROAD" +
      "_EDGE\020\003\022\024\n\020DOUBLE_LANE_MARK\020\004\022\016\n\nBOTTS_D" +
      "OTS\020\005\022\013\n\007INVALID\020\006*B\n\tDirection\022\013\n\007UNKNO" +
      "WN\020\000\022\t\n\005FRONT\020\001\022\t\n\005RIGHT\020\002\022\010\n\004REAR\020\003\022\010\n\004" +
      "LEFT\020\004*,\n\017LDWAvailability\022\014\n\010LINE_OUT\020\000\022" +
      "\013\n\007LINE_IN\020\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          apollo.perception.PerceptionObstacleOuterClass.getDescriptor(),
        });
    internal_static_essys_middle_LaneData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_essys_middle_LaneData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_essys_middle_LaneData_descriptor,
        new java.lang.String[] { "Direction", "Distance", "Confidence", "LaneType", "LaneCurvature", "LaneHeading", "PitchAngle", "YawAngle", "LdwAvailability", });
    internal_static_essys_middle_MobileyeData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_essys_middle_MobileyeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_essys_middle_MobileyeData_descriptor,
        new java.lang.String[] { "PerceptionObstacle", "LeftLdwAvailability", "RightLdwAvailability", });
    descriptor.resolveAllFeaturesImmutable();
    apollo.perception.PerceptionObstacleOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
