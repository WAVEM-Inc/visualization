// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/proto/vehicle_signal.proto
// Protobuf Java Version: 4.26.1

package apollo.common;

public final class VehicleSignalOuterClass {
  private VehicleSignalOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      VehicleSignalOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VehicleSignalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.common.VehicleSignal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
     * @return Whether the turnSignal field is set.
     */
    boolean hasTurnSignal();
    /**
     * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
     * @return The turnSignal.
     */
    apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal getTurnSignal();

    /**
     * <pre>
     * lights enable command
     * </pre>
     *
     * <code>optional bool high_beam = 2;</code>
     * @return Whether the highBeam field is set.
     */
    boolean hasHighBeam();
    /**
     * <pre>
     * lights enable command
     * </pre>
     *
     * <code>optional bool high_beam = 2;</code>
     * @return The highBeam.
     */
    boolean getHighBeam();

    /**
     * <code>optional bool low_beam = 3;</code>
     * @return Whether the lowBeam field is set.
     */
    boolean hasLowBeam();
    /**
     * <code>optional bool low_beam = 3;</code>
     * @return The lowBeam.
     */
    boolean getLowBeam();

    /**
     * <code>optional bool horn = 4;</code>
     * @return Whether the horn field is set.
     */
    boolean hasHorn();
    /**
     * <code>optional bool horn = 4;</code>
     * @return The horn.
     */
    boolean getHorn();

    /**
     * <code>optional bool emergency_light = 5;</code>
     * @return Whether the emergencyLight field is set.
     */
    boolean hasEmergencyLight();
    /**
     * <code>optional bool emergency_light = 5;</code>
     * @return The emergencyLight.
     */
    boolean getEmergencyLight();
  }
  /**
   * Protobuf type {@code apollo.common.VehicleSignal}
   */
  public static final class VehicleSignal extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.common.VehicleSignal)
      VehicleSignalOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        VehicleSignal.class.getName());
    }
    // Use VehicleSignal.newBuilder() to construct.
    private VehicleSignal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VehicleSignal() {
      turnSignal_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.common.VehicleSignalOuterClass.internal_static_apollo_common_VehicleSignal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.common.VehicleSignalOuterClass.internal_static_apollo_common_VehicleSignal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.common.VehicleSignalOuterClass.VehicleSignal.class, apollo.common.VehicleSignalOuterClass.VehicleSignal.Builder.class);
    }

    /**
     * Protobuf enum {@code apollo.common.VehicleSignal.TurnSignal}
     */
    public enum TurnSignal
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TURN_NONE = 0;</code>
       */
      TURN_NONE(0),
      /**
       * <code>TURN_LEFT = 1;</code>
       */
      TURN_LEFT(1),
      /**
       * <code>TURN_RIGHT = 2;</code>
       */
      TURN_RIGHT(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          TurnSignal.class.getName());
      }
      /**
       * <code>TURN_NONE = 0;</code>
       */
      public static final int TURN_NONE_VALUE = 0;
      /**
       * <code>TURN_LEFT = 1;</code>
       */
      public static final int TURN_LEFT_VALUE = 1;
      /**
       * <code>TURN_RIGHT = 2;</code>
       */
      public static final int TURN_RIGHT_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TurnSignal valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TurnSignal forNumber(int value) {
        switch (value) {
          case 0: return TURN_NONE;
          case 1: return TURN_LEFT;
          case 2: return TURN_RIGHT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TurnSignal>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TurnSignal> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TurnSignal>() {
              public TurnSignal findValueByNumber(int number) {
                return TurnSignal.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.common.VehicleSignalOuterClass.VehicleSignal.getDescriptor().getEnumTypes().get(0);
      }

      private static final TurnSignal[] VALUES = values();

      public static TurnSignal valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TurnSignal(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.common.VehicleSignal.TurnSignal)
    }

    private int bitField0_;
    public static final int TURN_SIGNAL_FIELD_NUMBER = 1;
    private int turnSignal_ = 0;
    /**
     * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
     * @return Whether the turnSignal field is set.
     */
    @java.lang.Override public boolean hasTurnSignal() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
     * @return The turnSignal.
     */
    @java.lang.Override public apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal getTurnSignal() {
      apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal result = apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal.forNumber(turnSignal_);
      return result == null ? apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal.TURN_NONE : result;
    }

    public static final int HIGH_BEAM_FIELD_NUMBER = 2;
    private boolean highBeam_ = false;
    /**
     * <pre>
     * lights enable command
     * </pre>
     *
     * <code>optional bool high_beam = 2;</code>
     * @return Whether the highBeam field is set.
     */
    @java.lang.Override
    public boolean hasHighBeam() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * lights enable command
     * </pre>
     *
     * <code>optional bool high_beam = 2;</code>
     * @return The highBeam.
     */
    @java.lang.Override
    public boolean getHighBeam() {
      return highBeam_;
    }

    public static final int LOW_BEAM_FIELD_NUMBER = 3;
    private boolean lowBeam_ = false;
    /**
     * <code>optional bool low_beam = 3;</code>
     * @return Whether the lowBeam field is set.
     */
    @java.lang.Override
    public boolean hasLowBeam() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool low_beam = 3;</code>
     * @return The lowBeam.
     */
    @java.lang.Override
    public boolean getLowBeam() {
      return lowBeam_;
    }

    public static final int HORN_FIELD_NUMBER = 4;
    private boolean horn_ = false;
    /**
     * <code>optional bool horn = 4;</code>
     * @return Whether the horn field is set.
     */
    @java.lang.Override
    public boolean hasHorn() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool horn = 4;</code>
     * @return The horn.
     */
    @java.lang.Override
    public boolean getHorn() {
      return horn_;
    }

    public static final int EMERGENCY_LIGHT_FIELD_NUMBER = 5;
    private boolean emergencyLight_ = false;
    /**
     * <code>optional bool emergency_light = 5;</code>
     * @return Whether the emergencyLight field is set.
     */
    @java.lang.Override
    public boolean hasEmergencyLight() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool emergency_light = 5;</code>
     * @return The emergencyLight.
     */
    @java.lang.Override
    public boolean getEmergencyLight() {
      return emergencyLight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, turnSignal_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, highBeam_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, lowBeam_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, horn_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, emergencyLight_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, turnSignal_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, highBeam_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, lowBeam_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, horn_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, emergencyLight_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.common.VehicleSignalOuterClass.VehicleSignal)) {
        return super.equals(obj);
      }
      apollo.common.VehicleSignalOuterClass.VehicleSignal other = (apollo.common.VehicleSignalOuterClass.VehicleSignal) obj;

      if (hasTurnSignal() != other.hasTurnSignal()) return false;
      if (hasTurnSignal()) {
        if (turnSignal_ != other.turnSignal_) return false;
      }
      if (hasHighBeam() != other.hasHighBeam()) return false;
      if (hasHighBeam()) {
        if (getHighBeam()
            != other.getHighBeam()) return false;
      }
      if (hasLowBeam() != other.hasLowBeam()) return false;
      if (hasLowBeam()) {
        if (getLowBeam()
            != other.getLowBeam()) return false;
      }
      if (hasHorn() != other.hasHorn()) return false;
      if (hasHorn()) {
        if (getHorn()
            != other.getHorn()) return false;
      }
      if (hasEmergencyLight() != other.hasEmergencyLight()) return false;
      if (hasEmergencyLight()) {
        if (getEmergencyLight()
            != other.getEmergencyLight()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTurnSignal()) {
        hash = (37 * hash) + TURN_SIGNAL_FIELD_NUMBER;
        hash = (53 * hash) + turnSignal_;
      }
      if (hasHighBeam()) {
        hash = (37 * hash) + HIGH_BEAM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHighBeam());
      }
      if (hasLowBeam()) {
        hash = (37 * hash) + LOW_BEAM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLowBeam());
      }
      if (hasHorn()) {
        hash = (37 * hash) + HORN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHorn());
      }
      if (hasEmergencyLight()) {
        hash = (37 * hash) + EMERGENCY_LIGHT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEmergencyLight());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.common.VehicleSignalOuterClass.VehicleSignal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.common.VehicleSignalOuterClass.VehicleSignal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.common.VehicleSignal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.common.VehicleSignal)
        apollo.common.VehicleSignalOuterClass.VehicleSignalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.common.VehicleSignalOuterClass.internal_static_apollo_common_VehicleSignal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.common.VehicleSignalOuterClass.internal_static_apollo_common_VehicleSignal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.common.VehicleSignalOuterClass.VehicleSignal.class, apollo.common.VehicleSignalOuterClass.VehicleSignal.Builder.class);
      }

      // Construct using apollo.common.VehicleSignalOuterClass.VehicleSignal.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        turnSignal_ = 0;
        highBeam_ = false;
        lowBeam_ = false;
        horn_ = false;
        emergencyLight_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.common.VehicleSignalOuterClass.internal_static_apollo_common_VehicleSignal_descriptor;
      }

      @java.lang.Override
      public apollo.common.VehicleSignalOuterClass.VehicleSignal getDefaultInstanceForType() {
        return apollo.common.VehicleSignalOuterClass.VehicleSignal.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.common.VehicleSignalOuterClass.VehicleSignal build() {
        apollo.common.VehicleSignalOuterClass.VehicleSignal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.common.VehicleSignalOuterClass.VehicleSignal buildPartial() {
        apollo.common.VehicleSignalOuterClass.VehicleSignal result = new apollo.common.VehicleSignalOuterClass.VehicleSignal(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.common.VehicleSignalOuterClass.VehicleSignal result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.turnSignal_ = turnSignal_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.highBeam_ = highBeam_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.lowBeam_ = lowBeam_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.horn_ = horn_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.emergencyLight_ = emergencyLight_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.common.VehicleSignalOuterClass.VehicleSignal) {
          return mergeFrom((apollo.common.VehicleSignalOuterClass.VehicleSignal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.common.VehicleSignalOuterClass.VehicleSignal other) {
        if (other == apollo.common.VehicleSignalOuterClass.VehicleSignal.getDefaultInstance()) return this;
        if (other.hasTurnSignal()) {
          setTurnSignal(other.getTurnSignal());
        }
        if (other.hasHighBeam()) {
          setHighBeam(other.getHighBeam());
        }
        if (other.hasLowBeam()) {
          setLowBeam(other.getLowBeam());
        }
        if (other.hasHorn()) {
          setHorn(other.getHorn());
        }
        if (other.hasEmergencyLight()) {
          setEmergencyLight(other.getEmergencyLight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal tmpValue =
                    apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  turnSignal_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                highBeam_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                lowBeam_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                horn_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                emergencyLight_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int turnSignal_ = 0;
      /**
       * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
       * @return Whether the turnSignal field is set.
       */
      @java.lang.Override public boolean hasTurnSignal() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
       * @return The turnSignal.
       */
      @java.lang.Override
      public apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal getTurnSignal() {
        apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal result = apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal.forNumber(turnSignal_);
        return result == null ? apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal.TURN_NONE : result;
      }
      /**
       * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
       * @param value The turnSignal to set.
       * @return This builder for chaining.
       */
      public Builder setTurnSignal(apollo.common.VehicleSignalOuterClass.VehicleSignal.TurnSignal value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        turnSignal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.VehicleSignal.TurnSignal turn_signal = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTurnSignal() {
        bitField0_ = (bitField0_ & ~0x00000001);
        turnSignal_ = 0;
        onChanged();
        return this;
      }

      private boolean highBeam_ ;
      /**
       * <pre>
       * lights enable command
       * </pre>
       *
       * <code>optional bool high_beam = 2;</code>
       * @return Whether the highBeam field is set.
       */
      @java.lang.Override
      public boolean hasHighBeam() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * lights enable command
       * </pre>
       *
       * <code>optional bool high_beam = 2;</code>
       * @return The highBeam.
       */
      @java.lang.Override
      public boolean getHighBeam() {
        return highBeam_;
      }
      /**
       * <pre>
       * lights enable command
       * </pre>
       *
       * <code>optional bool high_beam = 2;</code>
       * @param value The highBeam to set.
       * @return This builder for chaining.
       */
      public Builder setHighBeam(boolean value) {

        highBeam_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lights enable command
       * </pre>
       *
       * <code>optional bool high_beam = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighBeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        highBeam_ = false;
        onChanged();
        return this;
      }

      private boolean lowBeam_ ;
      /**
       * <code>optional bool low_beam = 3;</code>
       * @return Whether the lowBeam field is set.
       */
      @java.lang.Override
      public boolean hasLowBeam() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool low_beam = 3;</code>
       * @return The lowBeam.
       */
      @java.lang.Override
      public boolean getLowBeam() {
        return lowBeam_;
      }
      /**
       * <code>optional bool low_beam = 3;</code>
       * @param value The lowBeam to set.
       * @return This builder for chaining.
       */
      public Builder setLowBeam(boolean value) {

        lowBeam_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool low_beam = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowBeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lowBeam_ = false;
        onChanged();
        return this;
      }

      private boolean horn_ ;
      /**
       * <code>optional bool horn = 4;</code>
       * @return Whether the horn field is set.
       */
      @java.lang.Override
      public boolean hasHorn() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool horn = 4;</code>
       * @return The horn.
       */
      @java.lang.Override
      public boolean getHorn() {
        return horn_;
      }
      /**
       * <code>optional bool horn = 4;</code>
       * @param value The horn to set.
       * @return This builder for chaining.
       */
      public Builder setHorn(boolean value) {

        horn_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool horn = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHorn() {
        bitField0_ = (bitField0_ & ~0x00000008);
        horn_ = false;
        onChanged();
        return this;
      }

      private boolean emergencyLight_ ;
      /**
       * <code>optional bool emergency_light = 5;</code>
       * @return Whether the emergencyLight field is set.
       */
      @java.lang.Override
      public boolean hasEmergencyLight() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool emergency_light = 5;</code>
       * @return The emergencyLight.
       */
      @java.lang.Override
      public boolean getEmergencyLight() {
        return emergencyLight_;
      }
      /**
       * <code>optional bool emergency_light = 5;</code>
       * @param value The emergencyLight to set.
       * @return This builder for chaining.
       */
      public Builder setEmergencyLight(boolean value) {

        emergencyLight_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool emergency_light = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmergencyLight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        emergencyLight_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.common.VehicleSignal)
    }

    // @@protoc_insertion_point(class_scope:apollo.common.VehicleSignal)
    private static final apollo.common.VehicleSignalOuterClass.VehicleSignal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.common.VehicleSignalOuterClass.VehicleSignal();
    }

    public static apollo.common.VehicleSignalOuterClass.VehicleSignal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleSignal>
        PARSER = new com.google.protobuf.AbstractParser<VehicleSignal>() {
      @java.lang.Override
      public VehicleSignal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VehicleSignal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleSignal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.common.VehicleSignalOuterClass.VehicleSignal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_common_VehicleSignal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_common_VehicleSignal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)modules/common/proto/vehicle_signal.pr" +
      "oto\022\rapollo.common\"\325\001\n\rVehicleSignal\022<\n\013" +
      "turn_signal\030\001 \001(\0162\'.apollo.common.Vehicl" +
      "eSignal.TurnSignal\022\021\n\thigh_beam\030\002 \001(\010\022\020\n" +
      "\010low_beam\030\003 \001(\010\022\014\n\004horn\030\004 \001(\010\022\027\n\017emergen" +
      "cy_light\030\005 \001(\010\":\n\nTurnSignal\022\r\n\tTURN_NON" +
      "E\020\000\022\r\n\tTURN_LEFT\020\001\022\016\n\nTURN_RIGHT\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_apollo_common_VehicleSignal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_apollo_common_VehicleSignal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_common_VehicleSignal_descriptor,
        new java.lang.String[] { "TurnSignal", "HighBeam", "LowBeam", "Horn", "EmergencyLight", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
