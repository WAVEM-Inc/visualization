// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_obstacle.proto
// Protobuf Java Version: 4.26.1

package apollo.perception;

public final class PerceptionObstacleOuterClass {
  private PerceptionObstacleOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      PerceptionObstacleOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BBox2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.BBox2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmin = 1;</code>
     * @return Whether the xmin field is set.
     */
    boolean hasXmin();
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmin = 1;</code>
     * @return The xmin.
     */
    double getXmin();

    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymin = 2;</code>
     * @return Whether the ymin field is set.
     */
    boolean hasYmin();
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymin = 2;</code>
     * @return The ymin.
     */
    double getYmin();

    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmax = 3;</code>
     * @return Whether the xmax field is set.
     */
    boolean hasXmax();
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmax = 3;</code>
     * @return The xmax.
     */
    double getXmax();

    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymax = 4;</code>
     * @return Whether the ymax field is set.
     */
    boolean hasYmax();
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymax = 4;</code>
     * @return The ymax.
     */
    double getYmax();
  }
  /**
   * Protobuf type {@code apollo.perception.BBox2D}
   */
  public static final class BBox2D extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.BBox2D)
      BBox2DOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        BBox2D.class.getName());
    }
    // Use BBox2D.newBuilder() to construct.
    private BBox2D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BBox2D() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_BBox2D_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_BBox2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.BBox2D.class, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder.class);
    }

    private int bitField0_;
    public static final int XMIN_FIELD_NUMBER = 1;
    private double xmin_ = 0D;
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmin = 1;</code>
     * @return Whether the xmin field is set.
     */
    @java.lang.Override
    public boolean hasXmin() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmin = 1;</code>
     * @return The xmin.
     */
    @java.lang.Override
    public double getXmin() {
      return xmin_;
    }

    public static final int YMIN_FIELD_NUMBER = 2;
    private double ymin_ = 0D;
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymin = 2;</code>
     * @return Whether the ymin field is set.
     */
    @java.lang.Override
    public boolean hasYmin() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymin = 2;</code>
     * @return The ymin.
     */
    @java.lang.Override
    public double getYmin() {
      return ymin_;
    }

    public static final int XMAX_FIELD_NUMBER = 3;
    private double xmax_ = 0D;
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmax = 3;</code>
     * @return Whether the xmax field is set.
     */
    @java.lang.Override
    public boolean hasXmax() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double xmax = 3;</code>
     * @return The xmax.
     */
    @java.lang.Override
    public double getXmax() {
      return xmax_;
    }

    public static final int YMAX_FIELD_NUMBER = 4;
    private double ymax_ = 0D;
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymax = 4;</code>
     * @return Whether the ymax field is set.
     */
    @java.lang.Override
    public boolean hasYmax() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * in pixels.
     * </pre>
     *
     * <code>optional double ymax = 4;</code>
     * @return The ymax.
     */
    @java.lang.Override
    public double getYmax() {
      return ymax_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, xmin_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, ymin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, xmax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, ymax_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, xmin_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, ymin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, xmax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, ymax_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.BBox2D)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.BBox2D other = (apollo.perception.PerceptionObstacleOuterClass.BBox2D) obj;

      if (hasXmin() != other.hasXmin()) return false;
      if (hasXmin()) {
        if (java.lang.Double.doubleToLongBits(getXmin())
            != java.lang.Double.doubleToLongBits(
                other.getXmin())) return false;
      }
      if (hasYmin() != other.hasYmin()) return false;
      if (hasYmin()) {
        if (java.lang.Double.doubleToLongBits(getYmin())
            != java.lang.Double.doubleToLongBits(
                other.getYmin())) return false;
      }
      if (hasXmax() != other.hasXmax()) return false;
      if (hasXmax()) {
        if (java.lang.Double.doubleToLongBits(getXmax())
            != java.lang.Double.doubleToLongBits(
                other.getXmax())) return false;
      }
      if (hasYmax() != other.hasYmax()) return false;
      if (hasYmax()) {
        if (java.lang.Double.doubleToLongBits(getYmax())
            != java.lang.Double.doubleToLongBits(
                other.getYmax())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasXmin()) {
        hash = (37 * hash) + XMIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getXmin()));
      }
      if (hasYmin()) {
        hash = (37 * hash) + YMIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getYmin()));
      }
      if (hasXmax()) {
        hash = (37 * hash) + XMAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getXmax()));
      }
      if (hasYmax()) {
        hash = (37 * hash) + YMAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getYmax()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.BBox2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.BBox2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.BBox2D)
        apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_BBox2D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_BBox2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.BBox2D.class, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.BBox2D.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        xmin_ = 0D;
        ymin_ = 0D;
        xmax_ = 0D;
        ymax_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_BBox2D_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D build() {
        apollo.perception.PerceptionObstacleOuterClass.BBox2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.BBox2D result = new apollo.perception.PerceptionObstacleOuterClass.BBox2D(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.BBox2D result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.xmin_ = xmin_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ymin_ = ymin_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.xmax_ = xmax_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ymax_ = ymax_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.BBox2D) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.BBox2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.BBox2D other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance()) return this;
        if (other.hasXmin()) {
          setXmin(other.getXmin());
        }
        if (other.hasYmin()) {
          setYmin(other.getYmin());
        }
        if (other.hasXmax()) {
          setXmax(other.getXmax());
        }
        if (other.hasYmax()) {
          setYmax(other.getYmax());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                xmin_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                ymin_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                xmax_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                ymax_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double xmin_ ;
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmin = 1;</code>
       * @return Whether the xmin field is set.
       */
      @java.lang.Override
      public boolean hasXmin() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmin = 1;</code>
       * @return The xmin.
       */
      @java.lang.Override
      public double getXmin() {
        return xmin_;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmin = 1;</code>
       * @param value The xmin to set.
       * @return This builder for chaining.
       */
      public Builder setXmin(double value) {

        xmin_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmin = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearXmin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xmin_ = 0D;
        onChanged();
        return this;
      }

      private double ymin_ ;
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymin = 2;</code>
       * @return Whether the ymin field is set.
       */
      @java.lang.Override
      public boolean hasYmin() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymin = 2;</code>
       * @return The ymin.
       */
      @java.lang.Override
      public double getYmin() {
        return ymin_;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymin = 2;</code>
       * @param value The ymin to set.
       * @return This builder for chaining.
       */
      public Builder setYmin(double value) {

        ymin_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymin = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYmin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ymin_ = 0D;
        onChanged();
        return this;
      }

      private double xmax_ ;
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmax = 3;</code>
       * @return Whether the xmax field is set.
       */
      @java.lang.Override
      public boolean hasXmax() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmax = 3;</code>
       * @return The xmax.
       */
      @java.lang.Override
      public double getXmax() {
        return xmax_;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmax = 3;</code>
       * @param value The xmax to set.
       * @return This builder for chaining.
       */
      public Builder setXmax(double value) {

        xmax_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double xmax = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearXmax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xmax_ = 0D;
        onChanged();
        return this;
      }

      private double ymax_ ;
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymax = 4;</code>
       * @return Whether the ymax field is set.
       */
      @java.lang.Override
      public boolean hasYmax() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymax = 4;</code>
       * @return The ymax.
       */
      @java.lang.Override
      public double getYmax() {
        return ymax_;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymax = 4;</code>
       * @param value The ymax to set.
       * @return This builder for chaining.
       */
      public Builder setYmax(double value) {

        ymax_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * in pixels.
       * </pre>
       *
       * <code>optional double ymax = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearYmax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ymax_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.BBox2D)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.BBox2D)
    private static final apollo.perception.PerceptionObstacleOuterClass.BBox2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.BBox2D();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.BBox2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BBox2D>
        PARSER = new com.google.protobuf.AbstractParser<BBox2D>() {
      @java.lang.Override
      public BBox2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BBox2D> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BBox2D> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.BBox2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LightStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.LightStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double brake_visible = 1;</code>
     * @return Whether the brakeVisible field is set.
     */
    boolean hasBrakeVisible();
    /**
     * <code>optional double brake_visible = 1;</code>
     * @return The brakeVisible.
     */
    double getBrakeVisible();

    /**
     * <code>optional double brake_switch_on = 2;</code>
     * @return Whether the brakeSwitchOn field is set.
     */
    boolean hasBrakeSwitchOn();
    /**
     * <code>optional double brake_switch_on = 2;</code>
     * @return The brakeSwitchOn.
     */
    double getBrakeSwitchOn();

    /**
     * <code>optional double left_turn_visible = 3;</code>
     * @return Whether the leftTurnVisible field is set.
     */
    boolean hasLeftTurnVisible();
    /**
     * <code>optional double left_turn_visible = 3;</code>
     * @return The leftTurnVisible.
     */
    double getLeftTurnVisible();

    /**
     * <code>optional double left_turn_switch_on = 4;</code>
     * @return Whether the leftTurnSwitchOn field is set.
     */
    boolean hasLeftTurnSwitchOn();
    /**
     * <code>optional double left_turn_switch_on = 4;</code>
     * @return The leftTurnSwitchOn.
     */
    double getLeftTurnSwitchOn();

    /**
     * <code>optional double right_turn_visible = 5;</code>
     * @return Whether the rightTurnVisible field is set.
     */
    boolean hasRightTurnVisible();
    /**
     * <code>optional double right_turn_visible = 5;</code>
     * @return The rightTurnVisible.
     */
    double getRightTurnVisible();

    /**
     * <code>optional double right_turn_switch_on = 6;</code>
     * @return Whether the rightTurnSwitchOn field is set.
     */
    boolean hasRightTurnSwitchOn();
    /**
     * <code>optional double right_turn_switch_on = 6;</code>
     * @return The rightTurnSwitchOn.
     */
    double getRightTurnSwitchOn();
  }
  /**
   * Protobuf type {@code apollo.perception.LightStatus}
   */
  public static final class LightStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.LightStatus)
      LightStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LightStatus.class.getName());
    }
    // Use LightStatus.newBuilder() to construct.
    private LightStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LightStatus() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LightStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LightStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.LightStatus.class, apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder.class);
    }

    private int bitField0_;
    public static final int BRAKE_VISIBLE_FIELD_NUMBER = 1;
    private double brakeVisible_ = 0D;
    /**
     * <code>optional double brake_visible = 1;</code>
     * @return Whether the brakeVisible field is set.
     */
    @java.lang.Override
    public boolean hasBrakeVisible() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double brake_visible = 1;</code>
     * @return The brakeVisible.
     */
    @java.lang.Override
    public double getBrakeVisible() {
      return brakeVisible_;
    }

    public static final int BRAKE_SWITCH_ON_FIELD_NUMBER = 2;
    private double brakeSwitchOn_ = 0D;
    /**
     * <code>optional double brake_switch_on = 2;</code>
     * @return Whether the brakeSwitchOn field is set.
     */
    @java.lang.Override
    public boolean hasBrakeSwitchOn() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double brake_switch_on = 2;</code>
     * @return The brakeSwitchOn.
     */
    @java.lang.Override
    public double getBrakeSwitchOn() {
      return brakeSwitchOn_;
    }

    public static final int LEFT_TURN_VISIBLE_FIELD_NUMBER = 3;
    private double leftTurnVisible_ = 0D;
    /**
     * <code>optional double left_turn_visible = 3;</code>
     * @return Whether the leftTurnVisible field is set.
     */
    @java.lang.Override
    public boolean hasLeftTurnVisible() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double left_turn_visible = 3;</code>
     * @return The leftTurnVisible.
     */
    @java.lang.Override
    public double getLeftTurnVisible() {
      return leftTurnVisible_;
    }

    public static final int LEFT_TURN_SWITCH_ON_FIELD_NUMBER = 4;
    private double leftTurnSwitchOn_ = 0D;
    /**
     * <code>optional double left_turn_switch_on = 4;</code>
     * @return Whether the leftTurnSwitchOn field is set.
     */
    @java.lang.Override
    public boolean hasLeftTurnSwitchOn() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double left_turn_switch_on = 4;</code>
     * @return The leftTurnSwitchOn.
     */
    @java.lang.Override
    public double getLeftTurnSwitchOn() {
      return leftTurnSwitchOn_;
    }

    public static final int RIGHT_TURN_VISIBLE_FIELD_NUMBER = 5;
    private double rightTurnVisible_ = 0D;
    /**
     * <code>optional double right_turn_visible = 5;</code>
     * @return Whether the rightTurnVisible field is set.
     */
    @java.lang.Override
    public boolean hasRightTurnVisible() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double right_turn_visible = 5;</code>
     * @return The rightTurnVisible.
     */
    @java.lang.Override
    public double getRightTurnVisible() {
      return rightTurnVisible_;
    }

    public static final int RIGHT_TURN_SWITCH_ON_FIELD_NUMBER = 6;
    private double rightTurnSwitchOn_ = 0D;
    /**
     * <code>optional double right_turn_switch_on = 6;</code>
     * @return Whether the rightTurnSwitchOn field is set.
     */
    @java.lang.Override
    public boolean hasRightTurnSwitchOn() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double right_turn_switch_on = 6;</code>
     * @return The rightTurnSwitchOn.
     */
    @java.lang.Override
    public double getRightTurnSwitchOn() {
      return rightTurnSwitchOn_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, brakeVisible_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, brakeSwitchOn_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, leftTurnVisible_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, leftTurnSwitchOn_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, rightTurnVisible_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, rightTurnSwitchOn_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, brakeVisible_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, brakeSwitchOn_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, leftTurnVisible_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, leftTurnSwitchOn_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, rightTurnVisible_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rightTurnSwitchOn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.LightStatus)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.LightStatus other = (apollo.perception.PerceptionObstacleOuterClass.LightStatus) obj;

      if (hasBrakeVisible() != other.hasBrakeVisible()) return false;
      if (hasBrakeVisible()) {
        if (java.lang.Double.doubleToLongBits(getBrakeVisible())
            != java.lang.Double.doubleToLongBits(
                other.getBrakeVisible())) return false;
      }
      if (hasBrakeSwitchOn() != other.hasBrakeSwitchOn()) return false;
      if (hasBrakeSwitchOn()) {
        if (java.lang.Double.doubleToLongBits(getBrakeSwitchOn())
            != java.lang.Double.doubleToLongBits(
                other.getBrakeSwitchOn())) return false;
      }
      if (hasLeftTurnVisible() != other.hasLeftTurnVisible()) return false;
      if (hasLeftTurnVisible()) {
        if (java.lang.Double.doubleToLongBits(getLeftTurnVisible())
            != java.lang.Double.doubleToLongBits(
                other.getLeftTurnVisible())) return false;
      }
      if (hasLeftTurnSwitchOn() != other.hasLeftTurnSwitchOn()) return false;
      if (hasLeftTurnSwitchOn()) {
        if (java.lang.Double.doubleToLongBits(getLeftTurnSwitchOn())
            != java.lang.Double.doubleToLongBits(
                other.getLeftTurnSwitchOn())) return false;
      }
      if (hasRightTurnVisible() != other.hasRightTurnVisible()) return false;
      if (hasRightTurnVisible()) {
        if (java.lang.Double.doubleToLongBits(getRightTurnVisible())
            != java.lang.Double.doubleToLongBits(
                other.getRightTurnVisible())) return false;
      }
      if (hasRightTurnSwitchOn() != other.hasRightTurnSwitchOn()) return false;
      if (hasRightTurnSwitchOn()) {
        if (java.lang.Double.doubleToLongBits(getRightTurnSwitchOn())
            != java.lang.Double.doubleToLongBits(
                other.getRightTurnSwitchOn())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBrakeVisible()) {
        hash = (37 * hash) + BRAKE_VISIBLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBrakeVisible()));
      }
      if (hasBrakeSwitchOn()) {
        hash = (37 * hash) + BRAKE_SWITCH_ON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBrakeSwitchOn()));
      }
      if (hasLeftTurnVisible()) {
        hash = (37 * hash) + LEFT_TURN_VISIBLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLeftTurnVisible()));
      }
      if (hasLeftTurnSwitchOn()) {
        hash = (37 * hash) + LEFT_TURN_SWITCH_ON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLeftTurnSwitchOn()));
      }
      if (hasRightTurnVisible()) {
        hash = (37 * hash) + RIGHT_TURN_VISIBLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRightTurnVisible()));
      }
      if (hasRightTurnSwitchOn()) {
        hash = (37 * hash) + RIGHT_TURN_SWITCH_ON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRightTurnSwitchOn()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.LightStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.LightStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.LightStatus)
        apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LightStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LightStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.LightStatus.class, apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.LightStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        brakeVisible_ = 0D;
        brakeSwitchOn_ = 0D;
        leftTurnVisible_ = 0D;
        leftTurnSwitchOn_ = 0D;
        rightTurnVisible_ = 0D;
        rightTurnSwitchOn_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LightStatus_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LightStatus getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LightStatus build() {
        apollo.perception.PerceptionObstacleOuterClass.LightStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LightStatus buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.LightStatus result = new apollo.perception.PerceptionObstacleOuterClass.LightStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.LightStatus result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.brakeVisible_ = brakeVisible_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.brakeSwitchOn_ = brakeSwitchOn_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.leftTurnVisible_ = leftTurnVisible_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.leftTurnSwitchOn_ = leftTurnSwitchOn_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.rightTurnVisible_ = rightTurnVisible_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.rightTurnSwitchOn_ = rightTurnSwitchOn_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.LightStatus) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.LightStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.LightStatus other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance()) return this;
        if (other.hasBrakeVisible()) {
          setBrakeVisible(other.getBrakeVisible());
        }
        if (other.hasBrakeSwitchOn()) {
          setBrakeSwitchOn(other.getBrakeSwitchOn());
        }
        if (other.hasLeftTurnVisible()) {
          setLeftTurnVisible(other.getLeftTurnVisible());
        }
        if (other.hasLeftTurnSwitchOn()) {
          setLeftTurnSwitchOn(other.getLeftTurnSwitchOn());
        }
        if (other.hasRightTurnVisible()) {
          setRightTurnVisible(other.getRightTurnVisible());
        }
        if (other.hasRightTurnSwitchOn()) {
          setRightTurnSwitchOn(other.getRightTurnSwitchOn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                brakeVisible_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                brakeSwitchOn_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                leftTurnVisible_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                leftTurnSwitchOn_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                rightTurnVisible_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                rightTurnSwitchOn_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double brakeVisible_ ;
      /**
       * <code>optional double brake_visible = 1;</code>
       * @return Whether the brakeVisible field is set.
       */
      @java.lang.Override
      public boolean hasBrakeVisible() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double brake_visible = 1;</code>
       * @return The brakeVisible.
       */
      @java.lang.Override
      public double getBrakeVisible() {
        return brakeVisible_;
      }
      /**
       * <code>optional double brake_visible = 1;</code>
       * @param value The brakeVisible to set.
       * @return This builder for chaining.
       */
      public Builder setBrakeVisible(double value) {

        brakeVisible_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional double brake_visible = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrakeVisible() {
        bitField0_ = (bitField0_ & ~0x00000001);
        brakeVisible_ = 0D;
        onChanged();
        return this;
      }

      private double brakeSwitchOn_ ;
      /**
       * <code>optional double brake_switch_on = 2;</code>
       * @return Whether the brakeSwitchOn field is set.
       */
      @java.lang.Override
      public boolean hasBrakeSwitchOn() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double brake_switch_on = 2;</code>
       * @return The brakeSwitchOn.
       */
      @java.lang.Override
      public double getBrakeSwitchOn() {
        return brakeSwitchOn_;
      }
      /**
       * <code>optional double brake_switch_on = 2;</code>
       * @param value The brakeSwitchOn to set.
       * @return This builder for chaining.
       */
      public Builder setBrakeSwitchOn(double value) {

        brakeSwitchOn_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double brake_switch_on = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrakeSwitchOn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        brakeSwitchOn_ = 0D;
        onChanged();
        return this;
      }

      private double leftTurnVisible_ ;
      /**
       * <code>optional double left_turn_visible = 3;</code>
       * @return Whether the leftTurnVisible field is set.
       */
      @java.lang.Override
      public boolean hasLeftTurnVisible() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double left_turn_visible = 3;</code>
       * @return The leftTurnVisible.
       */
      @java.lang.Override
      public double getLeftTurnVisible() {
        return leftTurnVisible_;
      }
      /**
       * <code>optional double left_turn_visible = 3;</code>
       * @param value The leftTurnVisible to set.
       * @return This builder for chaining.
       */
      public Builder setLeftTurnVisible(double value) {

        leftTurnVisible_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double left_turn_visible = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftTurnVisible() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftTurnVisible_ = 0D;
        onChanged();
        return this;
      }

      private double leftTurnSwitchOn_ ;
      /**
       * <code>optional double left_turn_switch_on = 4;</code>
       * @return Whether the leftTurnSwitchOn field is set.
       */
      @java.lang.Override
      public boolean hasLeftTurnSwitchOn() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double left_turn_switch_on = 4;</code>
       * @return The leftTurnSwitchOn.
       */
      @java.lang.Override
      public double getLeftTurnSwitchOn() {
        return leftTurnSwitchOn_;
      }
      /**
       * <code>optional double left_turn_switch_on = 4;</code>
       * @param value The leftTurnSwitchOn to set.
       * @return This builder for chaining.
       */
      public Builder setLeftTurnSwitchOn(double value) {

        leftTurnSwitchOn_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double left_turn_switch_on = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftTurnSwitchOn() {
        bitField0_ = (bitField0_ & ~0x00000008);
        leftTurnSwitchOn_ = 0D;
        onChanged();
        return this;
      }

      private double rightTurnVisible_ ;
      /**
       * <code>optional double right_turn_visible = 5;</code>
       * @return Whether the rightTurnVisible field is set.
       */
      @java.lang.Override
      public boolean hasRightTurnVisible() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double right_turn_visible = 5;</code>
       * @return The rightTurnVisible.
       */
      @java.lang.Override
      public double getRightTurnVisible() {
        return rightTurnVisible_;
      }
      /**
       * <code>optional double right_turn_visible = 5;</code>
       * @param value The rightTurnVisible to set.
       * @return This builder for chaining.
       */
      public Builder setRightTurnVisible(double value) {

        rightTurnVisible_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double right_turn_visible = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightTurnVisible() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rightTurnVisible_ = 0D;
        onChanged();
        return this;
      }

      private double rightTurnSwitchOn_ ;
      /**
       * <code>optional double right_turn_switch_on = 6;</code>
       * @return Whether the rightTurnSwitchOn field is set.
       */
      @java.lang.Override
      public boolean hasRightTurnSwitchOn() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double right_turn_switch_on = 6;</code>
       * @return The rightTurnSwitchOn.
       */
      @java.lang.Override
      public double getRightTurnSwitchOn() {
        return rightTurnSwitchOn_;
      }
      /**
       * <code>optional double right_turn_switch_on = 6;</code>
       * @param value The rightTurnSwitchOn to set.
       * @return This builder for chaining.
       */
      public Builder setRightTurnSwitchOn(double value) {

        rightTurnSwitchOn_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double right_turn_switch_on = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightTurnSwitchOn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rightTurnSwitchOn_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.LightStatus)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.LightStatus)
    private static final apollo.perception.PerceptionObstacleOuterClass.LightStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.LightStatus();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LightStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LightStatus>
        PARSER = new com.google.protobuf.AbstractParser<LightStatus>() {
      @java.lang.Override
      public LightStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LightStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LightStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LightStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface V2XInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.V2XInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @return A list containing the v2xType.
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType> getV2XTypeList();
    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @return The count of v2xType.
     */
    int getV2XTypeCount();
    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @param index The index of the element to return.
     * @return The v2xType at the given index.
     */
    apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType getV2XType(int index);
  }
  /**
   * Protobuf type {@code apollo.perception.V2XInformation}
   */
  public static final class V2XInformation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.V2XInformation)
      V2XInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        V2XInformation.class.getName());
    }
    // Use V2XInformation.newBuilder() to construct.
    private V2XInformation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private V2XInformation() {
      v2XType_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_V2XInformation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_V2XInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.V2XInformation.class, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder.class);
    }

    /**
     * Protobuf enum {@code apollo.perception.V2XInformation.V2XType}
     */
    public enum V2XType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>ZOMBIES_CAR = 1;</code>
       */
      ZOMBIES_CAR(1),
      /**
       * <code>BLIND_ZONE = 2;</code>
       */
      BLIND_ZONE(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          V2XType.class.getName());
      }
      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>ZOMBIES_CAR = 1;</code>
       */
      public static final int ZOMBIES_CAR_VALUE = 1;
      /**
       * <code>BLIND_ZONE = 2;</code>
       */
      public static final int BLIND_ZONE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static V2XType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static V2XType forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return ZOMBIES_CAR;
          case 2: return BLIND_ZONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<V2XType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          V2XType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<V2XType>() {
              public V2XType findValueByNumber(int number) {
                return V2XType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDescriptor().getEnumTypes().get(0);
      }

      private static final V2XType[] VALUES = values();

      public static V2XType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private V2XType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.perception.V2XInformation.V2XType)
    }

    public static final int V2X_TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> v2XType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType> v2XType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType>() {
              public apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType convert(java.lang.Integer from) {
                apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType result = apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType.forNumber(from);
                return result == null ? apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType.NONE : result;
              }
            };
    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @return A list containing the v2xType.
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType> getV2XTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType>(v2XType_, v2XType_converter_);
    }
    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @return The count of v2xType.
     */
    @java.lang.Override
    public int getV2XTypeCount() {
      return v2XType_.size();
    }
    /**
     * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
     * @param index The index of the element to return.
     * @return The v2xType at the given index.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType getV2XType(int index) {
      return v2XType_converter_.convert(v2XType_.get(index));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < v2XType_.size(); i++) {
        output.writeEnum(1, v2XType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < v2XType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(v2XType_.get(i));
        }
        size += dataSize;
        size += 1 * v2XType_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.V2XInformation)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.V2XInformation other = (apollo.perception.PerceptionObstacleOuterClass.V2XInformation) obj;

      if (!v2XType_.equals(other.v2XType_)) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getV2XTypeCount() > 0) {
        hash = (37 * hash) + V2X_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + v2XType_.hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.V2XInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.V2XInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.V2XInformation)
        apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_V2XInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_V2XInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.V2XInformation.class, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.V2XInformation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v2XType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_V2XInformation_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation build() {
        apollo.perception.PerceptionObstacleOuterClass.V2XInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.V2XInformation result = new apollo.perception.PerceptionObstacleOuterClass.V2XInformation(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.V2XInformation result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          v2XType_ = java.util.Collections.unmodifiableList(v2XType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.v2XType_ = v2XType_;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.V2XInformation result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.V2XInformation) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.V2XInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.V2XInformation other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance()) return this;
        if (!other.v2XType_.isEmpty()) {
          if (v2XType_.isEmpty()) {
            v2XType_ = other.v2XType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureV2XTypeIsMutable();
            v2XType_.addAll(other.v2XType_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  ensureV2XTypeIsMutable();
                  v2XType_.add(tmpRaw);
                }
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType tmpValue =
                      apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    ensureV2XTypeIsMutable();
                    v2XType_.add(tmpRaw);
                  }
                }
                input.popLimit(oldLimit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> v2XType_ =
        java.util.Collections.emptyList();
      private void ensureV2XTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          v2XType_ = new java.util.ArrayList<java.lang.Integer>(v2XType_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @return A list containing the v2xType.
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType> getV2XTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType>(v2XType_, v2XType_converter_);
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @return The count of v2xType.
       */
      public int getV2XTypeCount() {
        return v2XType_.size();
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @param index The index of the element to return.
       * @return The v2xType at the given index.
       */
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType getV2XType(int index) {
        return v2XType_converter_.convert(v2XType_.get(index));
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @param index The index to set the value at.
       * @param value The v2xType to set.
       * @return This builder for chaining.
       */
      public Builder setV2XType(
          int index, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureV2XTypeIsMutable();
        v2XType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @param value The v2xType to add.
       * @return This builder for chaining.
       */
      public Builder addV2XType(apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureV2XTypeIsMutable();
        v2XType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @param values The v2xType to add.
       * @return This builder for chaining.
       */
      public Builder addAllV2XType(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType> values) {
        ensureV2XTypeIsMutable();
        for (apollo.perception.PerceptionObstacleOuterClass.V2XInformation.V2XType value : values) {
          v2XType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .apollo.perception.V2XInformation.V2XType v2x_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV2XType() {
        v2XType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.V2XInformation)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.V2XInformation)
    private static final apollo.perception.PerceptionObstacleOuterClass.V2XInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.V2XInformation();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.V2XInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<V2XInformation>
        PARSER = new com.google.protobuf.AbstractParser<V2XInformation>() {
      @java.lang.Override
      public V2XInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<V2XInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<V2XInformation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.V2XInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorMeasurementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.SensorMeasurement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string sensor_id = 1;</code>
     * @return Whether the sensorId field is set.
     */
    boolean hasSensorId();
    /**
     * <code>optional string sensor_id = 1;</code>
     * @return The sensorId.
     */
    java.lang.String getSensorId();
    /**
     * <code>optional string sensor_id = 1;</code>
     * @return The bytes for sensorId.
     */
    com.google.protobuf.ByteString
        getSensorIdBytes();

    /**
     * <code>optional int32 id = 2;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     * @return The position.
     */
    apollo.common.Geometry.Point3D getPosition();
    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder();

    /**
     * <code>optional double theta = 4;</code>
     * @return Whether the theta field is set.
     */
    boolean hasTheta();
    /**
     * <code>optional double theta = 4;</code>
     * @return The theta.
     */
    double getTheta();

    /**
     * <code>optional double length = 5;</code>
     * @return Whether the length field is set.
     */
    boolean hasLength();
    /**
     * <code>optional double length = 5;</code>
     * @return The length.
     */
    double getLength();

    /**
     * <code>optional double width = 6;</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <code>optional double width = 6;</code>
     * @return The width.
     */
    double getWidth();

    /**
     * <code>optional double height = 7;</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <code>optional double height = 7;</code>
     * @return The height.
     */
    double getHeight();

    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     * @return Whether the velocity field is set.
     */
    boolean hasVelocity();
    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     * @return The velocity.
     */
    apollo.common.Geometry.Point3D getVelocity();
    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder();

    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
     * @return The type.
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType();

    /**
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
     * @return Whether the subType field is set.
     */
    boolean hasSubType();
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
     * @return The subType.
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType();

    /**
     * <code>optional double timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional double timestamp = 11;</code>
     * @return The timestamp.
     */
    double getTimestamp();

    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     * @return Whether the box field is set.
     */
    boolean hasBox();
    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     * @return The box.
     */
    apollo.perception.PerceptionObstacleOuterClass.BBox2D getBox();
    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBoxOrBuilder();
  }
  /**
   * Protobuf type {@code apollo.perception.SensorMeasurement}
   */
  public static final class SensorMeasurement extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.SensorMeasurement)
      SensorMeasurementOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        SensorMeasurement.class.getName());
    }
    // Use SensorMeasurement.newBuilder() to construct.
    private SensorMeasurement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SensorMeasurement() {
      sensorId_ = "";
      type_ = 0;
      subType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_SensorMeasurement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_SensorMeasurement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.class, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder.class);
    }

    private int bitField0_;
    public static final int SENSOR_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sensorId_ = "";
    /**
     * <code>optional string sensor_id = 1;</code>
     * @return Whether the sensorId field is set.
     */
    @java.lang.Override
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string sensor_id = 1;</code>
     * @return The sensorId.
     */
    @java.lang.Override
    public java.lang.String getSensorId() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sensorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sensor_id = 1;</code>
     * @return The bytes for sensorId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSensorIdBytes() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_ = 0;
    /**
     * <code>optional int32 id = 2;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private apollo.common.Geometry.Point3D position_;
    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     * @return The position.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getPosition() {
      return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
    }
    /**
     * <code>optional .apollo.common.Point3D position = 3;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder() {
      return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
    }

    public static final int THETA_FIELD_NUMBER = 4;
    private double theta_ = 0D;
    /**
     * <code>optional double theta = 4;</code>
     * @return Whether the theta field is set.
     */
    @java.lang.Override
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double theta = 4;</code>
     * @return The theta.
     */
    @java.lang.Override
    public double getTheta() {
      return theta_;
    }

    public static final int LENGTH_FIELD_NUMBER = 5;
    private double length_ = 0D;
    /**
     * <code>optional double length = 5;</code>
     * @return Whether the length field is set.
     */
    @java.lang.Override
    public boolean hasLength() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double length = 5;</code>
     * @return The length.
     */
    @java.lang.Override
    public double getLength() {
      return length_;
    }

    public static final int WIDTH_FIELD_NUMBER = 6;
    private double width_ = 0D;
    /**
     * <code>optional double width = 6;</code>
     * @return Whether the width field is set.
     */
    @java.lang.Override
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double width = 6;</code>
     * @return The width.
     */
    @java.lang.Override
    public double getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 7;
    private double height_ = 0D;
    /**
     * <code>optional double height = 7;</code>
     * @return Whether the height field is set.
     */
    @java.lang.Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double height = 7;</code>
     * @return The height.
     */
    @java.lang.Override
    public double getHeight() {
      return height_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 8;
    private apollo.common.Geometry.Point3D velocity_;
    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     * @return Whether the velocity field is set.
     */
    @java.lang.Override
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     * @return The velocity.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getVelocity() {
      return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
    }
    /**
     * <code>optional .apollo.common.Point3D velocity = 8;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder() {
      return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
    }

    public static final int TYPE_FIELD_NUMBER = 9;
    private int type_ = 0;
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
     * @return The type.
     */
    @java.lang.Override public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(type_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.UNKNOWN : result;
    }

    public static final int SUB_TYPE_FIELD_NUMBER = 10;
    private int subType_ = 0;
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
     * @return Whether the subType field is set.
     */
    @java.lang.Override public boolean hasSubType() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
     * @return The subType.
     */
    @java.lang.Override public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(subType_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.ST_UNKNOWN : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 11;
    private double timestamp_ = 0D;
    /**
     * <code>optional double timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional double timestamp = 11;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public double getTimestamp() {
      return timestamp_;
    }

    public static final int BOX_FIELD_NUMBER = 12;
    private apollo.perception.PerceptionObstacleOuterClass.BBox2D box_;
    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     * @return Whether the box field is set.
     */
    @java.lang.Override
    public boolean hasBox() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     * @return The box.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.BBox2D getBox() {
      return box_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : box_;
    }
    /**
     * <pre>
     * only for camera measurements
     * </pre>
     *
     * <code>optional .apollo.perception.BBox2D box = 12;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBoxOrBuilder() {
      return box_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : box_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getPosition());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, theta_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, width_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, height_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(8, getVelocity());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeEnum(9, type_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeEnum(10, subType_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, timestamp_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeMessage(12, getBox());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPosition());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, theta_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, width_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, height_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getVelocity());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, type_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, subType_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, timestamp_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getBox());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement other = (apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement) obj;

      if (hasSensorId() != other.hasSensorId()) return false;
      if (hasSensorId()) {
        if (!getSensorId()
            .equals(other.getSensorId())) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (hasTheta() != other.hasTheta()) return false;
      if (hasTheta()) {
        if (java.lang.Double.doubleToLongBits(getTheta())
            != java.lang.Double.doubleToLongBits(
                other.getTheta())) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (java.lang.Double.doubleToLongBits(getLength())
            != java.lang.Double.doubleToLongBits(
                other.getLength())) return false;
      }
      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (java.lang.Double.doubleToLongBits(getWidth())
            != java.lang.Double.doubleToLongBits(
                other.getWidth())) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (java.lang.Double.doubleToLongBits(getHeight())
            != java.lang.Double.doubleToLongBits(
                other.getHeight())) return false;
      }
      if (hasVelocity() != other.hasVelocity()) return false;
      if (hasVelocity()) {
        if (!getVelocity()
            .equals(other.getVelocity())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasSubType() != other.hasSubType()) return false;
      if (hasSubType()) {
        if (subType_ != other.subType_) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (java.lang.Double.doubleToLongBits(getTimestamp())
            != java.lang.Double.doubleToLongBits(
                other.getTimestamp())) return false;
      }
      if (hasBox() != other.hasBox()) return false;
      if (hasBox()) {
        if (!getBox()
            .equals(other.getBox())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSensorId()) {
        hash = (37 * hash) + SENSOR_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSensorId().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (hasTheta()) {
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTheta()));
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLength()));
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getWidth()));
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHeight()));
      }
      if (hasVelocity()) {
        hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + getVelocity().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasSubType()) {
        hash = (37 * hash) + SUB_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + subType_;
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      if (hasBox()) {
        hash = (37 * hash) + BOX_FIELD_NUMBER;
        hash = (53 * hash) + getBox().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.SensorMeasurement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.SensorMeasurement)
        apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_SensorMeasurement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_SensorMeasurement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.class, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getVelocityFieldBuilder();
          getBoxFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sensorId_ = "";
        id_ = 0;
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        theta_ = 0D;
        length_ = 0D;
        width_ = 0D;
        height_ = 0D;
        velocity_ = null;
        if (velocityBuilder_ != null) {
          velocityBuilder_.dispose();
          velocityBuilder_ = null;
        }
        type_ = 0;
        subType_ = 0;
        timestamp_ = 0D;
        box_ = null;
        if (boxBuilder_ != null) {
          boxBuilder_.dispose();
          boxBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_SensorMeasurement_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement build() {
        apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement result = new apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sensorId_ = sensorId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.position_ = positionBuilder_ == null
              ? position_
              : positionBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.theta_ = theta_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.length_ = length_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.width_ = width_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.height_ = height_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.velocity_ = velocityBuilder_ == null
              ? velocity_
              : velocityBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.subType_ = subType_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.box_ = boxBuilder_ == null
              ? box_
              : boxBuilder_.build();
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          sensorId_ = other.sensorId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSubType()) {
          setSubType(other.getSubType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasBox()) {
          mergeBox(other.getBox());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                sensorId_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getPositionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 33: {
                theta_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                length_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                width_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                height_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 66: {
                input.readMessage(
                    getVelocityFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(9, tmpRaw);
                } else {
                  type_ = tmpRaw;
                  bitField0_ |= 0x00000100;
                }
                break;
              } // case 72
              case 80: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(10, tmpRaw);
                } else {
                  subType_ = tmpRaw;
                  bitField0_ |= 0x00000200;
                }
                break;
              } // case 80
              case 89: {
                timestamp_ = input.readDouble();
                bitField0_ |= 0x00000400;
                break;
              } // case 89
              case 98: {
                input.readMessage(
                    getBoxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object sensorId_ = "";
      /**
       * <code>optional string sensor_id = 1;</code>
       * @return Whether the sensorId field is set.
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string sensor_id = 1;</code>
       * @return The sensorId.
       */
      public java.lang.String getSensorId() {
        java.lang.Object ref = sensorId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sensor_id = 1;</code>
       * @return The bytes for sensorId.
       */
      public com.google.protobuf.ByteString
          getSensorIdBytes() {
        java.lang.Object ref = sensorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sensor_id = 1;</code>
       * @param value The sensorId to set.
       * @return This builder for chaining.
       */
      public Builder setSensorId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sensorId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sensor_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorId() {
        sensorId_ = getDefaultInstance().getSensorId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string sensor_id = 1;</code>
       * @param value The bytes for sensorId to set.
       * @return This builder for chaining.
       */
      public Builder setSensorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        sensorId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private apollo.common.Geometry.Point3D position_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> positionBuilder_;
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       * @return The position.
       */
      public apollo.common.Geometry.Point3D getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public Builder setPosition(apollo.common.Geometry.Point3D value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public Builder setPosition(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public Builder mergePosition(apollo.common.Geometry.Point3D value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            position_ != null &&
            position_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getPositionBuilder().mergeFrom(value);
          } else {
            position_ = value;
          }
        } else {
          positionBuilder_.mergeFrom(value);
        }
        if (position_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>optional .apollo.common.Point3D position = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private double theta_ ;
      /**
       * <code>optional double theta = 4;</code>
       * @return Whether the theta field is set.
       */
      @java.lang.Override
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double theta = 4;</code>
       * @return The theta.
       */
      @java.lang.Override
      public double getTheta() {
        return theta_;
      }
      /**
       * <code>optional double theta = 4;</code>
       * @param value The theta to set.
       * @return This builder for chaining.
       */
      public Builder setTheta(double value) {

        theta_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double theta = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000008);
        theta_ = 0D;
        onChanged();
        return this;
      }

      private double length_ ;
      /**
       * <code>optional double length = 5;</code>
       * @return Whether the length field is set.
       */
      @java.lang.Override
      public boolean hasLength() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double length = 5;</code>
       * @return The length.
       */
      @java.lang.Override
      public double getLength() {
        return length_;
      }
      /**
       * <code>optional double length = 5;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(double value) {

        length_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double length = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000010);
        length_ = 0D;
        onChanged();
        return this;
      }

      private double width_ ;
      /**
       * <code>optional double width = 6;</code>
       * @return Whether the width field is set.
       */
      @java.lang.Override
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double width = 6;</code>
       * @return The width.
       */
      @java.lang.Override
      public double getWidth() {
        return width_;
      }
      /**
       * <code>optional double width = 6;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(double value) {

        width_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double width = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000020);
        width_ = 0D;
        onChanged();
        return this;
      }

      private double height_ ;
      /**
       * <code>optional double height = 7;</code>
       * @return Whether the height field is set.
       */
      @java.lang.Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double height = 7;</code>
       * @return The height.
       */
      @java.lang.Override
      public double getHeight() {
        return height_;
      }
      /**
       * <code>optional double height = 7;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(double value) {

        height_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double height = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000040);
        height_ = 0D;
        onChanged();
        return this;
      }

      private apollo.common.Geometry.Point3D velocity_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> velocityBuilder_;
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       * @return Whether the velocity field is set.
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       * @return The velocity.
       */
      public apollo.common.Geometry.Point3D getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public Builder setVelocity(apollo.common.Geometry.Point3D value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public Builder setVelocity(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public Builder mergeVelocity(apollo.common.Geometry.Point3D value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            velocity_ != null &&
            velocity_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getVelocityBuilder().mergeFrom(value);
          } else {
            velocity_ = value;
          }
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        if (velocity_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public Builder clearVelocity() {
        bitField0_ = (bitField0_ & ~0x00000080);
        velocity_ = null;
        if (velocityBuilder_ != null) {
          velocityBuilder_.dispose();
          velocityBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
        }
      }
      /**
       * <code>optional .apollo.common.Point3D velocity = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private int type_ = 0;
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
       * @return The type.
       */
      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(type_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.UNKNOWN : result;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = 0;
        onChanged();
        return this;
      }

      private int subType_ = 0;
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
       * @return Whether the subType field is set.
       */
      @java.lang.Override public boolean hasSubType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
       * @return The subType.
       */
      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(subType_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.ST_UNKNOWN : result;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
       * @param value The subType to set.
       * @return This builder for chaining.
       */
      public Builder setSubType(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        subType_ = 0;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <code>optional double timestamp = 11;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional double timestamp = 11;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional double timestamp = 11;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(double value) {

        timestamp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional double timestamp = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      private apollo.perception.PerceptionObstacleOuterClass.BBox2D box_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder> boxBuilder_;
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       * @return Whether the box field is set.
       */
      public boolean hasBox() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       * @return The box.
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D getBox() {
        if (boxBuilder_ == null) {
          return box_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : box_;
        } else {
          return boxBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public Builder setBox(apollo.perception.PerceptionObstacleOuterClass.BBox2D value) {
        if (boxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          box_ = value;
        } else {
          boxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public Builder setBox(
          apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder builderForValue) {
        if (boxBuilder_ == null) {
          box_ = builderForValue.build();
        } else {
          boxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public Builder mergeBox(apollo.perception.PerceptionObstacleOuterClass.BBox2D value) {
        if (boxBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
            box_ != null &&
            box_ != apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance()) {
            getBoxBuilder().mergeFrom(value);
          } else {
            box_ = value;
          }
        } else {
          boxBuilder_.mergeFrom(value);
        }
        if (box_ != null) {
          bitField0_ |= 0x00000800;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public Builder clearBox() {
        bitField0_ = (bitField0_ & ~0x00000800);
        box_ = null;
        if (boxBuilder_ != null) {
          boxBuilder_.dispose();
          boxBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder getBoxBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getBoxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBoxOrBuilder() {
        if (boxBuilder_ != null) {
          return boxBuilder_.getMessageOrBuilder();
        } else {
          return box_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : box_;
        }
      }
      /**
       * <pre>
       * only for camera measurements
       * </pre>
       *
       * <code>optional .apollo.perception.BBox2D box = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder> 
          getBoxFieldBuilder() {
        if (boxBuilder_ == null) {
          boxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder>(
                  getBox(),
                  getParentForChildren(),
                  isClean());
          box_ = null;
        }
        return boxBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.SensorMeasurement)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.SensorMeasurement)
    private static final apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SensorMeasurement>
        PARSER = new com.google.protobuf.AbstractParser<SensorMeasurement>() {
      @java.lang.Override
      public SensorMeasurement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SensorMeasurement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorMeasurement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrajectoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.Trajectory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * probability of this trajectory
     * </pre>
     *
     * <code>optional double probability = 1;</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <pre>
     * probability of this trajectory
     * </pre>
     *
     * <code>optional double probability = 1;</code>
     * @return The probability.
     */
    double getProbability();

    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    java.util.List<apollo.common.PncPoint.TrajectoryPoint> 
        getTrajectoryPointList();
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    apollo.common.PncPoint.TrajectoryPoint getTrajectoryPoint(int index);
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    int getTrajectoryPointCount();
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    java.util.List<? extends apollo.common.PncPoint.TrajectoryPointOrBuilder> 
        getTrajectoryPointOrBuilderList();
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    apollo.common.PncPoint.TrajectoryPointOrBuilder getTrajectoryPointOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code apollo.perception.Trajectory}
   */
  public static final class Trajectory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.Trajectory)
      TrajectoryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Trajectory.class.getName());
    }
    // Use Trajectory.newBuilder() to construct.
    private Trajectory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Trajectory() {
      trajectoryPoint_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_Trajectory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_Trajectory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.Trajectory.class, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder.class);
    }

    private int bitField0_;
    public static final int PROBABILITY_FIELD_NUMBER = 1;
    private double probability_ = 0D;
    /**
     * <pre>
     * probability of this trajectory
     * </pre>
     *
     * <code>optional double probability = 1;</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * probability of this trajectory
     * </pre>
     *
     * <code>optional double probability = 1;</code>
     * @return The probability.
     */
    @java.lang.Override
    public double getProbability() {
      return probability_;
    }

    public static final int TRAJECTORY_POINT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<apollo.common.PncPoint.TrajectoryPoint> trajectoryPoint_;
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.common.PncPoint.TrajectoryPoint> getTrajectoryPointList() {
      return trajectoryPoint_;
    }
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.common.PncPoint.TrajectoryPointOrBuilder> 
        getTrajectoryPointOrBuilderList() {
      return trajectoryPoint_;
    }
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    @java.lang.Override
    public int getTrajectoryPointCount() {
      return trajectoryPoint_.size();
    }
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    @java.lang.Override
    public apollo.common.PncPoint.TrajectoryPoint getTrajectoryPoint(int index) {
      return trajectoryPoint_.get(index);
    }
    /**
     * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
     */
    @java.lang.Override
    public apollo.common.PncPoint.TrajectoryPointOrBuilder getTrajectoryPointOrBuilder(
        int index) {
      return trajectoryPoint_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, probability_);
      }
      for (int i = 0; i < trajectoryPoint_.size(); i++) {
        output.writeMessage(2, trajectoryPoint_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, probability_);
      }
      for (int i = 0; i < trajectoryPoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, trajectoryPoint_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.Trajectory)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.Trajectory other = (apollo.perception.PerceptionObstacleOuterClass.Trajectory) obj;

      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Double.doubleToLongBits(getProbability())
            != java.lang.Double.doubleToLongBits(
                other.getProbability())) return false;
      }
      if (!getTrajectoryPointList()
          .equals(other.getTrajectoryPointList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getProbability()));
      }
      if (getTrajectoryPointCount() > 0) {
        hash = (37 * hash) + TRAJECTORY_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getTrajectoryPointList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.Trajectory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.Trajectory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.Trajectory)
        apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_Trajectory_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_Trajectory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.Trajectory.class, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.Trajectory.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        probability_ = 0D;
        if (trajectoryPointBuilder_ == null) {
          trajectoryPoint_ = java.util.Collections.emptyList();
        } else {
          trajectoryPoint_ = null;
          trajectoryPointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_Trajectory_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.Trajectory.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory build() {
        apollo.perception.PerceptionObstacleOuterClass.Trajectory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.Trajectory result = new apollo.perception.PerceptionObstacleOuterClass.Trajectory(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.Trajectory result) {
        if (trajectoryPointBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            trajectoryPoint_ = java.util.Collections.unmodifiableList(trajectoryPoint_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.trajectoryPoint_ = trajectoryPoint_;
        } else {
          result.trajectoryPoint_ = trajectoryPointBuilder_.build();
        }
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.Trajectory result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.probability_ = probability_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.Trajectory) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.Trajectory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.Trajectory other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.Trajectory.getDefaultInstance()) return this;
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        if (trajectoryPointBuilder_ == null) {
          if (!other.trajectoryPoint_.isEmpty()) {
            if (trajectoryPoint_.isEmpty()) {
              trajectoryPoint_ = other.trajectoryPoint_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTrajectoryPointIsMutable();
              trajectoryPoint_.addAll(other.trajectoryPoint_);
            }
            onChanged();
          }
        } else {
          if (!other.trajectoryPoint_.isEmpty()) {
            if (trajectoryPointBuilder_.isEmpty()) {
              trajectoryPointBuilder_.dispose();
              trajectoryPointBuilder_ = null;
              trajectoryPoint_ = other.trajectoryPoint_;
              bitField0_ = (bitField0_ & ~0x00000002);
              trajectoryPointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTrajectoryPointFieldBuilder() : null;
            } else {
              trajectoryPointBuilder_.addAllMessages(other.trajectoryPoint_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                probability_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                apollo.common.PncPoint.TrajectoryPoint m =
                    input.readMessage(
                        apollo.common.PncPoint.TrajectoryPoint.parser(),
                        extensionRegistry);
                if (trajectoryPointBuilder_ == null) {
                  ensureTrajectoryPointIsMutable();
                  trajectoryPoint_.add(m);
                } else {
                  trajectoryPointBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double probability_ ;
      /**
       * <pre>
       * probability of this trajectory
       * </pre>
       *
       * <code>optional double probability = 1;</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * probability of this trajectory
       * </pre>
       *
       * <code>optional double probability = 1;</code>
       * @return The probability.
       */
      @java.lang.Override
      public double getProbability() {
        return probability_;
      }
      /**
       * <pre>
       * probability of this trajectory
       * </pre>
       *
       * <code>optional double probability = 1;</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(double value) {

        probability_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * probability of this trajectory
       * </pre>
       *
       * <code>optional double probability = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<apollo.common.PncPoint.TrajectoryPoint> trajectoryPoint_ =
        java.util.Collections.emptyList();
      private void ensureTrajectoryPointIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          trajectoryPoint_ = new java.util.ArrayList<apollo.common.PncPoint.TrajectoryPoint>(trajectoryPoint_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.PncPoint.TrajectoryPoint, apollo.common.PncPoint.TrajectoryPoint.Builder, apollo.common.PncPoint.TrajectoryPointOrBuilder> trajectoryPointBuilder_;

      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public java.util.List<apollo.common.PncPoint.TrajectoryPoint> getTrajectoryPointList() {
        if (trajectoryPointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trajectoryPoint_);
        } else {
          return trajectoryPointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public int getTrajectoryPointCount() {
        if (trajectoryPointBuilder_ == null) {
          return trajectoryPoint_.size();
        } else {
          return trajectoryPointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public apollo.common.PncPoint.TrajectoryPoint getTrajectoryPoint(int index) {
        if (trajectoryPointBuilder_ == null) {
          return trajectoryPoint_.get(index);
        } else {
          return trajectoryPointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder setTrajectoryPoint(
          int index, apollo.common.PncPoint.TrajectoryPoint value) {
        if (trajectoryPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.set(index, value);
          onChanged();
        } else {
          trajectoryPointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder setTrajectoryPoint(
          int index, apollo.common.PncPoint.TrajectoryPoint.Builder builderForValue) {
        if (trajectoryPointBuilder_ == null) {
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          trajectoryPointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder addTrajectoryPoint(apollo.common.PncPoint.TrajectoryPoint value) {
        if (trajectoryPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.add(value);
          onChanged();
        } else {
          trajectoryPointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder addTrajectoryPoint(
          int index, apollo.common.PncPoint.TrajectoryPoint value) {
        if (trajectoryPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.add(index, value);
          onChanged();
        } else {
          trajectoryPointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder addTrajectoryPoint(
          apollo.common.PncPoint.TrajectoryPoint.Builder builderForValue) {
        if (trajectoryPointBuilder_ == null) {
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.add(builderForValue.build());
          onChanged();
        } else {
          trajectoryPointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder addTrajectoryPoint(
          int index, apollo.common.PncPoint.TrajectoryPoint.Builder builderForValue) {
        if (trajectoryPointBuilder_ == null) {
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          trajectoryPointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder addAllTrajectoryPoint(
          java.lang.Iterable<? extends apollo.common.PncPoint.TrajectoryPoint> values) {
        if (trajectoryPointBuilder_ == null) {
          ensureTrajectoryPointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trajectoryPoint_);
          onChanged();
        } else {
          trajectoryPointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder clearTrajectoryPoint() {
        if (trajectoryPointBuilder_ == null) {
          trajectoryPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          trajectoryPointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public Builder removeTrajectoryPoint(int index) {
        if (trajectoryPointBuilder_ == null) {
          ensureTrajectoryPointIsMutable();
          trajectoryPoint_.remove(index);
          onChanged();
        } else {
          trajectoryPointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public apollo.common.PncPoint.TrajectoryPoint.Builder getTrajectoryPointBuilder(
          int index) {
        return getTrajectoryPointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public apollo.common.PncPoint.TrajectoryPointOrBuilder getTrajectoryPointOrBuilder(
          int index) {
        if (trajectoryPointBuilder_ == null) {
          return trajectoryPoint_.get(index);  } else {
          return trajectoryPointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public java.util.List<? extends apollo.common.PncPoint.TrajectoryPointOrBuilder> 
           getTrajectoryPointOrBuilderList() {
        if (trajectoryPointBuilder_ != null) {
          return trajectoryPointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trajectoryPoint_);
        }
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public apollo.common.PncPoint.TrajectoryPoint.Builder addTrajectoryPointBuilder() {
        return getTrajectoryPointFieldBuilder().addBuilder(
            apollo.common.PncPoint.TrajectoryPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public apollo.common.PncPoint.TrajectoryPoint.Builder addTrajectoryPointBuilder(
          int index) {
        return getTrajectoryPointFieldBuilder().addBuilder(
            index, apollo.common.PncPoint.TrajectoryPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.common.TrajectoryPoint trajectory_point = 2;</code>
       */
      public java.util.List<apollo.common.PncPoint.TrajectoryPoint.Builder> 
           getTrajectoryPointBuilderList() {
        return getTrajectoryPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.PncPoint.TrajectoryPoint, apollo.common.PncPoint.TrajectoryPoint.Builder, apollo.common.PncPoint.TrajectoryPointOrBuilder> 
          getTrajectoryPointFieldBuilder() {
        if (trajectoryPointBuilder_ == null) {
          trajectoryPointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.common.PncPoint.TrajectoryPoint, apollo.common.PncPoint.TrajectoryPoint.Builder, apollo.common.PncPoint.TrajectoryPointOrBuilder>(
                  trajectoryPoint_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          trajectoryPoint_ = null;
        }
        return trajectoryPointBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.Trajectory)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.Trajectory)
    private static final apollo.perception.PerceptionObstacleOuterClass.Trajectory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.Trajectory();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.Trajectory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Trajectory>
        PARSER = new com.google.protobuf.AbstractParser<Trajectory>() {
      @java.lang.Override
      public Trajectory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Trajectory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Trajectory> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.Trajectory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.DebugMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory> 
        getTrajectoryList();
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.Trajectory getTrajectory(int index);
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    int getTrajectoryCount();
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder> 
        getTrajectoryOrBuilderList();
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder getTrajectoryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code apollo.perception.DebugMessage}
   */
  public static final class DebugMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.DebugMessage)
      DebugMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        DebugMessage.class.getName());
    }
    // Use DebugMessage.newBuilder() to construct.
    private DebugMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DebugMessage() {
      trajectory_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_DebugMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_DebugMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.DebugMessage.class, apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder.class);
    }

    public static final int TRAJECTORY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory> trajectory_;
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory> getTrajectoryList() {
      return trajectory_;
    }
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder> 
        getTrajectoryOrBuilderList() {
      return trajectory_;
    }
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    @java.lang.Override
    public int getTrajectoryCount() {
      return trajectory_.size();
    }
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.Trajectory getTrajectory(int index) {
      return trajectory_.get(index);
    }
    /**
     * <pre>
     * can have multiple trajectories per obstacle
     * </pre>
     *
     * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder getTrajectoryOrBuilder(
        int index) {
      return trajectory_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < trajectory_.size(); i++) {
        output.writeMessage(1, trajectory_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < trajectory_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, trajectory_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.DebugMessage)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.DebugMessage other = (apollo.perception.PerceptionObstacleOuterClass.DebugMessage) obj;

      if (!getTrajectoryList()
          .equals(other.getTrajectoryList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTrajectoryCount() > 0) {
        hash = (37 * hash) + TRAJECTORY_FIELD_NUMBER;
        hash = (53 * hash) + getTrajectoryList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.DebugMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.DebugMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.DebugMessage)
        apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_DebugMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_DebugMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.DebugMessage.class, apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.DebugMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (trajectoryBuilder_ == null) {
          trajectory_ = java.util.Collections.emptyList();
        } else {
          trajectory_ = null;
          trajectoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_DebugMessage_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessage getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessage build() {
        apollo.perception.PerceptionObstacleOuterClass.DebugMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessage buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.DebugMessage result = new apollo.perception.PerceptionObstacleOuterClass.DebugMessage(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.DebugMessage result) {
        if (trajectoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            trajectory_ = java.util.Collections.unmodifiableList(trajectory_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.trajectory_ = trajectory_;
        } else {
          result.trajectory_ = trajectoryBuilder_.build();
        }
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.DebugMessage result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.DebugMessage) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.DebugMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.DebugMessage other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance()) return this;
        if (trajectoryBuilder_ == null) {
          if (!other.trajectory_.isEmpty()) {
            if (trajectory_.isEmpty()) {
              trajectory_ = other.trajectory_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTrajectoryIsMutable();
              trajectory_.addAll(other.trajectory_);
            }
            onChanged();
          }
        } else {
          if (!other.trajectory_.isEmpty()) {
            if (trajectoryBuilder_.isEmpty()) {
              trajectoryBuilder_.dispose();
              trajectoryBuilder_ = null;
              trajectory_ = other.trajectory_;
              bitField0_ = (bitField0_ & ~0x00000001);
              trajectoryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTrajectoryFieldBuilder() : null;
            } else {
              trajectoryBuilder_.addAllMessages(other.trajectory_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                apollo.perception.PerceptionObstacleOuterClass.Trajectory m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.Trajectory.parser(),
                        extensionRegistry);
                if (trajectoryBuilder_ == null) {
                  ensureTrajectoryIsMutable();
                  trajectory_.add(m);
                } else {
                  trajectoryBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory> trajectory_ =
        java.util.Collections.emptyList();
      private void ensureTrajectoryIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          trajectory_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.Trajectory>(trajectory_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.Trajectory, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder, apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder> trajectoryBuilder_;

      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory> getTrajectoryList() {
        if (trajectoryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trajectory_);
        } else {
          return trajectoryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public int getTrajectoryCount() {
        if (trajectoryBuilder_ == null) {
          return trajectory_.size();
        } else {
          return trajectoryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory getTrajectory(int index) {
        if (trajectoryBuilder_ == null) {
          return trajectory_.get(index);
        } else {
          return trajectoryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder setTrajectory(
          int index, apollo.perception.PerceptionObstacleOuterClass.Trajectory value) {
        if (trajectoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryIsMutable();
          trajectory_.set(index, value);
          onChanged();
        } else {
          trajectoryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder setTrajectory(
          int index, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder builderForValue) {
        if (trajectoryBuilder_ == null) {
          ensureTrajectoryIsMutable();
          trajectory_.set(index, builderForValue.build());
          onChanged();
        } else {
          trajectoryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder addTrajectory(apollo.perception.PerceptionObstacleOuterClass.Trajectory value) {
        if (trajectoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryIsMutable();
          trajectory_.add(value);
          onChanged();
        } else {
          trajectoryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder addTrajectory(
          int index, apollo.perception.PerceptionObstacleOuterClass.Trajectory value) {
        if (trajectoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrajectoryIsMutable();
          trajectory_.add(index, value);
          onChanged();
        } else {
          trajectoryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder addTrajectory(
          apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder builderForValue) {
        if (trajectoryBuilder_ == null) {
          ensureTrajectoryIsMutable();
          trajectory_.add(builderForValue.build());
          onChanged();
        } else {
          trajectoryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder addTrajectory(
          int index, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder builderForValue) {
        if (trajectoryBuilder_ == null) {
          ensureTrajectoryIsMutable();
          trajectory_.add(index, builderForValue.build());
          onChanged();
        } else {
          trajectoryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder addAllTrajectory(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.Trajectory> values) {
        if (trajectoryBuilder_ == null) {
          ensureTrajectoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trajectory_);
          onChanged();
        } else {
          trajectoryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder clearTrajectory() {
        if (trajectoryBuilder_ == null) {
          trajectory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          trajectoryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public Builder removeTrajectory(int index) {
        if (trajectoryBuilder_ == null) {
          ensureTrajectoryIsMutable();
          trajectory_.remove(index);
          onChanged();
        } else {
          trajectoryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder getTrajectoryBuilder(
          int index) {
        return getTrajectoryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder getTrajectoryOrBuilder(
          int index) {
        if (trajectoryBuilder_ == null) {
          return trajectory_.get(index);  } else {
          return trajectoryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder> 
           getTrajectoryOrBuilderList() {
        if (trajectoryBuilder_ != null) {
          return trajectoryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trajectory_);
        }
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder addTrajectoryBuilder() {
        return getTrajectoryFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.Trajectory.getDefaultInstance());
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder addTrajectoryBuilder(
          int index) {
        return getTrajectoryFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.Trajectory.getDefaultInstance());
      }
      /**
       * <pre>
       * can have multiple trajectories per obstacle
       * </pre>
       *
       * <code>repeated .apollo.perception.Trajectory trajectory = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder> 
           getTrajectoryBuilderList() {
        return getTrajectoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.Trajectory, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder, apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder> 
          getTrajectoryFieldBuilder() {
        if (trajectoryBuilder_ == null) {
          trajectoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.Trajectory, apollo.perception.PerceptionObstacleOuterClass.Trajectory.Builder, apollo.perception.PerceptionObstacleOuterClass.TrajectoryOrBuilder>(
                  trajectory_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          trajectory_ = null;
        }
        return trajectoryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.DebugMessage)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.DebugMessage)
    private static final apollo.perception.PerceptionObstacleOuterClass.DebugMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.DebugMessage();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.DebugMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugMessage>
        PARSER = new com.google.protobuf.AbstractParser<DebugMessage>() {
      @java.lang.Override
      public DebugMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DebugMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.DebugMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PerceptionObstacleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.PerceptionObstacle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * obstacle ID.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * obstacle ID.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     * @return The position.
     */
    apollo.common.Geometry.Point3D getPosition();
    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder();

    /**
     * <pre>
     * heading in the world coordinate system.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     * @return Whether the theta field is set.
     */
    boolean hasTheta();
    /**
     * <pre>
     * heading in the world coordinate system.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     * @return The theta.
     */
    double getTheta();

    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     * @return Whether the velocity field is set.
     */
    boolean hasVelocity();
    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     * @return The velocity.
     */
    apollo.common.Geometry.Point3D getVelocity();
    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder();

    /**
     * <pre>
     * Size of obstacle bounding box.
     * </pre>
     *
     * <code>optional double length = 5;</code>
     * @return Whether the length field is set.
     */
    boolean hasLength();
    /**
     * <pre>
     * Size of obstacle bounding box.
     * </pre>
     *
     * <code>optional double length = 5;</code>
     * @return The length.
     */
    double getLength();

    /**
     * <pre>
     * obstacle width.
     * </pre>
     *
     * <code>optional double width = 6;</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <pre>
     * obstacle width.
     * </pre>
     *
     * <code>optional double width = 6;</code>
     * @return The width.
     */
    double getWidth();

    /**
     * <pre>
     * obstacle height.
     * </pre>
     *
     * <code>optional double height = 7;</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <pre>
     * obstacle height.
     * </pre>
     *
     * <code>optional double height = 7;</code>
     * @return The height.
     */
    double getHeight();

    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    java.util.List<apollo.common.Geometry.Point3D> 
        getPolygonPointList();
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    apollo.common.Geometry.Point3D getPolygonPoint(int index);
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    int getPolygonPointCount();
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
        getPolygonPointOrBuilderList();
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getPolygonPointOrBuilder(
        int index);

    /**
     * <pre>
     * duration of an obstacle since detection in s.
     * </pre>
     *
     * <code>optional double tracking_time = 9;</code>
     * @return Whether the trackingTime field is set.
     */
    boolean hasTrackingTime();
    /**
     * <pre>
     * duration of an obstacle since detection in s.
     * </pre>
     *
     * <code>optional double tracking_time = 9;</code>
     * @return The trackingTime.
     */
    double getTrackingTime();

    /**
     * <pre>
     * obstacle type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * obstacle type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
     * @return The type.
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType();

    /**
     * <pre>
     * GPS time in seconds.
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * GPS time in seconds.
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     * @return The timestamp.
     */
    double getTimestamp();

    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @return A list containing the pointCloud.
     */
    java.util.List<java.lang.Double> getPointCloudList();
    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @return The count of pointCloud.
     */
    int getPointCloudCount();
    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The pointCloud at the given index.
     */
    double getPointCloud(int index);

    /**
     * <code>optional double confidence = 13 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=97
     * @return Whether the confidence field is set.
     */
    @java.lang.Deprecated boolean hasConfidence();
    /**
     * <code>optional double confidence = 13 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=97
     * @return The confidence.
     */
    @java.lang.Deprecated double getConfidence();

    /**
     * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=103
     * @return Whether the confidenceType field is set.
     */
    @java.lang.Deprecated boolean hasConfidenceType();
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=103
     * @return The confidenceType.
     */
    @java.lang.Deprecated apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType getConfidenceType();

    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<apollo.common.Geometry.Point3D> 
        getDropsList();
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated apollo.common.Geometry.Point3D getDrops(int index);
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getDropsCount();
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
        getDropsOrBuilderList();
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated apollo.common.Geometry.Point3DOrBuilder getDropsOrBuilder(
        int index);

    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     * @return Whether the acceleration field is set.
     */
    boolean hasAcceleration();
    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     * @return The acceleration.
     */
    apollo.common.Geometry.Point3D getAcceleration();
    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getAccelerationOrBuilder();

    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     * @return Whether the anchorPoint field is set.
     */
    boolean hasAnchorPoint();
    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     * @return The anchorPoint.
     */
    apollo.common.Geometry.Point3D getAnchorPoint();
    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     */
    apollo.common.Geometry.Point3DOrBuilder getAnchorPointOrBuilder();

    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     * @return Whether the bbox2d field is set.
     */
    boolean hasBbox2D();
    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     * @return The bbox2d.
     */
    apollo.perception.PerceptionObstacleOuterClass.BBox2D getBbox2D();
    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBbox2DOrBuilder();

    /**
     * <pre>
     * obstacle sub_type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
     * @return Whether the subType field is set.
     */
    boolean hasSubType();
    /**
     * <pre>
     * obstacle sub_type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
     * @return The subType.
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType();

    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> 
        getMeasurementsList();
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getMeasurements(int index);
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    int getMeasurementsCount();
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder> 
        getMeasurementsOrBuilderList();
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder getMeasurementsOrBuilder(
        int index);

    /**
     * <pre>
     * orthogonal distance between obstacle lowest point and ground plane
     * </pre>
     *
     * <code>optional double height_above_ground = 21 [default = nan];</code>
     * @return Whether the heightAboveGround field is set.
     */
    boolean hasHeightAboveGround();
    /**
     * <pre>
     * orthogonal distance between obstacle lowest point and ground plane
     * </pre>
     *
     * <code>optional double height_above_ground = 21 [default = nan];</code>
     * @return The heightAboveGround.
     */
    double getHeightAboveGround();

    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @return A list containing the positionCovariance.
     */
    java.util.List<java.lang.Double> getPositionCovarianceList();
    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @return The count of positionCovariance.
     */
    int getPositionCovarianceCount();
    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The positionCovariance at the given index.
     */
    double getPositionCovariance(int index);

    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @return A list containing the velocityCovariance.
     */
    java.util.List<java.lang.Double> getVelocityCovarianceList();
    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @return The count of velocityCovariance.
     */
    int getVelocityCovarianceCount();
    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The velocityCovariance at the given index.
     */
    double getVelocityCovariance(int index);

    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @return A list containing the accelerationCovariance.
     */
    java.util.List<java.lang.Double> getAccelerationCovarianceList();
    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @return The count of accelerationCovariance.
     */
    int getAccelerationCovarianceCount();
    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The accelerationCovariance at the given index.
     */
    double getAccelerationCovariance(int index);

    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     * @return Whether the lightStatus field is set.
     */
    boolean hasLightStatus();
    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     * @return The lightStatus.
     */
    apollo.perception.PerceptionObstacleOuterClass.LightStatus getLightStatus();
    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder getLightStatusOrBuilder();

    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     * @return Whether the msg field is set.
     */
    boolean hasMsg();
    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     * @return The msg.
     */
    apollo.perception.PerceptionObstacleOuterClass.DebugMessage getMsg();
    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder getMsgOrBuilder();

    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
     * @return The source.
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source getSource();

    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     * @return Whether the v2xInfo field is set.
     */
    boolean hasV2XInfo();
    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     * @return The v2xInfo.
     */
    apollo.perception.PerceptionObstacleOuterClass.V2XInformation getV2XInfo();
    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder getV2XInfoOrBuilder();

    /**
     * <pre>
     * add object of the confidence
     * </pre>
     *
     * <code>optional double object_confidence = 29;</code>
     * @return Whether the objectConfidence field is set.
     */
    boolean hasObjectConfidence();
    /**
     * <pre>
     * add object of the confidence
     * </pre>
     *
     * <code>optional double object_confidence = 29;</code>
     * @return The objectConfidence.
     */
    double getObjectConfidence();
  }
  /**
   * Protobuf type {@code apollo.perception.PerceptionObstacle}
   */
  public static final class PerceptionObstacle extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.PerceptionObstacle)
      PerceptionObstacleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PerceptionObstacle.class.getName());
    }
    // Use PerceptionObstacle.newBuilder() to construct.
    private PerceptionObstacle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PerceptionObstacle() {
      polygonPoint_ = java.util.Collections.emptyList();
      type_ = 0;
      pointCloud_ = emptyDoubleList();
      confidenceType_ = 0;
      drops_ = java.util.Collections.emptyList();
      subType_ = 0;
      measurements_ = java.util.Collections.emptyList();
      heightAboveGround_ = Double.NaN;
      positionCovariance_ = emptyDoubleList();
      velocityCovariance_ = emptyDoubleList();
      accelerationCovariance_ = emptyDoubleList();
      source_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.class, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder.class);
    }

    /**
     * Protobuf enum {@code apollo.perception.PerceptionObstacle.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>UNKNOWN_MOVABLE = 1;</code>
       */
      UNKNOWN_MOVABLE(1),
      /**
       * <code>UNKNOWN_UNMOVABLE = 2;</code>
       */
      UNKNOWN_UNMOVABLE(2),
      /**
       * <pre>
       * Pedestrian, usually determined by moving behavior.
       * </pre>
       *
       * <code>PEDESTRIAN = 3;</code>
       */
      PEDESTRIAN(3),
      /**
       * <pre>
       * bike, motor bike
       * </pre>
       *
       * <code>BICYCLE = 4;</code>
       */
      BICYCLE(4),
      /**
       * <pre>
       * Passenger car or truck.
       * </pre>
       *
       * <code>VEHICLE = 5;</code>
       */
      VEHICLE(5),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          Type.class.getName());
      }
      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>UNKNOWN_MOVABLE = 1;</code>
       */
      public static final int UNKNOWN_MOVABLE_VALUE = 1;
      /**
       * <code>UNKNOWN_UNMOVABLE = 2;</code>
       */
      public static final int UNKNOWN_UNMOVABLE_VALUE = 2;
      /**
       * <pre>
       * Pedestrian, usually determined by moving behavior.
       * </pre>
       *
       * <code>PEDESTRIAN = 3;</code>
       */
      public static final int PEDESTRIAN_VALUE = 3;
      /**
       * <pre>
       * bike, motor bike
       * </pre>
       *
       * <code>BICYCLE = 4;</code>
       */
      public static final int BICYCLE_VALUE = 4;
      /**
       * <pre>
       * Passenger car or truck.
       * </pre>
       *
       * <code>VEHICLE = 5;</code>
       */
      public static final int VEHICLE_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return UNKNOWN_MOVABLE;
          case 2: return UNKNOWN_UNMOVABLE;
          case 3: return PEDESTRIAN;
          case 4: return BICYCLE;
          case 5: return VEHICLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.perception.PerceptionObstacle.Type)
    }

    /**
     * Protobuf enum {@code apollo.perception.PerceptionObstacle.ConfidenceType}
     */
    public enum ConfidenceType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONFIDENCE_UNKNOWN = 0;</code>
       */
      CONFIDENCE_UNKNOWN(0),
      /**
       * <code>CONFIDENCE_CNN = 1;</code>
       */
      CONFIDENCE_CNN(1),
      /**
       * <code>CONFIDENCE_RADAR = 2;</code>
       */
      CONFIDENCE_RADAR(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          ConfidenceType.class.getName());
      }
      /**
       * <code>CONFIDENCE_UNKNOWN = 0;</code>
       */
      public static final int CONFIDENCE_UNKNOWN_VALUE = 0;
      /**
       * <code>CONFIDENCE_CNN = 1;</code>
       */
      public static final int CONFIDENCE_CNN_VALUE = 1;
      /**
       * <code>CONFIDENCE_RADAR = 2;</code>
       */
      public static final int CONFIDENCE_RADAR_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConfidenceType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ConfidenceType forNumber(int value) {
        switch (value) {
          case 0: return CONFIDENCE_UNKNOWN;
          case 1: return CONFIDENCE_CNN;
          case 2: return CONFIDENCE_RADAR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ConfidenceType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ConfidenceType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ConfidenceType>() {
              public ConfidenceType findValueByNumber(int number) {
                return ConfidenceType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDescriptor().getEnumTypes().get(1);
      }

      private static final ConfidenceType[] VALUES = values();

      public static ConfidenceType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ConfidenceType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.perception.PerceptionObstacle.ConfidenceType)
    }

    /**
     * Protobuf enum {@code apollo.perception.PerceptionObstacle.SubType}
     */
    public enum SubType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ST_UNKNOWN = 0;</code>
       */
      ST_UNKNOWN(0),
      /**
       * <code>ST_UNKNOWN_MOVABLE = 1;</code>
       */
      ST_UNKNOWN_MOVABLE(1),
      /**
       * <code>ST_UNKNOWN_UNMOVABLE = 2;</code>
       */
      ST_UNKNOWN_UNMOVABLE(2),
      /**
       * <code>ST_CAR = 3;</code>
       */
      ST_CAR(3),
      /**
       * <code>ST_VAN = 4;</code>
       */
      ST_VAN(4),
      /**
       * <code>ST_TRUCK = 5;</code>
       */
      ST_TRUCK(5),
      /**
       * <code>ST_BUS = 6;</code>
       */
      ST_BUS(6),
      /**
       * <code>ST_CYCLIST = 7;</code>
       */
      ST_CYCLIST(7),
      /**
       * <code>ST_MOTORCYCLIST = 8;</code>
       */
      ST_MOTORCYCLIST(8),
      /**
       * <code>ST_TRICYCLIST = 9;</code>
       */
      ST_TRICYCLIST(9),
      /**
       * <code>ST_PEDESTRIAN = 10;</code>
       */
      ST_PEDESTRIAN(10),
      /**
       * <code>ST_TRAFFICCONE = 11;</code>
       */
      ST_TRAFFICCONE(11),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          SubType.class.getName());
      }
      /**
       * <code>ST_UNKNOWN = 0;</code>
       */
      public static final int ST_UNKNOWN_VALUE = 0;
      /**
       * <code>ST_UNKNOWN_MOVABLE = 1;</code>
       */
      public static final int ST_UNKNOWN_MOVABLE_VALUE = 1;
      /**
       * <code>ST_UNKNOWN_UNMOVABLE = 2;</code>
       */
      public static final int ST_UNKNOWN_UNMOVABLE_VALUE = 2;
      /**
       * <code>ST_CAR = 3;</code>
       */
      public static final int ST_CAR_VALUE = 3;
      /**
       * <code>ST_VAN = 4;</code>
       */
      public static final int ST_VAN_VALUE = 4;
      /**
       * <code>ST_TRUCK = 5;</code>
       */
      public static final int ST_TRUCK_VALUE = 5;
      /**
       * <code>ST_BUS = 6;</code>
       */
      public static final int ST_BUS_VALUE = 6;
      /**
       * <code>ST_CYCLIST = 7;</code>
       */
      public static final int ST_CYCLIST_VALUE = 7;
      /**
       * <code>ST_MOTORCYCLIST = 8;</code>
       */
      public static final int ST_MOTORCYCLIST_VALUE = 8;
      /**
       * <code>ST_TRICYCLIST = 9;</code>
       */
      public static final int ST_TRICYCLIST_VALUE = 9;
      /**
       * <code>ST_PEDESTRIAN = 10;</code>
       */
      public static final int ST_PEDESTRIAN_VALUE = 10;
      /**
       * <code>ST_TRAFFICCONE = 11;</code>
       */
      public static final int ST_TRAFFICCONE_VALUE = 11;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SubType forNumber(int value) {
        switch (value) {
          case 0: return ST_UNKNOWN;
          case 1: return ST_UNKNOWN_MOVABLE;
          case 2: return ST_UNKNOWN_UNMOVABLE;
          case 3: return ST_CAR;
          case 4: return ST_VAN;
          case 5: return ST_TRUCK;
          case 6: return ST_BUS;
          case 7: return ST_CYCLIST;
          case 8: return ST_MOTORCYCLIST;
          case 9: return ST_TRICYCLIST;
          case 10: return ST_PEDESTRIAN;
          case 11: return ST_TRAFFICCONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SubType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SubType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SubType>() {
              public SubType findValueByNumber(int number) {
                return SubType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDescriptor().getEnumTypes().get(2);
      }

      private static final SubType[] VALUES = values();

      public static SubType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SubType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.perception.PerceptionObstacle.SubType)
    }

    /**
     * Protobuf enum {@code apollo.perception.PerceptionObstacle.Source}
     */
    public enum Source
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HOST_VEHICLE = 0;</code>
       */
      HOST_VEHICLE(0),
      /**
       * <code>V2X = 1;</code>
       */
      V2X(1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          Source.class.getName());
      }
      /**
       * <code>HOST_VEHICLE = 0;</code>
       */
      public static final int HOST_VEHICLE_VALUE = 0;
      /**
       * <code>V2X = 1;</code>
       */
      public static final int V2X_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Source valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Source forNumber(int value) {
        switch (value) {
          case 0: return HOST_VEHICLE;
          case 1: return V2X;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Source>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Source> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Source>() {
              public Source findValueByNumber(int number) {
                return Source.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDescriptor().getEnumTypes().get(3);
      }

      private static final Source[] VALUES = values();

      public static Source valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Source(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:apollo.perception.PerceptionObstacle.Source)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <pre>
     * obstacle ID.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * obstacle ID.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private apollo.common.Geometry.Point3D position_;
    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     * @return The position.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getPosition() {
      return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     * obstacle position in the world coordinate system.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D position = 2;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder() {
      return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
    }

    public static final int THETA_FIELD_NUMBER = 3;
    private double theta_ = 0D;
    /**
     * <pre>
     * heading in the world coordinate system.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     * @return Whether the theta field is set.
     */
    @java.lang.Override
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * heading in the world coordinate system.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     * @return The theta.
     */
    @java.lang.Override
    public double getTheta() {
      return theta_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 4;
    private apollo.common.Geometry.Point3D velocity_;
    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     * @return Whether the velocity field is set.
     */
    @java.lang.Override
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     * @return The velocity.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getVelocity() {
      return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
    }
    /**
     * <pre>
     * obstacle velocity.
     * </pre>
     *
     * <code>optional .apollo.common.Point3D velocity = 4;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder() {
      return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
    }

    public static final int LENGTH_FIELD_NUMBER = 5;
    private double length_ = 0D;
    /**
     * <pre>
     * Size of obstacle bounding box.
     * </pre>
     *
     * <code>optional double length = 5;</code>
     * @return Whether the length field is set.
     */
    @java.lang.Override
    public boolean hasLength() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Size of obstacle bounding box.
     * </pre>
     *
     * <code>optional double length = 5;</code>
     * @return The length.
     */
    @java.lang.Override
    public double getLength() {
      return length_;
    }

    public static final int WIDTH_FIELD_NUMBER = 6;
    private double width_ = 0D;
    /**
     * <pre>
     * obstacle width.
     * </pre>
     *
     * <code>optional double width = 6;</code>
     * @return Whether the width field is set.
     */
    @java.lang.Override
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * obstacle width.
     * </pre>
     *
     * <code>optional double width = 6;</code>
     * @return The width.
     */
    @java.lang.Override
    public double getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 7;
    private double height_ = 0D;
    /**
     * <pre>
     * obstacle height.
     * </pre>
     *
     * <code>optional double height = 7;</code>
     * @return Whether the height field is set.
     */
    @java.lang.Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * obstacle height.
     * </pre>
     *
     * <code>optional double height = 7;</code>
     * @return The height.
     */
    @java.lang.Override
    public double getHeight() {
      return height_;
    }

    public static final int POLYGON_POINT_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<apollo.common.Geometry.Point3D> polygonPoint_;
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.common.Geometry.Point3D> getPolygonPointList() {
      return polygonPoint_;
    }
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
        getPolygonPointOrBuilderList() {
      return polygonPoint_;
    }
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    @java.lang.Override
    public int getPolygonPointCount() {
      return polygonPoint_.size();
    }
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getPolygonPoint(int index) {
      return polygonPoint_.get(index);
    }
    /**
     * <pre>
     * obstacle corner points.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getPolygonPointOrBuilder(
        int index) {
      return polygonPoint_.get(index);
    }

    public static final int TRACKING_TIME_FIELD_NUMBER = 9;
    private double trackingTime_ = 0D;
    /**
     * <pre>
     * duration of an obstacle since detection in s.
     * </pre>
     *
     * <code>optional double tracking_time = 9;</code>
     * @return Whether the trackingTime field is set.
     */
    @java.lang.Override
    public boolean hasTrackingTime() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * duration of an obstacle since detection in s.
     * </pre>
     *
     * <code>optional double tracking_time = 9;</code>
     * @return The trackingTime.
     */
    @java.lang.Override
    public double getTrackingTime() {
      return trackingTime_;
    }

    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_ = 0;
    /**
     * <pre>
     * obstacle type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * obstacle type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
     * @return The type.
     */
    @java.lang.Override public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(type_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.UNKNOWN : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 11;
    private double timestamp_ = 0D;
    /**
     * <pre>
     * GPS time in seconds.
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * GPS time in seconds.
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public double getTimestamp() {
      return timestamp_;
    }

    public static final int POINT_CLOUD_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList pointCloud_ =
        emptyDoubleList();
    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @return A list containing the pointCloud.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getPointCloudList() {
      return pointCloud_;
    }
    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @return The count of pointCloud.
     */
    public int getPointCloudCount() {
      return pointCloud_.size();
    }
    /**
     * <pre>
     * Just for offline debugging, will not fill this field on board.
     * Format: [x0, y0, z0, x1, y1, z1...]
     * </pre>
     *
     * <code>repeated double point_cloud = 12 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The pointCloud at the given index.
     */
    public double getPointCloud(int index) {
      return pointCloud_.getDouble(index);
    }
    private int pointCloudMemoizedSerializedSize = -1;

    public static final int CONFIDENCE_FIELD_NUMBER = 13;
    private double confidence_ = 0D;
    /**
     * <code>optional double confidence = 13 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=97
     * @return Whether the confidence field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasConfidence() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional double confidence = 13 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=97
     * @return The confidence.
     */
    @java.lang.Override
    @java.lang.Deprecated public double getConfidence() {
      return confidence_;
    }

    public static final int CONFIDENCE_TYPE_FIELD_NUMBER = 14;
    private int confidenceType_ = 0;
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=103
     * @return Whether the confidenceType field is set.
     */
    @java.lang.Override @java.lang.Deprecated public boolean hasConfidenceType() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
     * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
     *     See modules/perception/proto/perception_obstacle.proto;l=103
     * @return The confidenceType.
     */
    @java.lang.Override @java.lang.Deprecated public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType getConfidenceType() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType.forNumber(confidenceType_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType.CONFIDENCE_UNKNOWN : result;
    }

    public static final int DROPS_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private java.util.List<apollo.common.Geometry.Point3D> drops_;
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.List<apollo.common.Geometry.Point3D> getDropsList() {
      return drops_;
    }
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
        getDropsOrBuilderList() {
      return drops_;
    }
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public int getDropsCount() {
      return drops_.size();
    }
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public apollo.common.Geometry.Point3D getDrops(int index) {
      return drops_.get(index);
    }
    /**
     * <pre>
     * trajectory of object.
     * </pre>
     *
     * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public apollo.common.Geometry.Point3DOrBuilder getDropsOrBuilder(
        int index) {
      return drops_.get(index);
    }

    public static final int ACCELERATION_FIELD_NUMBER = 16;
    private apollo.common.Geometry.Point3D acceleration_;
    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     * @return Whether the acceleration field is set.
     */
    @java.lang.Override
    public boolean hasAcceleration() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     * @return The acceleration.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getAcceleration() {
      return acceleration_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : acceleration_;
    }
    /**
     * <pre>
     * The following fields are new added in Apollo 4.0
     * </pre>
     *
     * <code>optional .apollo.common.Point3D acceleration = 16;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getAccelerationOrBuilder() {
      return acceleration_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : acceleration_;
    }

    public static final int ANCHOR_POINT_FIELD_NUMBER = 17;
    private apollo.common.Geometry.Point3D anchorPoint_;
    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     * @return Whether the anchorPoint field is set.
     */
    @java.lang.Override
    public boolean hasAnchorPoint() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     * @return The anchorPoint.
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3D getAnchorPoint() {
      return anchorPoint_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : anchorPoint_;
    }
    /**
     * <pre>
     * a stable obstacle point in the world coordinate system
     * position defined above is the obstacle bounding box ground center
     * </pre>
     *
     * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
     */
    @java.lang.Override
    public apollo.common.Geometry.Point3DOrBuilder getAnchorPointOrBuilder() {
      return anchorPoint_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : anchorPoint_;
    }

    public static final int BBOX2D_FIELD_NUMBER = 18;
    private apollo.perception.PerceptionObstacleOuterClass.BBox2D bbox2D_;
    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     * @return Whether the bbox2d field is set.
     */
    @java.lang.Override
    public boolean hasBbox2D() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     * @return The bbox2d.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.BBox2D getBbox2D() {
      return bbox2D_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : bbox2D_;
    }
    /**
     * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBbox2DOrBuilder() {
      return bbox2D_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : bbox2D_;
    }

    public static final int SUB_TYPE_FIELD_NUMBER = 19;
    private int subType_ = 0;
    /**
     * <pre>
     * obstacle sub_type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
     * @return Whether the subType field is set.
     */
    @java.lang.Override public boolean hasSubType() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * obstacle sub_type
     * </pre>
     *
     * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
     * @return The subType.
     */
    @java.lang.Override public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(subType_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.ST_UNKNOWN : result;
    }

    public static final int MEASUREMENTS_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> measurements_;
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> getMeasurementsList() {
      return measurements_;
    }
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder> 
        getMeasurementsOrBuilderList() {
      return measurements_;
    }
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    @java.lang.Override
    public int getMeasurementsCount() {
      return measurements_.size();
    }
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getMeasurements(int index) {
      return measurements_.get(index);
    }
    /**
     * <pre>
     * sensor measurements
     * </pre>
     *
     * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder getMeasurementsOrBuilder(
        int index) {
      return measurements_.get(index);
    }

    public static final int HEIGHT_ABOVE_GROUND_FIELD_NUMBER = 21;
    private double heightAboveGround_ = Double.NaN;
    /**
     * <pre>
     * orthogonal distance between obstacle lowest point and ground plane
     * </pre>
     *
     * <code>optional double height_above_ground = 21 [default = nan];</code>
     * @return Whether the heightAboveGround field is set.
     */
    @java.lang.Override
    public boolean hasHeightAboveGround() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * orthogonal distance between obstacle lowest point and ground plane
     * </pre>
     *
     * <code>optional double height_above_ground = 21 [default = nan];</code>
     * @return The heightAboveGround.
     */
    @java.lang.Override
    public double getHeightAboveGround() {
      return heightAboveGround_;
    }

    public static final int POSITION_COVARIANCE_FIELD_NUMBER = 22;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList positionCovariance_ =
        emptyDoubleList();
    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @return A list containing the positionCovariance.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getPositionCovarianceList() {
      return positionCovariance_;
    }
    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @return The count of positionCovariance.
     */
    public int getPositionCovarianceCount() {
      return positionCovariance_.size();
    }
    /**
     * <pre>
     * position covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double position_covariance = 22 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The positionCovariance at the given index.
     */
    public double getPositionCovariance(int index) {
      return positionCovariance_.getDouble(index);
    }
    private int positionCovarianceMemoizedSerializedSize = -1;

    public static final int VELOCITY_COVARIANCE_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList velocityCovariance_ =
        emptyDoubleList();
    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @return A list containing the velocityCovariance.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getVelocityCovarianceList() {
      return velocityCovariance_;
    }
    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @return The count of velocityCovariance.
     */
    public int getVelocityCovarianceCount() {
      return velocityCovariance_.size();
    }
    /**
     * <pre>
     * velocity covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double velocity_covariance = 23 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The velocityCovariance at the given index.
     */
    public double getVelocityCovariance(int index) {
      return velocityCovariance_.getDouble(index);
    }
    private int velocityCovarianceMemoizedSerializedSize = -1;

    public static final int ACCELERATION_COVARIANCE_FIELD_NUMBER = 24;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList accelerationCovariance_ =
        emptyDoubleList();
    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @return A list containing the accelerationCovariance.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAccelerationCovarianceList() {
      return accelerationCovariance_;
    }
    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @return The count of accelerationCovariance.
     */
    public int getAccelerationCovarianceCount() {
      return accelerationCovariance_.size();
    }
    /**
     * <pre>
     * acceleration covariance which is a row-majored 3x3 matrix
     * </pre>
     *
     * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The accelerationCovariance at the given index.
     */
    public double getAccelerationCovariance(int index) {
      return accelerationCovariance_.getDouble(index);
    }
    private int accelerationCovarianceMemoizedSerializedSize = -1;

    public static final int LIGHT_STATUS_FIELD_NUMBER = 25;
    private apollo.perception.PerceptionObstacleOuterClass.LightStatus lightStatus_;
    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     * @return Whether the lightStatus field is set.
     */
    @java.lang.Override
    public boolean hasLightStatus() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     * @return The lightStatus.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LightStatus getLightStatus() {
      return lightStatus_ == null ? apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance() : lightStatus_;
    }
    /**
     * <pre>
     * lights of vehicles
     * </pre>
     *
     * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder getLightStatusOrBuilder() {
      return lightStatus_ == null ? apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance() : lightStatus_;
    }

    public static final int MSG_FIELD_NUMBER = 26;
    private apollo.perception.PerceptionObstacleOuterClass.DebugMessage msg_;
    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     * @return Whether the msg field is set.
     */
    @java.lang.Override
    public boolean hasMsg() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     * @return The msg.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.DebugMessage getMsg() {
      return msg_ == null ? apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance() : msg_;
    }
    /**
     * <pre>
     * Debug Message
     * </pre>
     *
     * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder getMsgOrBuilder() {
      return msg_ == null ? apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance() : msg_;
    }

    public static final int SOURCE_FIELD_NUMBER = 27;
    private int source_ = 0;
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override public boolean hasSource() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
     * @return The source.
     */
    @java.lang.Override public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source getSource() {
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source.forNumber(source_);
      return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source.HOST_VEHICLE : result;
    }

    public static final int V2X_INFO_FIELD_NUMBER = 28;
    private apollo.perception.PerceptionObstacleOuterClass.V2XInformation v2XInfo_;
    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     * @return Whether the v2xInfo field is set.
     */
    @java.lang.Override
    public boolean hasV2XInfo() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     * @return The v2xInfo.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.V2XInformation getV2XInfo() {
      return v2XInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance() : v2XInfo_;
    }
    /**
     * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder getV2XInfoOrBuilder() {
      return v2XInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance() : v2XInfo_;
    }

    public static final int OBJECT_CONFIDENCE_FIELD_NUMBER = 29;
    private double objectConfidence_ = 0D;
    /**
     * <pre>
     * add object of the confidence
     * </pre>
     *
     * <code>optional double object_confidence = 29;</code>
     * @return Whether the objectConfidence field is set.
     */
    @java.lang.Override
    public boolean hasObjectConfidence() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * add object of the confidence
     * </pre>
     *
     * <code>optional double object_confidence = 29;</code>
     * @return The objectConfidence.
     */
    @java.lang.Override
    public double getObjectConfidence() {
      return objectConfidence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPosition());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, theta_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getVelocity());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, width_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, height_);
      }
      for (int i = 0; i < polygonPoint_.size(); i++) {
        output.writeMessage(8, polygonPoint_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(9, trackingTime_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeEnum(10, type_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(11, timestamp_);
      }
      if (getPointCloudList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(pointCloudMemoizedSerializedSize);
      }
      for (int i = 0; i < pointCloud_.size(); i++) {
        output.writeDoubleNoTag(pointCloud_.getDouble(i));
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(13, confidence_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeEnum(14, confidenceType_);
      }
      for (int i = 0; i < drops_.size(); i++) {
        output.writeMessage(15, drops_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeMessage(16, getAcceleration());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeMessage(17, getAnchorPoint());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeMessage(18, getBbox2D());
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeEnum(19, subType_);
      }
      for (int i = 0; i < measurements_.size(); i++) {
        output.writeMessage(20, measurements_.get(i));
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeDouble(21, heightAboveGround_);
      }
      if (getPositionCovarianceList().size() > 0) {
        output.writeUInt32NoTag(178);
        output.writeUInt32NoTag(positionCovarianceMemoizedSerializedSize);
      }
      for (int i = 0; i < positionCovariance_.size(); i++) {
        output.writeDoubleNoTag(positionCovariance_.getDouble(i));
      }
      if (getVelocityCovarianceList().size() > 0) {
        output.writeUInt32NoTag(186);
        output.writeUInt32NoTag(velocityCovarianceMemoizedSerializedSize);
      }
      for (int i = 0; i < velocityCovariance_.size(); i++) {
        output.writeDoubleNoTag(velocityCovariance_.getDouble(i));
      }
      if (getAccelerationCovarianceList().size() > 0) {
        output.writeUInt32NoTag(194);
        output.writeUInt32NoTag(accelerationCovarianceMemoizedSerializedSize);
      }
      for (int i = 0; i < accelerationCovariance_.size(); i++) {
        output.writeDoubleNoTag(accelerationCovariance_.getDouble(i));
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeMessage(25, getLightStatus());
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeMessage(26, getMsg());
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeEnum(27, source_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeMessage(28, getV2XInfo());
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeDouble(29, objectConfidence_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, theta_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVelocity());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, width_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, height_);
      }
      for (int i = 0; i < polygonPoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, polygonPoint_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, trackingTime_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, type_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, timestamp_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPointCloudList().size();
        size += dataSize;
        if (!getPointCloudList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        pointCloudMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, confidence_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, confidenceType_);
      }
      for (int i = 0; i < drops_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, drops_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getAcceleration());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getAnchorPoint());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getBbox2D());
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, subType_);
      }
      for (int i = 0; i < measurements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, measurements_.get(i));
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, heightAboveGround_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPositionCovarianceList().size();
        size += dataSize;
        if (!getPositionCovarianceList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        positionCovarianceMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getVelocityCovarianceList().size();
        size += dataSize;
        if (!getVelocityCovarianceList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        velocityCovarianceMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAccelerationCovarianceList().size();
        size += dataSize;
        if (!getAccelerationCovarianceList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        accelerationCovarianceMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getLightStatus());
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getMsg());
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(27, source_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getV2XInfo());
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(29, objectConfidence_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle other = (apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (hasTheta() != other.hasTheta()) return false;
      if (hasTheta()) {
        if (java.lang.Double.doubleToLongBits(getTheta())
            != java.lang.Double.doubleToLongBits(
                other.getTheta())) return false;
      }
      if (hasVelocity() != other.hasVelocity()) return false;
      if (hasVelocity()) {
        if (!getVelocity()
            .equals(other.getVelocity())) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (java.lang.Double.doubleToLongBits(getLength())
            != java.lang.Double.doubleToLongBits(
                other.getLength())) return false;
      }
      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (java.lang.Double.doubleToLongBits(getWidth())
            != java.lang.Double.doubleToLongBits(
                other.getWidth())) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (java.lang.Double.doubleToLongBits(getHeight())
            != java.lang.Double.doubleToLongBits(
                other.getHeight())) return false;
      }
      if (!getPolygonPointList()
          .equals(other.getPolygonPointList())) return false;
      if (hasTrackingTime() != other.hasTrackingTime()) return false;
      if (hasTrackingTime()) {
        if (java.lang.Double.doubleToLongBits(getTrackingTime())
            != java.lang.Double.doubleToLongBits(
                other.getTrackingTime())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (java.lang.Double.doubleToLongBits(getTimestamp())
            != java.lang.Double.doubleToLongBits(
                other.getTimestamp())) return false;
      }
      if (!getPointCloudList()
          .equals(other.getPointCloudList())) return false;
      if (hasConfidence() != other.hasConfidence()) return false;
      if (hasConfidence()) {
        if (java.lang.Double.doubleToLongBits(getConfidence())
            != java.lang.Double.doubleToLongBits(
                other.getConfidence())) return false;
      }
      if (hasConfidenceType() != other.hasConfidenceType()) return false;
      if (hasConfidenceType()) {
        if (confidenceType_ != other.confidenceType_) return false;
      }
      if (!getDropsList()
          .equals(other.getDropsList())) return false;
      if (hasAcceleration() != other.hasAcceleration()) return false;
      if (hasAcceleration()) {
        if (!getAcceleration()
            .equals(other.getAcceleration())) return false;
      }
      if (hasAnchorPoint() != other.hasAnchorPoint()) return false;
      if (hasAnchorPoint()) {
        if (!getAnchorPoint()
            .equals(other.getAnchorPoint())) return false;
      }
      if (hasBbox2D() != other.hasBbox2D()) return false;
      if (hasBbox2D()) {
        if (!getBbox2D()
            .equals(other.getBbox2D())) return false;
      }
      if (hasSubType() != other.hasSubType()) return false;
      if (hasSubType()) {
        if (subType_ != other.subType_) return false;
      }
      if (!getMeasurementsList()
          .equals(other.getMeasurementsList())) return false;
      if (hasHeightAboveGround() != other.hasHeightAboveGround()) return false;
      if (hasHeightAboveGround()) {
        if (java.lang.Double.doubleToLongBits(getHeightAboveGround())
            != java.lang.Double.doubleToLongBits(
                other.getHeightAboveGround())) return false;
      }
      if (!getPositionCovarianceList()
          .equals(other.getPositionCovarianceList())) return false;
      if (!getVelocityCovarianceList()
          .equals(other.getVelocityCovarianceList())) return false;
      if (!getAccelerationCovarianceList()
          .equals(other.getAccelerationCovarianceList())) return false;
      if (hasLightStatus() != other.hasLightStatus()) return false;
      if (hasLightStatus()) {
        if (!getLightStatus()
            .equals(other.getLightStatus())) return false;
      }
      if (hasMsg() != other.hasMsg()) return false;
      if (hasMsg()) {
        if (!getMsg()
            .equals(other.getMsg())) return false;
      }
      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (source_ != other.source_) return false;
      }
      if (hasV2XInfo() != other.hasV2XInfo()) return false;
      if (hasV2XInfo()) {
        if (!getV2XInfo()
            .equals(other.getV2XInfo())) return false;
      }
      if (hasObjectConfidence() != other.hasObjectConfidence()) return false;
      if (hasObjectConfidence()) {
        if (java.lang.Double.doubleToLongBits(getObjectConfidence())
            != java.lang.Double.doubleToLongBits(
                other.getObjectConfidence())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (hasTheta()) {
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTheta()));
      }
      if (hasVelocity()) {
        hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + getVelocity().hashCode();
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLength()));
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getWidth()));
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHeight()));
      }
      if (getPolygonPointCount() > 0) {
        hash = (37 * hash) + POLYGON_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPolygonPointList().hashCode();
      }
      if (hasTrackingTime()) {
        hash = (37 * hash) + TRACKING_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTrackingTime()));
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      if (getPointCloudCount() > 0) {
        hash = (37 * hash) + POINT_CLOUD_FIELD_NUMBER;
        hash = (53 * hash) + getPointCloudList().hashCode();
      }
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getConfidence()));
      }
      if (hasConfidenceType()) {
        hash = (37 * hash) + CONFIDENCE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + confidenceType_;
      }
      if (getDropsCount() > 0) {
        hash = (37 * hash) + DROPS_FIELD_NUMBER;
        hash = (53 * hash) + getDropsList().hashCode();
      }
      if (hasAcceleration()) {
        hash = (37 * hash) + ACCELERATION_FIELD_NUMBER;
        hash = (53 * hash) + getAcceleration().hashCode();
      }
      if (hasAnchorPoint()) {
        hash = (37 * hash) + ANCHOR_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getAnchorPoint().hashCode();
      }
      if (hasBbox2D()) {
        hash = (37 * hash) + BBOX2D_FIELD_NUMBER;
        hash = (53 * hash) + getBbox2D().hashCode();
      }
      if (hasSubType()) {
        hash = (37 * hash) + SUB_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + subType_;
      }
      if (getMeasurementsCount() > 0) {
        hash = (37 * hash) + MEASUREMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getMeasurementsList().hashCode();
      }
      if (hasHeightAboveGround()) {
        hash = (37 * hash) + HEIGHT_ABOVE_GROUND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHeightAboveGround()));
      }
      if (getPositionCovarianceCount() > 0) {
        hash = (37 * hash) + POSITION_COVARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getPositionCovarianceList().hashCode();
      }
      if (getVelocityCovarianceCount() > 0) {
        hash = (37 * hash) + VELOCITY_COVARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getVelocityCovarianceList().hashCode();
      }
      if (getAccelerationCovarianceCount() > 0) {
        hash = (37 * hash) + ACCELERATION_COVARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAccelerationCovarianceList().hashCode();
      }
      if (hasLightStatus()) {
        hash = (37 * hash) + LIGHT_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getLightStatus().hashCode();
      }
      if (hasMsg()) {
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsg().hashCode();
      }
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + source_;
      }
      if (hasV2XInfo()) {
        hash = (37 * hash) + V2X_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getV2XInfo().hashCode();
      }
      if (hasObjectConfidence()) {
        hash = (37 * hash) + OBJECT_CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getObjectConfidence()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.PerceptionObstacle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.PerceptionObstacle)
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.class, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getVelocityFieldBuilder();
          getPolygonPointFieldBuilder();
          getDropsFieldBuilder();
          getAccelerationFieldBuilder();
          getAnchorPointFieldBuilder();
          getBbox2DFieldBuilder();
          getMeasurementsFieldBuilder();
          getLightStatusFieldBuilder();
          getMsgFieldBuilder();
          getV2XInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        theta_ = 0D;
        velocity_ = null;
        if (velocityBuilder_ != null) {
          velocityBuilder_.dispose();
          velocityBuilder_ = null;
        }
        length_ = 0D;
        width_ = 0D;
        height_ = 0D;
        if (polygonPointBuilder_ == null) {
          polygonPoint_ = java.util.Collections.emptyList();
        } else {
          polygonPoint_ = null;
          polygonPointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        trackingTime_ = 0D;
        type_ = 0;
        timestamp_ = 0D;
        pointCloud_ = emptyDoubleList();
        confidence_ = 0D;
        confidenceType_ = 0;
        if (dropsBuilder_ == null) {
          drops_ = java.util.Collections.emptyList();
        } else {
          drops_ = null;
          dropsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        acceleration_ = null;
        if (accelerationBuilder_ != null) {
          accelerationBuilder_.dispose();
          accelerationBuilder_ = null;
        }
        anchorPoint_ = null;
        if (anchorPointBuilder_ != null) {
          anchorPointBuilder_.dispose();
          anchorPointBuilder_ = null;
        }
        bbox2D_ = null;
        if (bbox2DBuilder_ != null) {
          bbox2DBuilder_.dispose();
          bbox2DBuilder_ = null;
        }
        subType_ = 0;
        if (measurementsBuilder_ == null) {
          measurements_ = java.util.Collections.emptyList();
        } else {
          measurements_ = null;
          measurementsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        heightAboveGround_ = Double.NaN;
        positionCovariance_ = emptyDoubleList();
        velocityCovariance_ = emptyDoubleList();
        accelerationCovariance_ = emptyDoubleList();
        lightStatus_ = null;
        if (lightStatusBuilder_ != null) {
          lightStatusBuilder_.dispose();
          lightStatusBuilder_ = null;
        }
        msg_ = null;
        if (msgBuilder_ != null) {
          msgBuilder_.dispose();
          msgBuilder_ = null;
        }
        source_ = 0;
        v2XInfo_ = null;
        if (v2XInfoBuilder_ != null) {
          v2XInfoBuilder_.dispose();
          v2XInfoBuilder_ = null;
        }
        objectConfidence_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacle_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle build() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle result = new apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle result) {
        if (polygonPointBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            polygonPoint_ = java.util.Collections.unmodifiableList(polygonPoint_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.polygonPoint_ = polygonPoint_;
        } else {
          result.polygonPoint_ = polygonPointBuilder_.build();
        }
        if (dropsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0)) {
            drops_ = java.util.Collections.unmodifiableList(drops_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.drops_ = drops_;
        } else {
          result.drops_ = dropsBuilder_.build();
        }
        if (measurementsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0)) {
            measurements_ = java.util.Collections.unmodifiableList(measurements_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.measurements_ = measurements_;
        } else {
          result.measurements_ = measurementsBuilder_.build();
        }
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.position_ = positionBuilder_ == null
              ? position_
              : positionBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.theta_ = theta_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.velocity_ = velocityBuilder_ == null
              ? velocity_
              : velocityBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.length_ = length_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.width_ = width_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.height_ = height_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.trackingTime_ = trackingTime_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          pointCloud_.makeImmutable();
          result.pointCloud_ = pointCloud_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.confidence_ = confidence_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.confidenceType_ = confidenceType_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.acceleration_ = accelerationBuilder_ == null
              ? acceleration_
              : accelerationBuilder_.build();
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.anchorPoint_ = anchorPointBuilder_ == null
              ? anchorPoint_
              : anchorPointBuilder_.build();
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.bbox2D_ = bbox2DBuilder_ == null
              ? bbox2D_
              : bbox2DBuilder_.build();
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.subType_ = subType_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.heightAboveGround_ = heightAboveGround_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          positionCovariance_.makeImmutable();
          result.positionCovariance_ = positionCovariance_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          velocityCovariance_.makeImmutable();
          result.velocityCovariance_ = velocityCovariance_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          accelerationCovariance_.makeImmutable();
          result.accelerationCovariance_ = accelerationCovariance_;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.lightStatus_ = lightStatusBuilder_ == null
              ? lightStatus_
              : lightStatusBuilder_.build();
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.msg_ = msgBuilder_ == null
              ? msg_
              : msgBuilder_.build();
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.source_ = source_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.v2XInfo_ = v2XInfoBuilder_ == null
              ? v2XInfo_
              : v2XInfoBuilder_.build();
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.objectConfidence_ = objectConfidence_;
          to_bitField0_ |= 0x00200000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (polygonPointBuilder_ == null) {
          if (!other.polygonPoint_.isEmpty()) {
            if (polygonPoint_.isEmpty()) {
              polygonPoint_ = other.polygonPoint_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePolygonPointIsMutable();
              polygonPoint_.addAll(other.polygonPoint_);
            }
            onChanged();
          }
        } else {
          if (!other.polygonPoint_.isEmpty()) {
            if (polygonPointBuilder_.isEmpty()) {
              polygonPointBuilder_.dispose();
              polygonPointBuilder_ = null;
              polygonPoint_ = other.polygonPoint_;
              bitField0_ = (bitField0_ & ~0x00000080);
              polygonPointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPolygonPointFieldBuilder() : null;
            } else {
              polygonPointBuilder_.addAllMessages(other.polygonPoint_);
            }
          }
        }
        if (other.hasTrackingTime()) {
          setTrackingTime(other.getTrackingTime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.pointCloud_.isEmpty()) {
          if (pointCloud_.isEmpty()) {
            pointCloud_ = other.pointCloud_;
            pointCloud_.makeImmutable();
            bitField0_ |= 0x00000800;
          } else {
            ensurePointCloudIsMutable();
            pointCloud_.addAll(other.pointCloud_);
          }
          onChanged();
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasConfidenceType()) {
          setConfidenceType(other.getConfidenceType());
        }
        if (dropsBuilder_ == null) {
          if (!other.drops_.isEmpty()) {
            if (drops_.isEmpty()) {
              drops_ = other.drops_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureDropsIsMutable();
              drops_.addAll(other.drops_);
            }
            onChanged();
          }
        } else {
          if (!other.drops_.isEmpty()) {
            if (dropsBuilder_.isEmpty()) {
              dropsBuilder_.dispose();
              dropsBuilder_ = null;
              drops_ = other.drops_;
              bitField0_ = (bitField0_ & ~0x00004000);
              dropsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDropsFieldBuilder() : null;
            } else {
              dropsBuilder_.addAllMessages(other.drops_);
            }
          }
        }
        if (other.hasAcceleration()) {
          mergeAcceleration(other.getAcceleration());
        }
        if (other.hasAnchorPoint()) {
          mergeAnchorPoint(other.getAnchorPoint());
        }
        if (other.hasBbox2D()) {
          mergeBbox2D(other.getBbox2D());
        }
        if (other.hasSubType()) {
          setSubType(other.getSubType());
        }
        if (measurementsBuilder_ == null) {
          if (!other.measurements_.isEmpty()) {
            if (measurements_.isEmpty()) {
              measurements_ = other.measurements_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureMeasurementsIsMutable();
              measurements_.addAll(other.measurements_);
            }
            onChanged();
          }
        } else {
          if (!other.measurements_.isEmpty()) {
            if (measurementsBuilder_.isEmpty()) {
              measurementsBuilder_.dispose();
              measurementsBuilder_ = null;
              measurements_ = other.measurements_;
              bitField0_ = (bitField0_ & ~0x00080000);
              measurementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMeasurementsFieldBuilder() : null;
            } else {
              measurementsBuilder_.addAllMessages(other.measurements_);
            }
          }
        }
        if (other.hasHeightAboveGround()) {
          setHeightAboveGround(other.getHeightAboveGround());
        }
        if (!other.positionCovariance_.isEmpty()) {
          if (positionCovariance_.isEmpty()) {
            positionCovariance_ = other.positionCovariance_;
            positionCovariance_.makeImmutable();
            bitField0_ |= 0x00200000;
          } else {
            ensurePositionCovarianceIsMutable();
            positionCovariance_.addAll(other.positionCovariance_);
          }
          onChanged();
        }
        if (!other.velocityCovariance_.isEmpty()) {
          if (velocityCovariance_.isEmpty()) {
            velocityCovariance_ = other.velocityCovariance_;
            velocityCovariance_.makeImmutable();
            bitField0_ |= 0x00400000;
          } else {
            ensureVelocityCovarianceIsMutable();
            velocityCovariance_.addAll(other.velocityCovariance_);
          }
          onChanged();
        }
        if (!other.accelerationCovariance_.isEmpty()) {
          if (accelerationCovariance_.isEmpty()) {
            accelerationCovariance_ = other.accelerationCovariance_;
            accelerationCovariance_.makeImmutable();
            bitField0_ |= 0x00800000;
          } else {
            ensureAccelerationCovarianceIsMutable();
            accelerationCovariance_.addAll(other.accelerationCovariance_);
          }
          onChanged();
        }
        if (other.hasLightStatus()) {
          mergeLightStatus(other.getLightStatus());
        }
        if (other.hasMsg()) {
          mergeMsg(other.getMsg());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasV2XInfo()) {
          mergeV2XInfo(other.getV2XInfo());
        }
        if (other.hasObjectConfidence()) {
          setObjectConfidence(other.getObjectConfidence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getPositionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                theta_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 34: {
                input.readMessage(
                    getVelocityFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 41: {
                length_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                width_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                height_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 66: {
                apollo.common.Geometry.Point3D m =
                    input.readMessage(
                        apollo.common.Geometry.Point3D.parser(),
                        extensionRegistry);
                if (polygonPointBuilder_ == null) {
                  ensurePolygonPointIsMutable();
                  polygonPoint_.add(m);
                } else {
                  polygonPointBuilder_.addMessage(m);
                }
                break;
              } // case 66
              case 73: {
                trackingTime_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 80: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(10, tmpRaw);
                } else {
                  type_ = tmpRaw;
                  bitField0_ |= 0x00000200;
                }
                break;
              } // case 80
              case 89: {
                timestamp_ = input.readDouble();
                bitField0_ |= 0x00000400;
                break;
              } // case 89
              case 97: {
                double v = input.readDouble();
                ensurePointCloudIsMutable();
                pointCloud_.addDouble(v);
                break;
              } // case 97
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensurePointCloudIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  pointCloud_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 98
              case 105: {
                confidence_ = input.readDouble();
                bitField0_ |= 0x00001000;
                break;
              } // case 105
              case 112: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(14, tmpRaw);
                } else {
                  confidenceType_ = tmpRaw;
                  bitField0_ |= 0x00002000;
                }
                break;
              } // case 112
              case 122: {
                apollo.common.Geometry.Point3D m =
                    input.readMessage(
                        apollo.common.Geometry.Point3D.parser(),
                        extensionRegistry);
                if (dropsBuilder_ == null) {
                  ensureDropsIsMutable();
                  drops_.add(m);
                } else {
                  dropsBuilder_.addMessage(m);
                }
                break;
              } // case 122
              case 130: {
                input.readMessage(
                    getAccelerationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              case 138: {
                input.readMessage(
                    getAnchorPointFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00010000;
                break;
              } // case 138
              case 146: {
                input.readMessage(
                    getBbox2DFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00020000;
                break;
              } // case 146
              case 152: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(19, tmpRaw);
                } else {
                  subType_ = tmpRaw;
                  bitField0_ |= 0x00040000;
                }
                break;
              } // case 152
              case 162: {
                apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.parser(),
                        extensionRegistry);
                if (measurementsBuilder_ == null) {
                  ensureMeasurementsIsMutable();
                  measurements_.add(m);
                } else {
                  measurementsBuilder_.addMessage(m);
                }
                break;
              } // case 162
              case 169: {
                heightAboveGround_ = input.readDouble();
                bitField0_ |= 0x00100000;
                break;
              } // case 169
              case 177: {
                double v = input.readDouble();
                ensurePositionCovarianceIsMutable();
                positionCovariance_.addDouble(v);
                break;
              } // case 177
              case 178: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensurePositionCovarianceIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  positionCovariance_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 178
              case 185: {
                double v = input.readDouble();
                ensureVelocityCovarianceIsMutable();
                velocityCovariance_.addDouble(v);
                break;
              } // case 185
              case 186: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureVelocityCovarianceIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  velocityCovariance_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 186
              case 193: {
                double v = input.readDouble();
                ensureAccelerationCovarianceIsMutable();
                accelerationCovariance_.addDouble(v);
                break;
              } // case 193
              case 194: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAccelerationCovarianceIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  accelerationCovariance_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 194
              case 202: {
                input.readMessage(
                    getLightStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x01000000;
                break;
              } // case 202
              case 210: {
                input.readMessage(
                    getMsgFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x02000000;
                break;
              } // case 210
              case 216: {
                int tmpRaw = input.readEnum();
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source tmpValue =
                    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(27, tmpRaw);
                } else {
                  source_ = tmpRaw;
                  bitField0_ |= 0x04000000;
                }
                break;
              } // case 216
              case 226: {
                input.readMessage(
                    getV2XInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x08000000;
                break;
              } // case 226
              case 233: {
                objectConfidence_ = input.readDouble();
                bitField0_ |= 0x10000000;
                break;
              } // case 233
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * obstacle ID.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * obstacle ID.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * obstacle ID.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle ID.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private apollo.common.Geometry.Point3D position_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> positionBuilder_;
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       * @return The position.
       */
      public apollo.common.Geometry.Point3D getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public Builder setPosition(apollo.common.Geometry.Point3D value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public Builder setPosition(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public Builder mergePosition(apollo.common.Geometry.Point3D value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            position_ != null &&
            position_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getPositionBuilder().mergeFrom(value);
          } else {
            position_ = value;
          }
        } else {
          positionBuilder_.mergeFrom(value);
        }
        if (position_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getPositionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       * obstacle position in the world coordinate system.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D position = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private double theta_ ;
      /**
       * <pre>
       * heading in the world coordinate system.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       * @return Whether the theta field is set.
       */
      @java.lang.Override
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * heading in the world coordinate system.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       * @return The theta.
       */
      @java.lang.Override
      public double getTheta() {
        return theta_;
      }
      /**
       * <pre>
       * heading in the world coordinate system.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       * @param value The theta to set.
       * @return This builder for chaining.
       */
      public Builder setTheta(double value) {

        theta_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * heading in the world coordinate system.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000004);
        theta_ = 0D;
        onChanged();
        return this;
      }

      private apollo.common.Geometry.Point3D velocity_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> velocityBuilder_;
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       * @return Whether the velocity field is set.
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       * @return The velocity.
       */
      public apollo.common.Geometry.Point3D getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public Builder setVelocity(apollo.common.Geometry.Point3D value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public Builder setVelocity(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public Builder mergeVelocity(apollo.common.Geometry.Point3D value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            velocity_ != null &&
            velocity_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getVelocityBuilder().mergeFrom(value);
          } else {
            velocity_ = value;
          }
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        if (velocity_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public Builder clearVelocity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        velocity_ = null;
        if (velocityBuilder_ != null) {
          velocityBuilder_.dispose();
          velocityBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : velocity_;
        }
      }
      /**
       * <pre>
       * obstacle velocity.
       * </pre>
       *
       * <code>optional .apollo.common.Point3D velocity = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private double length_ ;
      /**
       * <pre>
       * Size of obstacle bounding box.
       * </pre>
       *
       * <code>optional double length = 5;</code>
       * @return Whether the length field is set.
       */
      @java.lang.Override
      public boolean hasLength() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Size of obstacle bounding box.
       * </pre>
       *
       * <code>optional double length = 5;</code>
       * @return The length.
       */
      @java.lang.Override
      public double getLength() {
        return length_;
      }
      /**
       * <pre>
       * Size of obstacle bounding box.
       * </pre>
       *
       * <code>optional double length = 5;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(double value) {

        length_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of obstacle bounding box.
       * </pre>
       *
       * <code>optional double length = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000010);
        length_ = 0D;
        onChanged();
        return this;
      }

      private double width_ ;
      /**
       * <pre>
       * obstacle width.
       * </pre>
       *
       * <code>optional double width = 6;</code>
       * @return Whether the width field is set.
       */
      @java.lang.Override
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * obstacle width.
       * </pre>
       *
       * <code>optional double width = 6;</code>
       * @return The width.
       */
      @java.lang.Override
      public double getWidth() {
        return width_;
      }
      /**
       * <pre>
       * obstacle width.
       * </pre>
       *
       * <code>optional double width = 6;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(double value) {

        width_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle width.
       * </pre>
       *
       * <code>optional double width = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000020);
        width_ = 0D;
        onChanged();
        return this;
      }

      private double height_ ;
      /**
       * <pre>
       * obstacle height.
       * </pre>
       *
       * <code>optional double height = 7;</code>
       * @return Whether the height field is set.
       */
      @java.lang.Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * obstacle height.
       * </pre>
       *
       * <code>optional double height = 7;</code>
       * @return The height.
       */
      @java.lang.Override
      public double getHeight() {
        return height_;
      }
      /**
       * <pre>
       * obstacle height.
       * </pre>
       *
       * <code>optional double height = 7;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(double value) {

        height_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle height.
       * </pre>
       *
       * <code>optional double height = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000040);
        height_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<apollo.common.Geometry.Point3D> polygonPoint_ =
        java.util.Collections.emptyList();
      private void ensurePolygonPointIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          polygonPoint_ = new java.util.ArrayList<apollo.common.Geometry.Point3D>(polygonPoint_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> polygonPointBuilder_;

      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public java.util.List<apollo.common.Geometry.Point3D> getPolygonPointList() {
        if (polygonPointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(polygonPoint_);
        } else {
          return polygonPointBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public int getPolygonPointCount() {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.size();
        } else {
          return polygonPointBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public apollo.common.Geometry.Point3D getPolygonPoint(int index) {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.get(index);
        } else {
          return polygonPointBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder setPolygonPoint(
          int index, apollo.common.Geometry.Point3D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.set(index, value);
          onChanged();
        } else {
          polygonPointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder setPolygonPoint(
          int index, apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder addPolygonPoint(apollo.common.Geometry.Point3D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.add(value);
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder addPolygonPoint(
          int index, apollo.common.Geometry.Point3D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.add(index, value);
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder addPolygonPoint(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.add(builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder addPolygonPoint(
          int index, apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder addAllPolygonPoint(
          java.lang.Iterable<? extends apollo.common.Geometry.Point3D> values) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, polygonPoint_);
          onChanged();
        } else {
          polygonPointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder clearPolygonPoint() {
        if (polygonPointBuilder_ == null) {
          polygonPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          polygonPointBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public Builder removePolygonPoint(int index) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.remove(index);
          onChanged();
        } else {
          polygonPointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getPolygonPointBuilder(
          int index) {
        return getPolygonPointFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getPolygonPointOrBuilder(
          int index) {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.get(index);  } else {
          return polygonPointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
           getPolygonPointOrBuilderList() {
        if (polygonPointBuilder_ != null) {
          return polygonPointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(polygonPoint_);
        }
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public apollo.common.Geometry.Point3D.Builder addPolygonPointBuilder() {
        return getPolygonPointFieldBuilder().addBuilder(
            apollo.common.Geometry.Point3D.getDefaultInstance());
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public apollo.common.Geometry.Point3D.Builder addPolygonPointBuilder(
          int index) {
        return getPolygonPointFieldBuilder().addBuilder(
            index, apollo.common.Geometry.Point3D.getDefaultInstance());
      }
      /**
       * <pre>
       * obstacle corner points.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D polygon_point = 8;</code>
       */
      public java.util.List<apollo.common.Geometry.Point3D.Builder> 
           getPolygonPointBuilderList() {
        return getPolygonPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getPolygonPointFieldBuilder() {
        if (polygonPointBuilder_ == null) {
          polygonPointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  polygonPoint_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          polygonPoint_ = null;
        }
        return polygonPointBuilder_;
      }

      private double trackingTime_ ;
      /**
       * <pre>
       * duration of an obstacle since detection in s.
       * </pre>
       *
       * <code>optional double tracking_time = 9;</code>
       * @return Whether the trackingTime field is set.
       */
      @java.lang.Override
      public boolean hasTrackingTime() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * duration of an obstacle since detection in s.
       * </pre>
       *
       * <code>optional double tracking_time = 9;</code>
       * @return The trackingTime.
       */
      @java.lang.Override
      public double getTrackingTime() {
        return trackingTime_;
      }
      /**
       * <pre>
       * duration of an obstacle since detection in s.
       * </pre>
       *
       * <code>optional double tracking_time = 9;</code>
       * @param value The trackingTime to set.
       * @return This builder for chaining.
       */
      public Builder setTrackingTime(double value) {

        trackingTime_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * duration of an obstacle since detection in s.
       * </pre>
       *
       * <code>optional double tracking_time = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrackingTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        trackingTime_ = 0D;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * obstacle type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * obstacle type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
       * @return The type.
       */
      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type getType() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.forNumber(type_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type.UNKNOWN : result;
      }
      /**
       * <pre>
       * obstacle type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.Type type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = 0;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       * GPS time in seconds.
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * GPS time in seconds.
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * GPS time in seconds.
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(double value) {

        timestamp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GPS time in seconds.
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList pointCloud_ = emptyDoubleList();
      private void ensurePointCloudIsMutable() {
        if (!pointCloud_.isModifiable()) {
          pointCloud_ = makeMutableCopy(pointCloud_);
        }
        bitField0_ |= 0x00000800;
      }
      private void ensurePointCloudIsMutable(int capacity) {
        if (!pointCloud_.isModifiable()) {
          pointCloud_ = makeMutableCopy(pointCloud_, capacity);
        }
        bitField0_ |= 0x00000800;
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @return A list containing the pointCloud.
       */
      public java.util.List<java.lang.Double>
          getPointCloudList() {
        pointCloud_.makeImmutable();
        return pointCloud_;
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @return The count of pointCloud.
       */
      public int getPointCloudCount() {
        return pointCloud_.size();
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The pointCloud at the given index.
       */
      public double getPointCloud(int index) {
        return pointCloud_.getDouble(index);
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The pointCloud to set.
       * @return This builder for chaining.
       */
      public Builder setPointCloud(
          int index, double value) {

        ensurePointCloudIsMutable();
        pointCloud_.setDouble(index, value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @param value The pointCloud to add.
       * @return This builder for chaining.
       */
      public Builder addPointCloud(double value) {

        ensurePointCloudIsMutable();
        pointCloud_.addDouble(value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @param values The pointCloud to add.
       * @return This builder for chaining.
       */
      public Builder addAllPointCloud(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePointCloudIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pointCloud_);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Just for offline debugging, will not fill this field on board.
       * Format: [x0, y0, z0, x1, y1, z1...]
       * </pre>
       *
       * <code>repeated double point_cloud = 12 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearPointCloud() {
        pointCloud_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <code>optional double confidence = 13 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=97
       * @return Whether the confidence field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasConfidence() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional double confidence = 13 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=97
       * @return The confidence.
       */
      @java.lang.Override
      @java.lang.Deprecated public double getConfidence() {
        return confidence_;
      }
      /**
       * <code>optional double confidence = 13 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=97
       * @param value The confidence to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setConfidence(double value) {

        confidence_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional double confidence = 13 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=97
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00001000);
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private int confidenceType_ = 0;
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=103
       * @return Whether the confidenceType field is set.
       */
      @java.lang.Override @java.lang.Deprecated public boolean hasConfidenceType() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=103
       * @return The confidenceType.
       */
      @java.lang.Override
      @java.lang.Deprecated public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType getConfidenceType() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType.forNumber(confidenceType_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType.CONFIDENCE_UNKNOWN : result;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=103
       * @param value The confidenceType to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setConfidenceType(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.ConfidenceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        confidenceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.ConfidenceType confidence_type = 14 [deprecated = true];</code>
       * @deprecated apollo.perception.PerceptionObstacle.confidence_type is deprecated.
       *     See modules/perception/proto/perception_obstacle.proto;l=103
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearConfidenceType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        confidenceType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<apollo.common.Geometry.Point3D> drops_ =
        java.util.Collections.emptyList();
      private void ensureDropsIsMutable() {
        if (!((bitField0_ & 0x00004000) != 0)) {
          drops_ = new java.util.ArrayList<apollo.common.Geometry.Point3D>(drops_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> dropsBuilder_;

      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<apollo.common.Geometry.Point3D> getDropsList() {
        if (dropsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drops_);
        } else {
          return dropsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getDropsCount() {
        if (dropsBuilder_ == null) {
          return drops_.size();
        } else {
          return dropsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public apollo.common.Geometry.Point3D getDrops(int index) {
        if (dropsBuilder_ == null) {
          return drops_.get(index);
        } else {
          return dropsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setDrops(
          int index, apollo.common.Geometry.Point3D value) {
        if (dropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropsIsMutable();
          drops_.set(index, value);
          onChanged();
        } else {
          dropsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setDrops(
          int index, apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (dropsBuilder_ == null) {
          ensureDropsIsMutable();
          drops_.set(index, builderForValue.build());
          onChanged();
        } else {
          dropsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDrops(apollo.common.Geometry.Point3D value) {
        if (dropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropsIsMutable();
          drops_.add(value);
          onChanged();
        } else {
          dropsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDrops(
          int index, apollo.common.Geometry.Point3D value) {
        if (dropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropsIsMutable();
          drops_.add(index, value);
          onChanged();
        } else {
          dropsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDrops(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (dropsBuilder_ == null) {
          ensureDropsIsMutable();
          drops_.add(builderForValue.build());
          onChanged();
        } else {
          dropsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDrops(
          int index, apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (dropsBuilder_ == null) {
          ensureDropsIsMutable();
          drops_.add(index, builderForValue.build());
          onChanged();
        } else {
          dropsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllDrops(
          java.lang.Iterable<? extends apollo.common.Geometry.Point3D> values) {
        if (dropsBuilder_ == null) {
          ensureDropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drops_);
          onChanged();
        } else {
          dropsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearDrops() {
        if (dropsBuilder_ == null) {
          drops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          dropsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeDrops(int index) {
        if (dropsBuilder_ == null) {
          ensureDropsIsMutable();
          drops_.remove(index);
          onChanged();
        } else {
          dropsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public apollo.common.Geometry.Point3D.Builder getDropsBuilder(
          int index) {
        return getDropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public apollo.common.Geometry.Point3DOrBuilder getDropsOrBuilder(
          int index) {
        if (dropsBuilder_ == null) {
          return drops_.get(index);  } else {
          return dropsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<? extends apollo.common.Geometry.Point3DOrBuilder> 
           getDropsOrBuilderList() {
        if (dropsBuilder_ != null) {
          return dropsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drops_);
        }
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public apollo.common.Geometry.Point3D.Builder addDropsBuilder() {
        return getDropsFieldBuilder().addBuilder(
            apollo.common.Geometry.Point3D.getDefaultInstance());
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public apollo.common.Geometry.Point3D.Builder addDropsBuilder(
          int index) {
        return getDropsFieldBuilder().addBuilder(
            index, apollo.common.Geometry.Point3D.getDefaultInstance());
      }
      /**
       * <pre>
       * trajectory of object.
       * </pre>
       *
       * <code>repeated .apollo.common.Point3D drops = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<apollo.common.Geometry.Point3D.Builder> 
           getDropsBuilderList() {
        return getDropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getDropsFieldBuilder() {
        if (dropsBuilder_ == null) {
          dropsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  drops_,
                  ((bitField0_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          drops_ = null;
        }
        return dropsBuilder_;
      }

      private apollo.common.Geometry.Point3D acceleration_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> accelerationBuilder_;
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       * @return Whether the acceleration field is set.
       */
      public boolean hasAcceleration() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       * @return The acceleration.
       */
      public apollo.common.Geometry.Point3D getAcceleration() {
        if (accelerationBuilder_ == null) {
          return acceleration_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : acceleration_;
        } else {
          return accelerationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public Builder setAcceleration(apollo.common.Geometry.Point3D value) {
        if (accelerationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acceleration_ = value;
        } else {
          accelerationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public Builder setAcceleration(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (accelerationBuilder_ == null) {
          acceleration_ = builderForValue.build();
        } else {
          accelerationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public Builder mergeAcceleration(apollo.common.Geometry.Point3D value) {
        if (accelerationBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0) &&
            acceleration_ != null &&
            acceleration_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getAccelerationBuilder().mergeFrom(value);
          } else {
            acceleration_ = value;
          }
        } else {
          accelerationBuilder_.mergeFrom(value);
        }
        if (acceleration_ != null) {
          bitField0_ |= 0x00008000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public Builder clearAcceleration() {
        bitField0_ = (bitField0_ & ~0x00008000);
        acceleration_ = null;
        if (accelerationBuilder_ != null) {
          accelerationBuilder_.dispose();
          accelerationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getAccelerationBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getAccelerationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getAccelerationOrBuilder() {
        if (accelerationBuilder_ != null) {
          return accelerationBuilder_.getMessageOrBuilder();
        } else {
          return acceleration_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : acceleration_;
        }
      }
      /**
       * <pre>
       * The following fields are new added in Apollo 4.0
       * </pre>
       *
       * <code>optional .apollo.common.Point3D acceleration = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getAccelerationFieldBuilder() {
        if (accelerationBuilder_ == null) {
          accelerationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getAcceleration(),
                  getParentForChildren(),
                  isClean());
          acceleration_ = null;
        }
        return accelerationBuilder_;
      }

      private apollo.common.Geometry.Point3D anchorPoint_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> anchorPointBuilder_;
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       * @return Whether the anchorPoint field is set.
       */
      public boolean hasAnchorPoint() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       * @return The anchorPoint.
       */
      public apollo.common.Geometry.Point3D getAnchorPoint() {
        if (anchorPointBuilder_ == null) {
          return anchorPoint_ == null ? apollo.common.Geometry.Point3D.getDefaultInstance() : anchorPoint_;
        } else {
          return anchorPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public Builder setAnchorPoint(apollo.common.Geometry.Point3D value) {
        if (anchorPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anchorPoint_ = value;
        } else {
          anchorPointBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public Builder setAnchorPoint(
          apollo.common.Geometry.Point3D.Builder builderForValue) {
        if (anchorPointBuilder_ == null) {
          anchorPoint_ = builderForValue.build();
        } else {
          anchorPointBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public Builder mergeAnchorPoint(apollo.common.Geometry.Point3D value) {
        if (anchorPointBuilder_ == null) {
          if (((bitField0_ & 0x00010000) != 0) &&
            anchorPoint_ != null &&
            anchorPoint_ != apollo.common.Geometry.Point3D.getDefaultInstance()) {
            getAnchorPointBuilder().mergeFrom(value);
          } else {
            anchorPoint_ = value;
          }
        } else {
          anchorPointBuilder_.mergeFrom(value);
        }
        if (anchorPoint_ != null) {
          bitField0_ |= 0x00010000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public Builder clearAnchorPoint() {
        bitField0_ = (bitField0_ & ~0x00010000);
        anchorPoint_ = null;
        if (anchorPointBuilder_ != null) {
          anchorPointBuilder_.dispose();
          anchorPointBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public apollo.common.Geometry.Point3D.Builder getAnchorPointBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getAnchorPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      public apollo.common.Geometry.Point3DOrBuilder getAnchorPointOrBuilder() {
        if (anchorPointBuilder_ != null) {
          return anchorPointBuilder_.getMessageOrBuilder();
        } else {
          return anchorPoint_ == null ?
              apollo.common.Geometry.Point3D.getDefaultInstance() : anchorPoint_;
        }
      }
      /**
       * <pre>
       * a stable obstacle point in the world coordinate system
       * position defined above is the obstacle bounding box ground center
       * </pre>
       *
       * <code>optional .apollo.common.Point3D anchor_point = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder> 
          getAnchorPointFieldBuilder() {
        if (anchorPointBuilder_ == null) {
          anchorPointBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.Geometry.Point3D, apollo.common.Geometry.Point3D.Builder, apollo.common.Geometry.Point3DOrBuilder>(
                  getAnchorPoint(),
                  getParentForChildren(),
                  isClean());
          anchorPoint_ = null;
        }
        return anchorPointBuilder_;
      }

      private apollo.perception.PerceptionObstacleOuterClass.BBox2D bbox2D_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder> bbox2DBuilder_;
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       * @return Whether the bbox2d field is set.
       */
      public boolean hasBbox2D() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       * @return The bbox2d.
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D getBbox2D() {
        if (bbox2DBuilder_ == null) {
          return bbox2D_ == null ? apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : bbox2D_;
        } else {
          return bbox2DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public Builder setBbox2D(apollo.perception.PerceptionObstacleOuterClass.BBox2D value) {
        if (bbox2DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bbox2D_ = value;
        } else {
          bbox2DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public Builder setBbox2D(
          apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder builderForValue) {
        if (bbox2DBuilder_ == null) {
          bbox2D_ = builderForValue.build();
        } else {
          bbox2DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public Builder mergeBbox2D(apollo.perception.PerceptionObstacleOuterClass.BBox2D value) {
        if (bbox2DBuilder_ == null) {
          if (((bitField0_ & 0x00020000) != 0) &&
            bbox2D_ != null &&
            bbox2D_ != apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance()) {
            getBbox2DBuilder().mergeFrom(value);
          } else {
            bbox2D_ = value;
          }
        } else {
          bbox2DBuilder_.mergeFrom(value);
        }
        if (bbox2D_ != null) {
          bitField0_ |= 0x00020000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public Builder clearBbox2D() {
        bitField0_ = (bitField0_ & ~0x00020000);
        bbox2D_ = null;
        if (bbox2DBuilder_ != null) {
          bbox2DBuilder_.dispose();
          bbox2DBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder getBbox2DBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getBbox2DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder getBbox2DOrBuilder() {
        if (bbox2DBuilder_ != null) {
          return bbox2DBuilder_.getMessageOrBuilder();
        } else {
          return bbox2D_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.BBox2D.getDefaultInstance() : bbox2D_;
        }
      }
      /**
       * <code>optional .apollo.perception.BBox2D bbox2d = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder> 
          getBbox2DFieldBuilder() {
        if (bbox2DBuilder_ == null) {
          bbox2DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.BBox2D, apollo.perception.PerceptionObstacleOuterClass.BBox2D.Builder, apollo.perception.PerceptionObstacleOuterClass.BBox2DOrBuilder>(
                  getBbox2D(),
                  getParentForChildren(),
                  isClean());
          bbox2D_ = null;
        }
        return bbox2DBuilder_;
      }

      private int subType_ = 0;
      /**
       * <pre>
       * obstacle sub_type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
       * @return Whether the subType field is set.
       */
      @java.lang.Override public boolean hasSubType() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       * obstacle sub_type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
       * @return The subType.
       */
      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType getSubType() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.forNumber(subType_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType.ST_UNKNOWN : result;
      }
      /**
       * <pre>
       * obstacle sub_type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
       * @param value The subType to set.
       * @return This builder for chaining.
       */
      public Builder setSubType(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.SubType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * obstacle sub_type
       * </pre>
       *
       * <code>optional .apollo.perception.PerceptionObstacle.SubType sub_type = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubType() {
        bitField0_ = (bitField0_ & ~0x00040000);
        subType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> measurements_ =
        java.util.Collections.emptyList();
      private void ensureMeasurementsIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          measurements_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement>(measurements_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder> measurementsBuilder_;

      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> getMeasurementsList() {
        if (measurementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(measurements_);
        } else {
          return measurementsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public int getMeasurementsCount() {
        if (measurementsBuilder_ == null) {
          return measurements_.size();
        } else {
          return measurementsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement getMeasurements(int index) {
        if (measurementsBuilder_ == null) {
          return measurements_.get(index);
        } else {
          return measurementsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder setMeasurements(
          int index, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.set(index, value);
          onChanged();
        } else {
          measurementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder setMeasurements(
          int index, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.set(index, builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder addMeasurements(apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.add(value);
          onChanged();
        } else {
          measurementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder addMeasurements(
          int index, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.add(index, value);
          onChanged();
        } else {
          measurementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder addMeasurements(
          apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.add(builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder addMeasurements(
          int index, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.add(index, builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder addAllMeasurements(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement> values) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, measurements_);
          onChanged();
        } else {
          measurementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder clearMeasurements() {
        if (measurementsBuilder_ == null) {
          measurements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          measurementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public Builder removeMeasurements(int index) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.remove(index);
          onChanged();
        } else {
          measurementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder getMeasurementsBuilder(
          int index) {
        return getMeasurementsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder getMeasurementsOrBuilder(
          int index) {
        if (measurementsBuilder_ == null) {
          return measurements_.get(index);  } else {
          return measurementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder> 
           getMeasurementsOrBuilderList() {
        if (measurementsBuilder_ != null) {
          return measurementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(measurements_);
        }
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder addMeasurementsBuilder() {
        return getMeasurementsFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.getDefaultInstance());
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder addMeasurementsBuilder(
          int index) {
        return getMeasurementsFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.getDefaultInstance());
      }
      /**
       * <pre>
       * sensor measurements
       * </pre>
       *
       * <code>repeated .apollo.perception.SensorMeasurement measurements = 20;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder> 
           getMeasurementsBuilderList() {
        return getMeasurementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder> 
          getMeasurementsFieldBuilder() {
        if (measurementsBuilder_ == null) {
          measurementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurement.Builder, apollo.perception.PerceptionObstacleOuterClass.SensorMeasurementOrBuilder>(
                  measurements_,
                  ((bitField0_ & 0x00080000) != 0),
                  getParentForChildren(),
                  isClean());
          measurements_ = null;
        }
        return measurementsBuilder_;
      }

      private double heightAboveGround_ = Double.NaN;
      /**
       * <pre>
       * orthogonal distance between obstacle lowest point and ground plane
       * </pre>
       *
       * <code>optional double height_above_ground = 21 [default = nan];</code>
       * @return Whether the heightAboveGround field is set.
       */
      @java.lang.Override
      public boolean hasHeightAboveGround() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       * orthogonal distance between obstacle lowest point and ground plane
       * </pre>
       *
       * <code>optional double height_above_ground = 21 [default = nan];</code>
       * @return The heightAboveGround.
       */
      @java.lang.Override
      public double getHeightAboveGround() {
        return heightAboveGround_;
      }
      /**
       * <pre>
       * orthogonal distance between obstacle lowest point and ground plane
       * </pre>
       *
       * <code>optional double height_above_ground = 21 [default = nan];</code>
       * @param value The heightAboveGround to set.
       * @return This builder for chaining.
       */
      public Builder setHeightAboveGround(double value) {

        heightAboveGround_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * orthogonal distance between obstacle lowest point and ground plane
       * </pre>
       *
       * <code>optional double height_above_ground = 21 [default = nan];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeightAboveGround() {
        bitField0_ = (bitField0_ & ~0x00100000);
        heightAboveGround_ = Double.NaN;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList positionCovariance_ = emptyDoubleList();
      private void ensurePositionCovarianceIsMutable() {
        if (!positionCovariance_.isModifiable()) {
          positionCovariance_ = makeMutableCopy(positionCovariance_);
        }
        bitField0_ |= 0x00200000;
      }
      private void ensurePositionCovarianceIsMutable(int capacity) {
        if (!positionCovariance_.isModifiable()) {
          positionCovariance_ = makeMutableCopy(positionCovariance_, capacity);
        }
        bitField0_ |= 0x00200000;
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @return A list containing the positionCovariance.
       */
      public java.util.List<java.lang.Double>
          getPositionCovarianceList() {
        positionCovariance_.makeImmutable();
        return positionCovariance_;
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @return The count of positionCovariance.
       */
      public int getPositionCovarianceCount() {
        return positionCovariance_.size();
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The positionCovariance at the given index.
       */
      public double getPositionCovariance(int index) {
        return positionCovariance_.getDouble(index);
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The positionCovariance to set.
       * @return This builder for chaining.
       */
      public Builder setPositionCovariance(
          int index, double value) {

        ensurePositionCovarianceIsMutable();
        positionCovariance_.setDouble(index, value);
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @param value The positionCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addPositionCovariance(double value) {

        ensurePositionCovarianceIsMutable();
        positionCovariance_.addDouble(value);
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @param values The positionCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addAllPositionCovariance(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePositionCovarianceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, positionCovariance_);
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * position covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double position_covariance = 22 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearPositionCovariance() {
        positionCovariance_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList velocityCovariance_ = emptyDoubleList();
      private void ensureVelocityCovarianceIsMutable() {
        if (!velocityCovariance_.isModifiable()) {
          velocityCovariance_ = makeMutableCopy(velocityCovariance_);
        }
        bitField0_ |= 0x00400000;
      }
      private void ensureVelocityCovarianceIsMutable(int capacity) {
        if (!velocityCovariance_.isModifiable()) {
          velocityCovariance_ = makeMutableCopy(velocityCovariance_, capacity);
        }
        bitField0_ |= 0x00400000;
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @return A list containing the velocityCovariance.
       */
      public java.util.List<java.lang.Double>
          getVelocityCovarianceList() {
        velocityCovariance_.makeImmutable();
        return velocityCovariance_;
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @return The count of velocityCovariance.
       */
      public int getVelocityCovarianceCount() {
        return velocityCovariance_.size();
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The velocityCovariance at the given index.
       */
      public double getVelocityCovariance(int index) {
        return velocityCovariance_.getDouble(index);
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The velocityCovariance to set.
       * @return This builder for chaining.
       */
      public Builder setVelocityCovariance(
          int index, double value) {

        ensureVelocityCovarianceIsMutable();
        velocityCovariance_.setDouble(index, value);
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @param value The velocityCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addVelocityCovariance(double value) {

        ensureVelocityCovarianceIsMutable();
        velocityCovariance_.addDouble(value);
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @param values The velocityCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addAllVelocityCovariance(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureVelocityCovarianceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, velocityCovariance_);
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * velocity covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double velocity_covariance = 23 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVelocityCovariance() {
        velocityCovariance_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList accelerationCovariance_ = emptyDoubleList();
      private void ensureAccelerationCovarianceIsMutable() {
        if (!accelerationCovariance_.isModifiable()) {
          accelerationCovariance_ = makeMutableCopy(accelerationCovariance_);
        }
        bitField0_ |= 0x00800000;
      }
      private void ensureAccelerationCovarianceIsMutable(int capacity) {
        if (!accelerationCovariance_.isModifiable()) {
          accelerationCovariance_ = makeMutableCopy(accelerationCovariance_, capacity);
        }
        bitField0_ |= 0x00800000;
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @return A list containing the accelerationCovariance.
       */
      public java.util.List<java.lang.Double>
          getAccelerationCovarianceList() {
        accelerationCovariance_.makeImmutable();
        return accelerationCovariance_;
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @return The count of accelerationCovariance.
       */
      public int getAccelerationCovarianceCount() {
        return accelerationCovariance_.size();
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The accelerationCovariance at the given index.
       */
      public double getAccelerationCovariance(int index) {
        return accelerationCovariance_.getDouble(index);
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The accelerationCovariance to set.
       * @return This builder for chaining.
       */
      public Builder setAccelerationCovariance(
          int index, double value) {

        ensureAccelerationCovarianceIsMutable();
        accelerationCovariance_.setDouble(index, value);
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @param value The accelerationCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addAccelerationCovariance(double value) {

        ensureAccelerationCovarianceIsMutable();
        accelerationCovariance_.addDouble(value);
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @param values The accelerationCovariance to add.
       * @return This builder for chaining.
       */
      public Builder addAllAccelerationCovariance(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAccelerationCovarianceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accelerationCovariance_);
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * acceleration covariance which is a row-majored 3x3 matrix
       * </pre>
       *
       * <code>repeated double acceleration_covariance = 24 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearAccelerationCovariance() {
        accelerationCovariance_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
        return this;
      }

      private apollo.perception.PerceptionObstacleOuterClass.LightStatus lightStatus_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LightStatus, apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder, apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder> lightStatusBuilder_;
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       * @return Whether the lightStatus field is set.
       */
      public boolean hasLightStatus() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       * @return The lightStatus.
       */
      public apollo.perception.PerceptionObstacleOuterClass.LightStatus getLightStatus() {
        if (lightStatusBuilder_ == null) {
          return lightStatus_ == null ? apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance() : lightStatus_;
        } else {
          return lightStatusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public Builder setLightStatus(apollo.perception.PerceptionObstacleOuterClass.LightStatus value) {
        if (lightStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lightStatus_ = value;
        } else {
          lightStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public Builder setLightStatus(
          apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder builderForValue) {
        if (lightStatusBuilder_ == null) {
          lightStatus_ = builderForValue.build();
        } else {
          lightStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public Builder mergeLightStatus(apollo.perception.PerceptionObstacleOuterClass.LightStatus value) {
        if (lightStatusBuilder_ == null) {
          if (((bitField0_ & 0x01000000) != 0) &&
            lightStatus_ != null &&
            lightStatus_ != apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance()) {
            getLightStatusBuilder().mergeFrom(value);
          } else {
            lightStatus_ = value;
          }
        } else {
          lightStatusBuilder_.mergeFrom(value);
        }
        if (lightStatus_ != null) {
          bitField0_ |= 0x01000000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public Builder clearLightStatus() {
        bitField0_ = (bitField0_ & ~0x01000000);
        lightStatus_ = null;
        if (lightStatusBuilder_ != null) {
          lightStatusBuilder_.dispose();
          lightStatusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder getLightStatusBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getLightStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder getLightStatusOrBuilder() {
        if (lightStatusBuilder_ != null) {
          return lightStatusBuilder_.getMessageOrBuilder();
        } else {
          return lightStatus_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.LightStatus.getDefaultInstance() : lightStatus_;
        }
      }
      /**
       * <pre>
       * lights of vehicles
       * </pre>
       *
       * <code>optional .apollo.perception.LightStatus light_status = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LightStatus, apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder, apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder> 
          getLightStatusFieldBuilder() {
        if (lightStatusBuilder_ == null) {
          lightStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LightStatus, apollo.perception.PerceptionObstacleOuterClass.LightStatus.Builder, apollo.perception.PerceptionObstacleOuterClass.LightStatusOrBuilder>(
                  getLightStatus(),
                  getParentForChildren(),
                  isClean());
          lightStatus_ = null;
        }
        return lightStatusBuilder_;
      }

      private apollo.perception.PerceptionObstacleOuterClass.DebugMessage msg_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.DebugMessage, apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder, apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder> msgBuilder_;
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       * @return Whether the msg field is set.
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       * @return The msg.
       */
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessage getMsg() {
        if (msgBuilder_ == null) {
          return msg_ == null ? apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance() : msg_;
        } else {
          return msgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public Builder setMsg(apollo.perception.PerceptionObstacleOuterClass.DebugMessage value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
        } else {
          msgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public Builder setMsg(
          apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder builderForValue) {
        if (msgBuilder_ == null) {
          msg_ = builderForValue.build();
        } else {
          msgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public Builder mergeMsg(apollo.perception.PerceptionObstacleOuterClass.DebugMessage value) {
        if (msgBuilder_ == null) {
          if (((bitField0_ & 0x02000000) != 0) &&
            msg_ != null &&
            msg_ != apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance()) {
            getMsgBuilder().mergeFrom(value);
          } else {
            msg_ = value;
          }
        } else {
          msgBuilder_.mergeFrom(value);
        }
        if (msg_ != null) {
          bitField0_ |= 0x02000000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x02000000);
        msg_ = null;
        if (msgBuilder_ != null) {
          msgBuilder_.dispose();
          msgBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder getMsgBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getMsgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder getMsgOrBuilder() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilder();
        } else {
          return msg_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.DebugMessage.getDefaultInstance() : msg_;
        }
      }
      /**
       * <pre>
       * Debug Message
       * </pre>
       *
       * <code>optional .apollo.perception.DebugMessage msg = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.DebugMessage, apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder, apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder> 
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.DebugMessage, apollo.perception.PerceptionObstacleOuterClass.DebugMessage.Builder, apollo.perception.PerceptionObstacleOuterClass.DebugMessageOrBuilder>(
                  getMsg(),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }

      private int source_ = 0;
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
       * @return Whether the source field is set.
       */
      @java.lang.Override public boolean hasSource() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
       * @return The source.
       */
      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source getSource() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source result = apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source.forNumber(source_);
        return result == null ? apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source.HOST_VEHICLE : result;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x04000000;
        source_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.PerceptionObstacle.Source source = 27 [default = HOST_VEHICLE];</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x04000000);
        source_ = 0;
        onChanged();
        return this;
      }

      private apollo.perception.PerceptionObstacleOuterClass.V2XInformation v2XInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.V2XInformation, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder, apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder> v2XInfoBuilder_;
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       * @return Whether the v2xInfo field is set.
       */
      public boolean hasV2XInfo() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       * @return The v2xInfo.
       */
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation getV2XInfo() {
        if (v2XInfoBuilder_ == null) {
          return v2XInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance() : v2XInfo_;
        } else {
          return v2XInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public Builder setV2XInfo(apollo.perception.PerceptionObstacleOuterClass.V2XInformation value) {
        if (v2XInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          v2XInfo_ = value;
        } else {
          v2XInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public Builder setV2XInfo(
          apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder builderForValue) {
        if (v2XInfoBuilder_ == null) {
          v2XInfo_ = builderForValue.build();
        } else {
          v2XInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public Builder mergeV2XInfo(apollo.perception.PerceptionObstacleOuterClass.V2XInformation value) {
        if (v2XInfoBuilder_ == null) {
          if (((bitField0_ & 0x08000000) != 0) &&
            v2XInfo_ != null &&
            v2XInfo_ != apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance()) {
            getV2XInfoBuilder().mergeFrom(value);
          } else {
            v2XInfo_ = value;
          }
        } else {
          v2XInfoBuilder_.mergeFrom(value);
        }
        if (v2XInfo_ != null) {
          bitField0_ |= 0x08000000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public Builder clearV2XInfo() {
        bitField0_ = (bitField0_ & ~0x08000000);
        v2XInfo_ = null;
        if (v2XInfoBuilder_ != null) {
          v2XInfoBuilder_.dispose();
          v2XInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder getV2XInfoBuilder() {
        bitField0_ |= 0x08000000;
        onChanged();
        return getV2XInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder getV2XInfoOrBuilder() {
        if (v2XInfoBuilder_ != null) {
          return v2XInfoBuilder_.getMessageOrBuilder();
        } else {
          return v2XInfo_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.V2XInformation.getDefaultInstance() : v2XInfo_;
        }
      }
      /**
       * <code>optional .apollo.perception.V2XInformation v2x_info = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.V2XInformation, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder, apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder> 
          getV2XInfoFieldBuilder() {
        if (v2XInfoBuilder_ == null) {
          v2XInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.V2XInformation, apollo.perception.PerceptionObstacleOuterClass.V2XInformation.Builder, apollo.perception.PerceptionObstacleOuterClass.V2XInformationOrBuilder>(
                  getV2XInfo(),
                  getParentForChildren(),
                  isClean());
          v2XInfo_ = null;
        }
        return v2XInfoBuilder_;
      }

      private double objectConfidence_ ;
      /**
       * <pre>
       * add object of the confidence
       * </pre>
       *
       * <code>optional double object_confidence = 29;</code>
       * @return Whether the objectConfidence field is set.
       */
      @java.lang.Override
      public boolean hasObjectConfidence() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <pre>
       * add object of the confidence
       * </pre>
       *
       * <code>optional double object_confidence = 29;</code>
       * @return The objectConfidence.
       */
      @java.lang.Override
      public double getObjectConfidence() {
        return objectConfidence_;
      }
      /**
       * <pre>
       * add object of the confidence
       * </pre>
       *
       * <code>optional double object_confidence = 29;</code>
       * @param value The objectConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setObjectConfidence(double value) {

        objectConfidence_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * add object of the confidence
       * </pre>
       *
       * <code>optional double object_confidence = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectConfidence() {
        bitField0_ = (bitField0_ & ~0x10000000);
        objectConfidence_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.PerceptionObstacle)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.PerceptionObstacle)
    private static final apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PerceptionObstacle>
        PARSER = new com.google.protobuf.AbstractParser<PerceptionObstacle>() {
      @java.lang.Override
      public PerceptionObstacle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PerceptionObstacle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PerceptionObstacle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LaneMarkerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.LaneMarker)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
     * @return Whether the laneType field is set.
     */
    boolean hasLaneType();
    /**
     * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
     * @return The laneType.
     */
    apollo.hdmap.MapLane.LaneBoundaryType.Type getLaneType();

    /**
     * <pre>
     * range = [0,1]; 1 = the best quality
     * </pre>
     *
     * <code>optional double quality = 2;</code>
     * @return Whether the quality field is set.
     */
    boolean hasQuality();
    /**
     * <pre>
     * range = [0,1]; 1 = the best quality
     * </pre>
     *
     * <code>optional double quality = 2;</code>
     * @return The quality.
     */
    double getQuality();

    /**
     * <code>optional int32 model_degree = 3;</code>
     * @return Whether the modelDegree field is set.
     */
    boolean hasModelDegree();
    /**
     * <code>optional int32 model_degree = 3;</code>
     * @return The modelDegree.
     */
    int getModelDegree();

    /**
     * <pre>
     * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
     * </pre>
     *
     * <code>optional double c0_position = 4;</code>
     * @return Whether the c0Position field is set.
     */
    boolean hasC0Position();
    /**
     * <pre>
     * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
     * </pre>
     *
     * <code>optional double c0_position = 4;</code>
     * @return The c0Position.
     */
    double getC0Position();

    /**
     * <code>optional double c1_heading_angle = 5;</code>
     * @return Whether the c1HeadingAngle field is set.
     */
    boolean hasC1HeadingAngle();
    /**
     * <code>optional double c1_heading_angle = 5;</code>
     * @return The c1HeadingAngle.
     */
    double getC1HeadingAngle();

    /**
     * <code>optional double c2_curvature = 6;</code>
     * @return Whether the c2Curvature field is set.
     */
    boolean hasC2Curvature();
    /**
     * <code>optional double c2_curvature = 6;</code>
     * @return The c2Curvature.
     */
    double getC2Curvature();

    /**
     * <code>optional double c3_curvature_derivative = 7;</code>
     * @return Whether the c3CurvatureDerivative field is set.
     */
    boolean hasC3CurvatureDerivative();
    /**
     * <code>optional double c3_curvature_derivative = 7;</code>
     * @return The c3CurvatureDerivative.
     */
    double getC3CurvatureDerivative();

    /**
     * <code>optional double view_range = 8;</code>
     * @return Whether the viewRange field is set.
     */
    boolean hasViewRange();
    /**
     * <code>optional double view_range = 8;</code>
     * @return The viewRange.
     */
    double getViewRange();

    /**
     * <code>optional double longitude_start = 9;</code>
     * @return Whether the longitudeStart field is set.
     */
    boolean hasLongitudeStart();
    /**
     * <code>optional double longitude_start = 9;</code>
     * @return The longitudeStart.
     */
    double getLongitudeStart();

    /**
     * <code>optional double longitude_end = 10;</code>
     * @return Whether the longitudeEnd field is set.
     */
    boolean hasLongitudeEnd();
    /**
     * <code>optional double longitude_end = 10;</code>
     * @return The longitudeEnd.
     */
    double getLongitudeEnd();
  }
  /**
   * Protobuf type {@code apollo.perception.LaneMarker}
   */
  public static final class LaneMarker extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.LaneMarker)
      LaneMarkerOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LaneMarker.class.getName());
    }
    // Use LaneMarker.newBuilder() to construct.
    private LaneMarker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LaneMarker() {
      laneType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarker_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker.class, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder.class);
    }

    private int bitField0_;
    public static final int LANE_TYPE_FIELD_NUMBER = 1;
    private int laneType_ = 0;
    /**
     * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
     * @return Whether the laneType field is set.
     */
    @java.lang.Override public boolean hasLaneType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
     * @return The laneType.
     */
    @java.lang.Override public apollo.hdmap.MapLane.LaneBoundaryType.Type getLaneType() {
      apollo.hdmap.MapLane.LaneBoundaryType.Type result = apollo.hdmap.MapLane.LaneBoundaryType.Type.forNumber(laneType_);
      return result == null ? apollo.hdmap.MapLane.LaneBoundaryType.Type.UNKNOWN : result;
    }

    public static final int QUALITY_FIELD_NUMBER = 2;
    private double quality_ = 0D;
    /**
     * <pre>
     * range = [0,1]; 1 = the best quality
     * </pre>
     *
     * <code>optional double quality = 2;</code>
     * @return Whether the quality field is set.
     */
    @java.lang.Override
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * range = [0,1]; 1 = the best quality
     * </pre>
     *
     * <code>optional double quality = 2;</code>
     * @return The quality.
     */
    @java.lang.Override
    public double getQuality() {
      return quality_;
    }

    public static final int MODEL_DEGREE_FIELD_NUMBER = 3;
    private int modelDegree_ = 0;
    /**
     * <code>optional int32 model_degree = 3;</code>
     * @return Whether the modelDegree field is set.
     */
    @java.lang.Override
    public boolean hasModelDegree() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 model_degree = 3;</code>
     * @return The modelDegree.
     */
    @java.lang.Override
    public int getModelDegree() {
      return modelDegree_;
    }

    public static final int C0_POSITION_FIELD_NUMBER = 4;
    private double c0Position_ = 0D;
    /**
     * <pre>
     * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
     * </pre>
     *
     * <code>optional double c0_position = 4;</code>
     * @return Whether the c0Position field is set.
     */
    @java.lang.Override
    public boolean hasC0Position() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
     * </pre>
     *
     * <code>optional double c0_position = 4;</code>
     * @return The c0Position.
     */
    @java.lang.Override
    public double getC0Position() {
      return c0Position_;
    }

    public static final int C1_HEADING_ANGLE_FIELD_NUMBER = 5;
    private double c1HeadingAngle_ = 0D;
    /**
     * <code>optional double c1_heading_angle = 5;</code>
     * @return Whether the c1HeadingAngle field is set.
     */
    @java.lang.Override
    public boolean hasC1HeadingAngle() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double c1_heading_angle = 5;</code>
     * @return The c1HeadingAngle.
     */
    @java.lang.Override
    public double getC1HeadingAngle() {
      return c1HeadingAngle_;
    }

    public static final int C2_CURVATURE_FIELD_NUMBER = 6;
    private double c2Curvature_ = 0D;
    /**
     * <code>optional double c2_curvature = 6;</code>
     * @return Whether the c2Curvature field is set.
     */
    @java.lang.Override
    public boolean hasC2Curvature() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double c2_curvature = 6;</code>
     * @return The c2Curvature.
     */
    @java.lang.Override
    public double getC2Curvature() {
      return c2Curvature_;
    }

    public static final int C3_CURVATURE_DERIVATIVE_FIELD_NUMBER = 7;
    private double c3CurvatureDerivative_ = 0D;
    /**
     * <code>optional double c3_curvature_derivative = 7;</code>
     * @return Whether the c3CurvatureDerivative field is set.
     */
    @java.lang.Override
    public boolean hasC3CurvatureDerivative() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double c3_curvature_derivative = 7;</code>
     * @return The c3CurvatureDerivative.
     */
    @java.lang.Override
    public double getC3CurvatureDerivative() {
      return c3CurvatureDerivative_;
    }

    public static final int VIEW_RANGE_FIELD_NUMBER = 8;
    private double viewRange_ = 0D;
    /**
     * <code>optional double view_range = 8;</code>
     * @return Whether the viewRange field is set.
     */
    @java.lang.Override
    public boolean hasViewRange() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double view_range = 8;</code>
     * @return The viewRange.
     */
    @java.lang.Override
    public double getViewRange() {
      return viewRange_;
    }

    public static final int LONGITUDE_START_FIELD_NUMBER = 9;
    private double longitudeStart_ = 0D;
    /**
     * <code>optional double longitude_start = 9;</code>
     * @return Whether the longitudeStart field is set.
     */
    @java.lang.Override
    public boolean hasLongitudeStart() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional double longitude_start = 9;</code>
     * @return The longitudeStart.
     */
    @java.lang.Override
    public double getLongitudeStart() {
      return longitudeStart_;
    }

    public static final int LONGITUDE_END_FIELD_NUMBER = 10;
    private double longitudeEnd_ = 0D;
    /**
     * <code>optional double longitude_end = 10;</code>
     * @return Whether the longitudeEnd field is set.
     */
    @java.lang.Override
    public boolean hasLongitudeEnd() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional double longitude_end = 10;</code>
     * @return The longitudeEnd.
     */
    @java.lang.Override
    public double getLongitudeEnd() {
      return longitudeEnd_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, laneType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, quality_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, modelDegree_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, c0Position_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, c1HeadingAngle_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, c2Curvature_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, c3CurvatureDerivative_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, viewRange_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, longitudeStart_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, longitudeEnd_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, laneType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, quality_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, modelDegree_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, c0Position_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, c1HeadingAngle_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, c2Curvature_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, c3CurvatureDerivative_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, viewRange_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, longitudeStart_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, longitudeEnd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.LaneMarker)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.LaneMarker other = (apollo.perception.PerceptionObstacleOuterClass.LaneMarker) obj;

      if (hasLaneType() != other.hasLaneType()) return false;
      if (hasLaneType()) {
        if (laneType_ != other.laneType_) return false;
      }
      if (hasQuality() != other.hasQuality()) return false;
      if (hasQuality()) {
        if (java.lang.Double.doubleToLongBits(getQuality())
            != java.lang.Double.doubleToLongBits(
                other.getQuality())) return false;
      }
      if (hasModelDegree() != other.hasModelDegree()) return false;
      if (hasModelDegree()) {
        if (getModelDegree()
            != other.getModelDegree()) return false;
      }
      if (hasC0Position() != other.hasC0Position()) return false;
      if (hasC0Position()) {
        if (java.lang.Double.doubleToLongBits(getC0Position())
            != java.lang.Double.doubleToLongBits(
                other.getC0Position())) return false;
      }
      if (hasC1HeadingAngle() != other.hasC1HeadingAngle()) return false;
      if (hasC1HeadingAngle()) {
        if (java.lang.Double.doubleToLongBits(getC1HeadingAngle())
            != java.lang.Double.doubleToLongBits(
                other.getC1HeadingAngle())) return false;
      }
      if (hasC2Curvature() != other.hasC2Curvature()) return false;
      if (hasC2Curvature()) {
        if (java.lang.Double.doubleToLongBits(getC2Curvature())
            != java.lang.Double.doubleToLongBits(
                other.getC2Curvature())) return false;
      }
      if (hasC3CurvatureDerivative() != other.hasC3CurvatureDerivative()) return false;
      if (hasC3CurvatureDerivative()) {
        if (java.lang.Double.doubleToLongBits(getC3CurvatureDerivative())
            != java.lang.Double.doubleToLongBits(
                other.getC3CurvatureDerivative())) return false;
      }
      if (hasViewRange() != other.hasViewRange()) return false;
      if (hasViewRange()) {
        if (java.lang.Double.doubleToLongBits(getViewRange())
            != java.lang.Double.doubleToLongBits(
                other.getViewRange())) return false;
      }
      if (hasLongitudeStart() != other.hasLongitudeStart()) return false;
      if (hasLongitudeStart()) {
        if (java.lang.Double.doubleToLongBits(getLongitudeStart())
            != java.lang.Double.doubleToLongBits(
                other.getLongitudeStart())) return false;
      }
      if (hasLongitudeEnd() != other.hasLongitudeEnd()) return false;
      if (hasLongitudeEnd()) {
        if (java.lang.Double.doubleToLongBits(getLongitudeEnd())
            != java.lang.Double.doubleToLongBits(
                other.getLongitudeEnd())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLaneType()) {
        hash = (37 * hash) + LANE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + laneType_;
      }
      if (hasQuality()) {
        hash = (37 * hash) + QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getQuality()));
      }
      if (hasModelDegree()) {
        hash = (37 * hash) + MODEL_DEGREE_FIELD_NUMBER;
        hash = (53 * hash) + getModelDegree();
      }
      if (hasC0Position()) {
        hash = (37 * hash) + C0_POSITION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getC0Position()));
      }
      if (hasC1HeadingAngle()) {
        hash = (37 * hash) + C1_HEADING_ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getC1HeadingAngle()));
      }
      if (hasC2Curvature()) {
        hash = (37 * hash) + C2_CURVATURE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getC2Curvature()));
      }
      if (hasC3CurvatureDerivative()) {
        hash = (37 * hash) + C3_CURVATURE_DERIVATIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getC3CurvatureDerivative()));
      }
      if (hasViewRange()) {
        hash = (37 * hash) + VIEW_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getViewRange()));
      }
      if (hasLongitudeStart()) {
        hash = (37 * hash) + LONGITUDE_START_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLongitudeStart()));
      }
      if (hasLongitudeEnd()) {
        hash = (37 * hash) + LONGITUDE_END_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLongitudeEnd()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.LaneMarker prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.LaneMarker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.LaneMarker)
        apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarker_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.LaneMarker.class, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.LaneMarker.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        laneType_ = 0;
        quality_ = 0D;
        modelDegree_ = 0;
        c0Position_ = 0D;
        c1HeadingAngle_ = 0D;
        c2Curvature_ = 0D;
        c3CurvatureDerivative_ = 0D;
        viewRange_ = 0D;
        longitudeStart_ = 0D;
        longitudeEnd_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarker_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker build() {
        apollo.perception.PerceptionObstacleOuterClass.LaneMarker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.LaneMarker result = new apollo.perception.PerceptionObstacleOuterClass.LaneMarker(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.LaneMarker result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.laneType_ = laneType_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.quality_ = quality_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.modelDegree_ = modelDegree_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.c0Position_ = c0Position_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.c1HeadingAngle_ = c1HeadingAngle_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.c2Curvature_ = c2Curvature_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.c3CurvatureDerivative_ = c3CurvatureDerivative_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.viewRange_ = viewRange_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.longitudeStart_ = longitudeStart_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.longitudeEnd_ = longitudeEnd_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.LaneMarker) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.LaneMarker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.LaneMarker other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance()) return this;
        if (other.hasLaneType()) {
          setLaneType(other.getLaneType());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasModelDegree()) {
          setModelDegree(other.getModelDegree());
        }
        if (other.hasC0Position()) {
          setC0Position(other.getC0Position());
        }
        if (other.hasC1HeadingAngle()) {
          setC1HeadingAngle(other.getC1HeadingAngle());
        }
        if (other.hasC2Curvature()) {
          setC2Curvature(other.getC2Curvature());
        }
        if (other.hasC3CurvatureDerivative()) {
          setC3CurvatureDerivative(other.getC3CurvatureDerivative());
        }
        if (other.hasViewRange()) {
          setViewRange(other.getViewRange());
        }
        if (other.hasLongitudeStart()) {
          setLongitudeStart(other.getLongitudeStart());
        }
        if (other.hasLongitudeEnd()) {
          setLongitudeEnd(other.getLongitudeEnd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                apollo.hdmap.MapLane.LaneBoundaryType.Type tmpValue =
                    apollo.hdmap.MapLane.LaneBoundaryType.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  laneType_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 17: {
                quality_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                modelDegree_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 33: {
                c0Position_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                c1HeadingAngle_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                c2Curvature_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                c3CurvatureDerivative_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                viewRange_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 73: {
                longitudeStart_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 81: {
                longitudeEnd_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int laneType_ = 0;
      /**
       * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
       * @return Whether the laneType field is set.
       */
      @java.lang.Override public boolean hasLaneType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
       * @return The laneType.
       */
      @java.lang.Override
      public apollo.hdmap.MapLane.LaneBoundaryType.Type getLaneType() {
        apollo.hdmap.MapLane.LaneBoundaryType.Type result = apollo.hdmap.MapLane.LaneBoundaryType.Type.forNumber(laneType_);
        return result == null ? apollo.hdmap.MapLane.LaneBoundaryType.Type.UNKNOWN : result;
      }
      /**
       * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
       * @param value The laneType to set.
       * @return This builder for chaining.
       */
      public Builder setLaneType(apollo.hdmap.MapLane.LaneBoundaryType.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        laneType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.hdmap.LaneBoundaryType.Type lane_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        laneType_ = 0;
        onChanged();
        return this;
      }

      private double quality_ ;
      /**
       * <pre>
       * range = [0,1]; 1 = the best quality
       * </pre>
       *
       * <code>optional double quality = 2;</code>
       * @return Whether the quality field is set.
       */
      @java.lang.Override
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * range = [0,1]; 1 = the best quality
       * </pre>
       *
       * <code>optional double quality = 2;</code>
       * @return The quality.
       */
      @java.lang.Override
      public double getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * range = [0,1]; 1 = the best quality
       * </pre>
       *
       * <code>optional double quality = 2;</code>
       * @param value The quality to set.
       * @return This builder for chaining.
       */
      public Builder setQuality(double value) {

        quality_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * range = [0,1]; 1 = the best quality
       * </pre>
       *
       * <code>optional double quality = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0D;
        onChanged();
        return this;
      }

      private int modelDegree_ ;
      /**
       * <code>optional int32 model_degree = 3;</code>
       * @return Whether the modelDegree field is set.
       */
      @java.lang.Override
      public boolean hasModelDegree() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 model_degree = 3;</code>
       * @return The modelDegree.
       */
      @java.lang.Override
      public int getModelDegree() {
        return modelDegree_;
      }
      /**
       * <code>optional int32 model_degree = 3;</code>
       * @param value The modelDegree to set.
       * @return This builder for chaining.
       */
      public Builder setModelDegree(int value) {

        modelDegree_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 model_degree = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelDegree() {
        bitField0_ = (bitField0_ & ~0x00000004);
        modelDegree_ = 0;
        onChanged();
        return this;
      }

      private double c0Position_ ;
      /**
       * <pre>
       * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
       * </pre>
       *
       * <code>optional double c0_position = 4;</code>
       * @return Whether the c0Position field is set.
       */
      @java.lang.Override
      public boolean hasC0Position() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
       * </pre>
       *
       * <code>optional double c0_position = 4;</code>
       * @return The c0Position.
       */
      @java.lang.Override
      public double getC0Position() {
        return c0Position_;
      }
      /**
       * <pre>
       * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
       * </pre>
       *
       * <code>optional double c0_position = 4;</code>
       * @param value The c0Position to set.
       * @return This builder for chaining.
       */
      public Builder setC0Position(double value) {

        c0Position_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * equation X = c3 * Z^3 + c2 * Z^2 + c1 * Z + c0
       * </pre>
       *
       * <code>optional double c0_position = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearC0Position() {
        bitField0_ = (bitField0_ & ~0x00000008);
        c0Position_ = 0D;
        onChanged();
        return this;
      }

      private double c1HeadingAngle_ ;
      /**
       * <code>optional double c1_heading_angle = 5;</code>
       * @return Whether the c1HeadingAngle field is set.
       */
      @java.lang.Override
      public boolean hasC1HeadingAngle() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double c1_heading_angle = 5;</code>
       * @return The c1HeadingAngle.
       */
      @java.lang.Override
      public double getC1HeadingAngle() {
        return c1HeadingAngle_;
      }
      /**
       * <code>optional double c1_heading_angle = 5;</code>
       * @param value The c1HeadingAngle to set.
       * @return This builder for chaining.
       */
      public Builder setC1HeadingAngle(double value) {

        c1HeadingAngle_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double c1_heading_angle = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearC1HeadingAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        c1HeadingAngle_ = 0D;
        onChanged();
        return this;
      }

      private double c2Curvature_ ;
      /**
       * <code>optional double c2_curvature = 6;</code>
       * @return Whether the c2Curvature field is set.
       */
      @java.lang.Override
      public boolean hasC2Curvature() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double c2_curvature = 6;</code>
       * @return The c2Curvature.
       */
      @java.lang.Override
      public double getC2Curvature() {
        return c2Curvature_;
      }
      /**
       * <code>optional double c2_curvature = 6;</code>
       * @param value The c2Curvature to set.
       * @return This builder for chaining.
       */
      public Builder setC2Curvature(double value) {

        c2Curvature_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double c2_curvature = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearC2Curvature() {
        bitField0_ = (bitField0_ & ~0x00000020);
        c2Curvature_ = 0D;
        onChanged();
        return this;
      }

      private double c3CurvatureDerivative_ ;
      /**
       * <code>optional double c3_curvature_derivative = 7;</code>
       * @return Whether the c3CurvatureDerivative field is set.
       */
      @java.lang.Override
      public boolean hasC3CurvatureDerivative() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double c3_curvature_derivative = 7;</code>
       * @return The c3CurvatureDerivative.
       */
      @java.lang.Override
      public double getC3CurvatureDerivative() {
        return c3CurvatureDerivative_;
      }
      /**
       * <code>optional double c3_curvature_derivative = 7;</code>
       * @param value The c3CurvatureDerivative to set.
       * @return This builder for chaining.
       */
      public Builder setC3CurvatureDerivative(double value) {

        c3CurvatureDerivative_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double c3_curvature_derivative = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearC3CurvatureDerivative() {
        bitField0_ = (bitField0_ & ~0x00000040);
        c3CurvatureDerivative_ = 0D;
        onChanged();
        return this;
      }

      private double viewRange_ ;
      /**
       * <code>optional double view_range = 8;</code>
       * @return Whether the viewRange field is set.
       */
      @java.lang.Override
      public boolean hasViewRange() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double view_range = 8;</code>
       * @return The viewRange.
       */
      @java.lang.Override
      public double getViewRange() {
        return viewRange_;
      }
      /**
       * <code>optional double view_range = 8;</code>
       * @param value The viewRange to set.
       * @return This builder for chaining.
       */
      public Builder setViewRange(double value) {

        viewRange_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional double view_range = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearViewRange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        viewRange_ = 0D;
        onChanged();
        return this;
      }

      private double longitudeStart_ ;
      /**
       * <code>optional double longitude_start = 9;</code>
       * @return Whether the longitudeStart field is set.
       */
      @java.lang.Override
      public boolean hasLongitudeStart() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double longitude_start = 9;</code>
       * @return The longitudeStart.
       */
      @java.lang.Override
      public double getLongitudeStart() {
        return longitudeStart_;
      }
      /**
       * <code>optional double longitude_start = 9;</code>
       * @param value The longitudeStart to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeStart(double value) {

        longitudeStart_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional double longitude_start = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeStart() {
        bitField0_ = (bitField0_ & ~0x00000100);
        longitudeStart_ = 0D;
        onChanged();
        return this;
      }

      private double longitudeEnd_ ;
      /**
       * <code>optional double longitude_end = 10;</code>
       * @return Whether the longitudeEnd field is set.
       */
      @java.lang.Override
      public boolean hasLongitudeEnd() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double longitude_end = 10;</code>
       * @return The longitudeEnd.
       */
      @java.lang.Override
      public double getLongitudeEnd() {
        return longitudeEnd_;
      }
      /**
       * <code>optional double longitude_end = 10;</code>
       * @param value The longitudeEnd to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeEnd(double value) {

        longitudeEnd_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional double longitude_end = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeEnd() {
        bitField0_ = (bitField0_ & ~0x00000200);
        longitudeEnd_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.LaneMarker)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.LaneMarker)
    private static final apollo.perception.PerceptionObstacleOuterClass.LaneMarker DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.LaneMarker();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarker getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LaneMarker>
        PARSER = new com.google.protobuf.AbstractParser<LaneMarker>() {
      @java.lang.Override
      public LaneMarker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LaneMarker> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LaneMarker> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LaneMarkersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.LaneMarkers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     * @return Whether the leftLaneMarker field is set.
     */
    boolean hasLeftLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     * @return The leftLaneMarker.
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarker getLeftLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getLeftLaneMarkerOrBuilder();

    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     * @return Whether the rightLaneMarker field is set.
     */
    boolean hasRightLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     * @return The rightLaneMarker.
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarker getRightLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getRightLaneMarkerOrBuilder();

    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> 
        getNextLeftLaneMarkerList();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextLeftLaneMarker(int index);
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    int getNextLeftLaneMarkerCount();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
        getNextLeftLaneMarkerOrBuilderList();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextLeftLaneMarkerOrBuilder(
        int index);

    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> 
        getNextRightLaneMarkerList();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextRightLaneMarker(int index);
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    int getNextRightLaneMarkerCount();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
        getNextRightLaneMarkerOrBuilderList();
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextRightLaneMarkerOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code apollo.perception.LaneMarkers}
   */
  public static final class LaneMarkers extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.LaneMarkers)
      LaneMarkersOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        LaneMarkers.class.getName());
    }
    // Use LaneMarkers.newBuilder() to construct.
    private LaneMarkers(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LaneMarkers() {
      nextLeftLaneMarker_ = java.util.Collections.emptyList();
      nextRightLaneMarker_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarkers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarkers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.class, apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder.class);
    }

    private int bitField0_;
    public static final int LEFT_LANE_MARKER_FIELD_NUMBER = 1;
    private apollo.perception.PerceptionObstacleOuterClass.LaneMarker leftLaneMarker_;
    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     * @return Whether the leftLaneMarker field is set.
     */
    @java.lang.Override
    public boolean hasLeftLaneMarker() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     * @return The leftLaneMarker.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getLeftLaneMarker() {
      return leftLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : leftLaneMarker_;
    }
    /**
     * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getLeftLaneMarkerOrBuilder() {
      return leftLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : leftLaneMarker_;
    }

    public static final int RIGHT_LANE_MARKER_FIELD_NUMBER = 2;
    private apollo.perception.PerceptionObstacleOuterClass.LaneMarker rightLaneMarker_;
    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     * @return Whether the rightLaneMarker field is set.
     */
    @java.lang.Override
    public boolean hasRightLaneMarker() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     * @return The rightLaneMarker.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getRightLaneMarker() {
      return rightLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : rightLaneMarker_;
    }
    /**
     * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getRightLaneMarkerOrBuilder() {
      return rightLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : rightLaneMarker_;
    }

    public static final int NEXT_LEFT_LANE_MARKER_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> nextLeftLaneMarker_;
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> getNextLeftLaneMarkerList() {
      return nextLeftLaneMarker_;
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
        getNextLeftLaneMarkerOrBuilderList() {
      return nextLeftLaneMarker_;
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    @java.lang.Override
    public int getNextLeftLaneMarkerCount() {
      return nextLeftLaneMarker_.size();
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextLeftLaneMarker(int index) {
      return nextLeftLaneMarker_.get(index);
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextLeftLaneMarkerOrBuilder(
        int index) {
      return nextLeftLaneMarker_.get(index);
    }

    public static final int NEXT_RIGHT_LANE_MARKER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> nextRightLaneMarker_;
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> getNextRightLaneMarkerList() {
      return nextRightLaneMarker_;
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
        getNextRightLaneMarkerOrBuilderList() {
      return nextRightLaneMarker_;
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    @java.lang.Override
    public int getNextRightLaneMarkerCount() {
      return nextRightLaneMarker_.size();
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextRightLaneMarker(int index) {
      return nextRightLaneMarker_.get(index);
    }
    /**
     * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextRightLaneMarkerOrBuilder(
        int index) {
      return nextRightLaneMarker_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getLeftLaneMarker());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getRightLaneMarker());
      }
      for (int i = 0; i < nextLeftLaneMarker_.size(); i++) {
        output.writeMessage(3, nextLeftLaneMarker_.get(i));
      }
      for (int i = 0; i < nextRightLaneMarker_.size(); i++) {
        output.writeMessage(4, nextRightLaneMarker_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLeftLaneMarker());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRightLaneMarker());
      }
      for (int i = 0; i < nextLeftLaneMarker_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nextLeftLaneMarker_.get(i));
      }
      for (int i = 0; i < nextRightLaneMarker_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, nextRightLaneMarker_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.LaneMarkers)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.LaneMarkers other = (apollo.perception.PerceptionObstacleOuterClass.LaneMarkers) obj;

      if (hasLeftLaneMarker() != other.hasLeftLaneMarker()) return false;
      if (hasLeftLaneMarker()) {
        if (!getLeftLaneMarker()
            .equals(other.getLeftLaneMarker())) return false;
      }
      if (hasRightLaneMarker() != other.hasRightLaneMarker()) return false;
      if (hasRightLaneMarker()) {
        if (!getRightLaneMarker()
            .equals(other.getRightLaneMarker())) return false;
      }
      if (!getNextLeftLaneMarkerList()
          .equals(other.getNextLeftLaneMarkerList())) return false;
      if (!getNextRightLaneMarkerList()
          .equals(other.getNextRightLaneMarkerList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeftLaneMarker()) {
        hash = (37 * hash) + LEFT_LANE_MARKER_FIELD_NUMBER;
        hash = (53 * hash) + getLeftLaneMarker().hashCode();
      }
      if (hasRightLaneMarker()) {
        hash = (37 * hash) + RIGHT_LANE_MARKER_FIELD_NUMBER;
        hash = (53 * hash) + getRightLaneMarker().hashCode();
      }
      if (getNextLeftLaneMarkerCount() > 0) {
        hash = (37 * hash) + NEXT_LEFT_LANE_MARKER_FIELD_NUMBER;
        hash = (53 * hash) + getNextLeftLaneMarkerList().hashCode();
      }
      if (getNextRightLaneMarkerCount() > 0) {
        hash = (37 * hash) + NEXT_RIGHT_LANE_MARKER_FIELD_NUMBER;
        hash = (53 * hash) + getNextRightLaneMarkerList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.LaneMarkers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.LaneMarkers)
        apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarkers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarkers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.class, apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLeftLaneMarkerFieldBuilder();
          getRightLaneMarkerFieldBuilder();
          getNextLeftLaneMarkerFieldBuilder();
          getNextRightLaneMarkerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leftLaneMarker_ = null;
        if (leftLaneMarkerBuilder_ != null) {
          leftLaneMarkerBuilder_.dispose();
          leftLaneMarkerBuilder_ = null;
        }
        rightLaneMarker_ = null;
        if (rightLaneMarkerBuilder_ != null) {
          rightLaneMarkerBuilder_.dispose();
          rightLaneMarkerBuilder_ = null;
        }
        if (nextLeftLaneMarkerBuilder_ == null) {
          nextLeftLaneMarker_ = java.util.Collections.emptyList();
        } else {
          nextLeftLaneMarker_ = null;
          nextLeftLaneMarkerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (nextRightLaneMarkerBuilder_ == null) {
          nextRightLaneMarker_ = java.util.Collections.emptyList();
        } else {
          nextRightLaneMarker_ = null;
          nextRightLaneMarkerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_LaneMarkers_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers build() {
        apollo.perception.PerceptionObstacleOuterClass.LaneMarkers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.LaneMarkers result = new apollo.perception.PerceptionObstacleOuterClass.LaneMarkers(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers result) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            nextLeftLaneMarker_ = java.util.Collections.unmodifiableList(nextLeftLaneMarker_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.nextLeftLaneMarker_ = nextLeftLaneMarker_;
        } else {
          result.nextLeftLaneMarker_ = nextLeftLaneMarkerBuilder_.build();
        }
        if (nextRightLaneMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            nextRightLaneMarker_ = java.util.Collections.unmodifiableList(nextRightLaneMarker_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.nextRightLaneMarker_ = nextRightLaneMarker_;
        } else {
          result.nextRightLaneMarker_ = nextRightLaneMarkerBuilder_.build();
        }
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leftLaneMarker_ = leftLaneMarkerBuilder_ == null
              ? leftLaneMarker_
              : leftLaneMarkerBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rightLaneMarker_ = rightLaneMarkerBuilder_ == null
              ? rightLaneMarker_
              : rightLaneMarkerBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.LaneMarkers) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.LaneMarkers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance()) return this;
        if (other.hasLeftLaneMarker()) {
          mergeLeftLaneMarker(other.getLeftLaneMarker());
        }
        if (other.hasRightLaneMarker()) {
          mergeRightLaneMarker(other.getRightLaneMarker());
        }
        if (nextLeftLaneMarkerBuilder_ == null) {
          if (!other.nextLeftLaneMarker_.isEmpty()) {
            if (nextLeftLaneMarker_.isEmpty()) {
              nextLeftLaneMarker_ = other.nextLeftLaneMarker_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNextLeftLaneMarkerIsMutable();
              nextLeftLaneMarker_.addAll(other.nextLeftLaneMarker_);
            }
            onChanged();
          }
        } else {
          if (!other.nextLeftLaneMarker_.isEmpty()) {
            if (nextLeftLaneMarkerBuilder_.isEmpty()) {
              nextLeftLaneMarkerBuilder_.dispose();
              nextLeftLaneMarkerBuilder_ = null;
              nextLeftLaneMarker_ = other.nextLeftLaneMarker_;
              bitField0_ = (bitField0_ & ~0x00000004);
              nextLeftLaneMarkerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNextLeftLaneMarkerFieldBuilder() : null;
            } else {
              nextLeftLaneMarkerBuilder_.addAllMessages(other.nextLeftLaneMarker_);
            }
          }
        }
        if (nextRightLaneMarkerBuilder_ == null) {
          if (!other.nextRightLaneMarker_.isEmpty()) {
            if (nextRightLaneMarker_.isEmpty()) {
              nextRightLaneMarker_ = other.nextRightLaneMarker_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureNextRightLaneMarkerIsMutable();
              nextRightLaneMarker_.addAll(other.nextRightLaneMarker_);
            }
            onChanged();
          }
        } else {
          if (!other.nextRightLaneMarker_.isEmpty()) {
            if (nextRightLaneMarkerBuilder_.isEmpty()) {
              nextRightLaneMarkerBuilder_.dispose();
              nextRightLaneMarkerBuilder_ = null;
              nextRightLaneMarker_ = other.nextRightLaneMarker_;
              bitField0_ = (bitField0_ & ~0x00000008);
              nextRightLaneMarkerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNextRightLaneMarkerFieldBuilder() : null;
            } else {
              nextRightLaneMarkerBuilder_.addAllMessages(other.nextRightLaneMarker_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getLeftLaneMarkerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getRightLaneMarkerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                apollo.perception.PerceptionObstacleOuterClass.LaneMarker m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.LaneMarker.parser(),
                        extensionRegistry);
                if (nextLeftLaneMarkerBuilder_ == null) {
                  ensureNextLeftLaneMarkerIsMutable();
                  nextLeftLaneMarker_.add(m);
                } else {
                  nextLeftLaneMarkerBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                apollo.perception.PerceptionObstacleOuterClass.LaneMarker m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.LaneMarker.parser(),
                        extensionRegistry);
                if (nextRightLaneMarkerBuilder_ == null) {
                  ensureNextRightLaneMarkerIsMutable();
                  nextRightLaneMarker_.add(m);
                } else {
                  nextRightLaneMarkerBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private apollo.perception.PerceptionObstacleOuterClass.LaneMarker leftLaneMarker_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> leftLaneMarkerBuilder_;
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       * @return Whether the leftLaneMarker field is set.
       */
      public boolean hasLeftLaneMarker() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       * @return The leftLaneMarker.
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getLeftLaneMarker() {
        if (leftLaneMarkerBuilder_ == null) {
          return leftLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : leftLaneMarker_;
        } else {
          return leftLaneMarkerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public Builder setLeftLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (leftLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leftLaneMarker_ = value;
        } else {
          leftLaneMarkerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public Builder setLeftLaneMarker(
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (leftLaneMarkerBuilder_ == null) {
          leftLaneMarker_ = builderForValue.build();
        } else {
          leftLaneMarkerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public Builder mergeLeftLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (leftLaneMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            leftLaneMarker_ != null &&
            leftLaneMarker_ != apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance()) {
            getLeftLaneMarkerBuilder().mergeFrom(value);
          } else {
            leftLaneMarker_ = value;
          }
        } else {
          leftLaneMarkerBuilder_.mergeFrom(value);
        }
        if (leftLaneMarker_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public Builder clearLeftLaneMarker() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leftLaneMarker_ = null;
        if (leftLaneMarkerBuilder_ != null) {
          leftLaneMarkerBuilder_.dispose();
          leftLaneMarkerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder getLeftLaneMarkerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLeftLaneMarkerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getLeftLaneMarkerOrBuilder() {
        if (leftLaneMarkerBuilder_ != null) {
          return leftLaneMarkerBuilder_.getMessageOrBuilder();
        } else {
          return leftLaneMarker_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : leftLaneMarker_;
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarker left_lane_marker = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
          getLeftLaneMarkerFieldBuilder() {
        if (leftLaneMarkerBuilder_ == null) {
          leftLaneMarkerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder>(
                  getLeftLaneMarker(),
                  getParentForChildren(),
                  isClean());
          leftLaneMarker_ = null;
        }
        return leftLaneMarkerBuilder_;
      }

      private apollo.perception.PerceptionObstacleOuterClass.LaneMarker rightLaneMarker_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> rightLaneMarkerBuilder_;
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       * @return Whether the rightLaneMarker field is set.
       */
      public boolean hasRightLaneMarker() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       * @return The rightLaneMarker.
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getRightLaneMarker() {
        if (rightLaneMarkerBuilder_ == null) {
          return rightLaneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : rightLaneMarker_;
        } else {
          return rightLaneMarkerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public Builder setRightLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (rightLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rightLaneMarker_ = value;
        } else {
          rightLaneMarkerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public Builder setRightLaneMarker(
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (rightLaneMarkerBuilder_ == null) {
          rightLaneMarker_ = builderForValue.build();
        } else {
          rightLaneMarkerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public Builder mergeRightLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (rightLaneMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            rightLaneMarker_ != null &&
            rightLaneMarker_ != apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance()) {
            getRightLaneMarkerBuilder().mergeFrom(value);
          } else {
            rightLaneMarker_ = value;
          }
        } else {
          rightLaneMarkerBuilder_.mergeFrom(value);
        }
        if (rightLaneMarker_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public Builder clearRightLaneMarker() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rightLaneMarker_ = null;
        if (rightLaneMarkerBuilder_ != null) {
          rightLaneMarkerBuilder_.dispose();
          rightLaneMarkerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder getRightLaneMarkerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRightLaneMarkerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getRightLaneMarkerOrBuilder() {
        if (rightLaneMarkerBuilder_ != null) {
          return rightLaneMarkerBuilder_.getMessageOrBuilder();
        } else {
          return rightLaneMarker_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance() : rightLaneMarker_;
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarker right_lane_marker = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
          getRightLaneMarkerFieldBuilder() {
        if (rightLaneMarkerBuilder_ == null) {
          rightLaneMarkerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder>(
                  getRightLaneMarker(),
                  getParentForChildren(),
                  isClean());
          rightLaneMarker_ = null;
        }
        return rightLaneMarkerBuilder_;
      }

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> nextLeftLaneMarker_ =
        java.util.Collections.emptyList();
      private void ensureNextLeftLaneMarkerIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          nextLeftLaneMarker_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.LaneMarker>(nextLeftLaneMarker_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> nextLeftLaneMarkerBuilder_;

      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> getNextLeftLaneMarkerList() {
        if (nextLeftLaneMarkerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nextLeftLaneMarker_);
        } else {
          return nextLeftLaneMarkerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public int getNextLeftLaneMarkerCount() {
        if (nextLeftLaneMarkerBuilder_ == null) {
          return nextLeftLaneMarker_.size();
        } else {
          return nextLeftLaneMarkerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextLeftLaneMarker(int index) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          return nextLeftLaneMarker_.get(index);
        } else {
          return nextLeftLaneMarkerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder setNextLeftLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.set(index, value);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder setNextLeftLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.set(index, builderForValue.build());
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder addNextLeftLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.add(value);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder addNextLeftLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.add(index, value);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder addNextLeftLaneMarker(
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.add(builderForValue.build());
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder addNextLeftLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.add(index, builderForValue.build());
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder addAllNextLeftLaneMarker(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarker> values) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          ensureNextLeftLaneMarkerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nextLeftLaneMarker_);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder clearNextLeftLaneMarker() {
        if (nextLeftLaneMarkerBuilder_ == null) {
          nextLeftLaneMarker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public Builder removeNextLeftLaneMarker(int index) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          ensureNextLeftLaneMarkerIsMutable();
          nextLeftLaneMarker_.remove(index);
          onChanged();
        } else {
          nextLeftLaneMarkerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder getNextLeftLaneMarkerBuilder(
          int index) {
        return getNextLeftLaneMarkerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextLeftLaneMarkerOrBuilder(
          int index) {
        if (nextLeftLaneMarkerBuilder_ == null) {
          return nextLeftLaneMarker_.get(index);  } else {
          return nextLeftLaneMarkerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
           getNextLeftLaneMarkerOrBuilderList() {
        if (nextLeftLaneMarkerBuilder_ != null) {
          return nextLeftLaneMarkerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nextLeftLaneMarker_);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder addNextLeftLaneMarkerBuilder() {
        return getNextLeftLaneMarkerFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder addNextLeftLaneMarkerBuilder(
          int index) {
        return getNextLeftLaneMarkerFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_left_lane_marker = 3;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder> 
           getNextLeftLaneMarkerBuilderList() {
        return getNextLeftLaneMarkerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
          getNextLeftLaneMarkerFieldBuilder() {
        if (nextLeftLaneMarkerBuilder_ == null) {
          nextLeftLaneMarkerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder>(
                  nextLeftLaneMarker_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          nextLeftLaneMarker_ = null;
        }
        return nextLeftLaneMarkerBuilder_;
      }

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> nextRightLaneMarker_ =
        java.util.Collections.emptyList();
      private void ensureNextRightLaneMarkerIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          nextRightLaneMarker_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.LaneMarker>(nextRightLaneMarker_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> nextRightLaneMarkerBuilder_;

      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker> getNextRightLaneMarkerList() {
        if (nextRightLaneMarkerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nextRightLaneMarker_);
        } else {
          return nextRightLaneMarkerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public int getNextRightLaneMarkerCount() {
        if (nextRightLaneMarkerBuilder_ == null) {
          return nextRightLaneMarker_.size();
        } else {
          return nextRightLaneMarkerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker getNextRightLaneMarker(int index) {
        if (nextRightLaneMarkerBuilder_ == null) {
          return nextRightLaneMarker_.get(index);
        } else {
          return nextRightLaneMarkerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder setNextRightLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextRightLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.set(index, value);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder setNextRightLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextRightLaneMarkerBuilder_ == null) {
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.set(index, builderForValue.build());
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder addNextRightLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextRightLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.add(value);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder addNextRightLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker value) {
        if (nextRightLaneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.add(index, value);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder addNextRightLaneMarker(
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextRightLaneMarkerBuilder_ == null) {
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.add(builderForValue.build());
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder addNextRightLaneMarker(
          int index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder builderForValue) {
        if (nextRightLaneMarkerBuilder_ == null) {
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.add(index, builderForValue.build());
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder addAllNextRightLaneMarker(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarker> values) {
        if (nextRightLaneMarkerBuilder_ == null) {
          ensureNextRightLaneMarkerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nextRightLaneMarker_);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder clearNextRightLaneMarker() {
        if (nextRightLaneMarkerBuilder_ == null) {
          nextRightLaneMarker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public Builder removeNextRightLaneMarker(int index) {
        if (nextRightLaneMarkerBuilder_ == null) {
          ensureNextRightLaneMarkerIsMutable();
          nextRightLaneMarker_.remove(index);
          onChanged();
        } else {
          nextRightLaneMarkerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder getNextRightLaneMarkerBuilder(
          int index) {
        return getNextRightLaneMarkerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder getNextRightLaneMarkerOrBuilder(
          int index) {
        if (nextRightLaneMarkerBuilder_ == null) {
          return nextRightLaneMarker_.get(index);  } else {
          return nextRightLaneMarkerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
           getNextRightLaneMarkerOrBuilderList() {
        if (nextRightLaneMarkerBuilder_ != null) {
          return nextRightLaneMarkerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nextRightLaneMarker_);
        }
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder addNextRightLaneMarkerBuilder() {
        return getNextRightLaneMarkerFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder addNextRightLaneMarkerBuilder(
          int index) {
        return getNextRightLaneMarkerFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.perception.LaneMarker next_right_lane_marker = 4;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder> 
           getNextRightLaneMarkerBuilderList() {
        return getNextRightLaneMarkerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder> 
          getNextRightLaneMarkerFieldBuilder() {
        if (nextRightLaneMarkerBuilder_ == null) {
          nextRightLaneMarkerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LaneMarker, apollo.perception.PerceptionObstacleOuterClass.LaneMarker.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkerOrBuilder>(
                  nextRightLaneMarker_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          nextRightLaneMarker_ = null;
        }
        return nextRightLaneMarkerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.LaneMarkers)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.LaneMarkers)
    private static final apollo.perception.PerceptionObstacleOuterClass.LaneMarkers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.LaneMarkers();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LaneMarkers>
        PARSER = new com.google.protobuf.AbstractParser<LaneMarkers>() {
      @java.lang.Override
      public LaneMarkers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LaneMarkers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LaneMarkers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CIPVInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.CIPVInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 cipv_id = 1;</code>
     * @return Whether the cipvId field is set.
     */
    boolean hasCipvId();
    /**
     * <code>optional int32 cipv_id = 1;</code>
     * @return The cipvId.
     */
    int getCipvId();

    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @return A list containing the potentialCipvId.
     */
    java.util.List<java.lang.Integer> getPotentialCipvIdList();
    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @return The count of potentialCipvId.
     */
    int getPotentialCipvIdCount();
    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @param index The index of the element to return.
     * @return The potentialCipvId at the given index.
     */
    int getPotentialCipvId(int index);
  }
  /**
   * Protobuf type {@code apollo.perception.CIPVInfo}
   */
  public static final class CIPVInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.CIPVInfo)
      CIPVInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CIPVInfo.class.getName());
    }
    // Use CIPVInfo.newBuilder() to construct.
    private CIPVInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CIPVInfo() {
      potentialCipvId_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_CIPVInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_CIPVInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.class, apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder.class);
    }

    private int bitField0_;
    public static final int CIPV_ID_FIELD_NUMBER = 1;
    private int cipvId_ = 0;
    /**
     * <code>optional int32 cipv_id = 1;</code>
     * @return Whether the cipvId field is set.
     */
    @java.lang.Override
    public boolean hasCipvId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 cipv_id = 1;</code>
     * @return The cipvId.
     */
    @java.lang.Override
    public int getCipvId() {
      return cipvId_;
    }

    public static final int POTENTIAL_CIPV_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList potentialCipvId_ =
        emptyIntList();
    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @return A list containing the potentialCipvId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getPotentialCipvIdList() {
      return potentialCipvId_;
    }
    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @return The count of potentialCipvId.
     */
    public int getPotentialCipvIdCount() {
      return potentialCipvId_.size();
    }
    /**
     * <code>repeated int32 potential_cipv_id = 2;</code>
     * @param index The index of the element to return.
     * @return The potentialCipvId at the given index.
     */
    public int getPotentialCipvId(int index) {
      return potentialCipvId_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, cipvId_);
      }
      for (int i = 0; i < potentialCipvId_.size(); i++) {
        output.writeInt32(2, potentialCipvId_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cipvId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < potentialCipvId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(potentialCipvId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getPotentialCipvIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.CIPVInfo)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.CIPVInfo other = (apollo.perception.PerceptionObstacleOuterClass.CIPVInfo) obj;

      if (hasCipvId() != other.hasCipvId()) return false;
      if (hasCipvId()) {
        if (getCipvId()
            != other.getCipvId()) return false;
      }
      if (!getPotentialCipvIdList()
          .equals(other.getPotentialCipvIdList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCipvId()) {
        hash = (37 * hash) + CIPV_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCipvId();
      }
      if (getPotentialCipvIdCount() > 0) {
        hash = (37 * hash) + POTENTIAL_CIPV_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPotentialCipvIdList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.CIPVInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.CIPVInfo)
        apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_CIPVInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_CIPVInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.class, apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cipvId_ = 0;
        potentialCipvId_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_CIPVInfo_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo build() {
        apollo.perception.PerceptionObstacleOuterClass.CIPVInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.CIPVInfo result = new apollo.perception.PerceptionObstacleOuterClass.CIPVInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cipvId_ = cipvId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          potentialCipvId_.makeImmutable();
          result.potentialCipvId_ = potentialCipvId_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.CIPVInfo) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.CIPVInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance()) return this;
        if (other.hasCipvId()) {
          setCipvId(other.getCipvId());
        }
        if (!other.potentialCipvId_.isEmpty()) {
          if (potentialCipvId_.isEmpty()) {
            potentialCipvId_ = other.potentialCipvId_;
            potentialCipvId_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensurePotentialCipvIdIsMutable();
            potentialCipvId_.addAll(other.potentialCipvId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                cipvId_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int v = input.readInt32();
                ensurePotentialCipvIdIsMutable();
                potentialCipvId_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePotentialCipvIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  potentialCipvId_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int cipvId_ ;
      /**
       * <code>optional int32 cipv_id = 1;</code>
       * @return Whether the cipvId field is set.
       */
      @java.lang.Override
      public boolean hasCipvId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 cipv_id = 1;</code>
       * @return The cipvId.
       */
      @java.lang.Override
      public int getCipvId() {
        return cipvId_;
      }
      /**
       * <code>optional int32 cipv_id = 1;</code>
       * @param value The cipvId to set.
       * @return This builder for chaining.
       */
      public Builder setCipvId(int value) {

        cipvId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cipv_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCipvId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cipvId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList potentialCipvId_ = emptyIntList();
      private void ensurePotentialCipvIdIsMutable() {
        if (!potentialCipvId_.isModifiable()) {
          potentialCipvId_ = makeMutableCopy(potentialCipvId_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @return A list containing the potentialCipvId.
       */
      public java.util.List<java.lang.Integer>
          getPotentialCipvIdList() {
        potentialCipvId_.makeImmutable();
        return potentialCipvId_;
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @return The count of potentialCipvId.
       */
      public int getPotentialCipvIdCount() {
        return potentialCipvId_.size();
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @param index The index of the element to return.
       * @return The potentialCipvId at the given index.
       */
      public int getPotentialCipvId(int index) {
        return potentialCipvId_.getInt(index);
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @param index The index to set the value at.
       * @param value The potentialCipvId to set.
       * @return This builder for chaining.
       */
      public Builder setPotentialCipvId(
          int index, int value) {

        ensurePotentialCipvIdIsMutable();
        potentialCipvId_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @param value The potentialCipvId to add.
       * @return This builder for chaining.
       */
      public Builder addPotentialCipvId(int value) {

        ensurePotentialCipvIdIsMutable();
        potentialCipvId_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @param values The potentialCipvId to add.
       * @return This builder for chaining.
       */
      public Builder addAllPotentialCipvId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePotentialCipvIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, potentialCipvId_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 potential_cipv_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPotentialCipvId() {
        potentialCipvId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.CIPVInfo)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.CIPVInfo)
    private static final apollo.perception.PerceptionObstacleOuterClass.CIPVInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.CIPVInfo();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CIPVInfo>
        PARSER = new com.google.protobuf.AbstractParser<CIPVInfo>() {
      @java.lang.Override
      public CIPVInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CIPVInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CIPVInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PerceptionObstaclesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.perception.PerceptionObstacles)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> 
        getPerceptionObstacleList();
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index);
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    int getPerceptionObstacleCount();
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
        getPerceptionObstacleOrBuilderList();
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
        int index);

    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     * @return The header.
     */
    apollo.common.HeaderOuterClass.Header getHeader();
    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     */
    apollo.common.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
     * @return Whether the errorCode field is set.
     */
    boolean hasErrorCode();
    /**
     * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
     * @return The errorCode.
     */
    apollo.common.ErrorCodeOuterClass.ErrorCode getErrorCode();

    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     * @return Whether the laneMarker field is set.
     */
    boolean hasLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     * @return The laneMarker.
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getLaneMarker();
    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder getLaneMarkerOrBuilder();

    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     * @return Whether the cipvInfo field is set.
     */
    boolean hasCipvInfo();
    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     * @return The cipvInfo.
     */
    apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getCipvInfo();
    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     */
    apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder getCipvInfoOrBuilder();
  }
  /**
   * Protobuf type {@code apollo.perception.PerceptionObstacles}
   */
  public static final class PerceptionObstacles extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:apollo.perception.PerceptionObstacles)
      PerceptionObstaclesOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PerceptionObstacles.class.getName());
    }
    // Use PerceptionObstacles.newBuilder() to construct.
    private PerceptionObstacles(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PerceptionObstacles() {
      perceptionObstacle_ = java.util.Collections.emptyList();
      errorCode_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacles_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacles_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.class, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.Builder.class);
    }

    private int bitField0_;
    public static final int PERCEPTION_OBSTACLE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> perceptionObstacle_;
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> getPerceptionObstacleList() {
      return perceptionObstacle_;
    }
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
        getPerceptionObstacleOrBuilderList() {
      return perceptionObstacle_;
    }
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public int getPerceptionObstacleCount() {
      return perceptionObstacle_.size();
    }
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index) {
      return perceptionObstacle_.get(index);
    }
    /**
     * <pre>
     * An array of obstacles
     * </pre>
     *
     * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
        int index) {
      return perceptionObstacle_.get(index);
    }

    public static final int HEADER_FIELD_NUMBER = 2;
    private apollo.common.HeaderOuterClass.Header header_;
    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     * @return The header.
     */
    @java.lang.Override
    public apollo.common.HeaderOuterClass.Header getHeader() {
      return header_ == null ? apollo.common.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <pre>
     * Header
     * </pre>
     *
     * <code>optional .apollo.common.Header header = 2;</code>
     */
    @java.lang.Override
    public apollo.common.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return header_ == null ? apollo.common.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }

    public static final int ERROR_CODE_FIELD_NUMBER = 3;
    private int errorCode_ = 0;
    /**
     * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
     * @return Whether the errorCode field is set.
     */
    @java.lang.Override public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
     * @return The errorCode.
     */
    @java.lang.Override public apollo.common.ErrorCodeOuterClass.ErrorCode getErrorCode() {
      apollo.common.ErrorCodeOuterClass.ErrorCode result = apollo.common.ErrorCodeOuterClass.ErrorCode.forNumber(errorCode_);
      return result == null ? apollo.common.ErrorCodeOuterClass.ErrorCode.OK : result;
    }

    public static final int LANE_MARKER_FIELD_NUMBER = 4;
    private apollo.perception.PerceptionObstacleOuterClass.LaneMarkers laneMarker_;
    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     * @return Whether the laneMarker field is set.
     */
    @java.lang.Override
    public boolean hasLaneMarker() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     * @return The laneMarker.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getLaneMarker() {
      return laneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance() : laneMarker_;
    }
    /**
     * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder getLaneMarkerOrBuilder() {
      return laneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance() : laneMarker_;
    }

    public static final int CIPV_INFO_FIELD_NUMBER = 5;
    private apollo.perception.PerceptionObstacleOuterClass.CIPVInfo cipvInfo_;
    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     * @return Whether the cipvInfo field is set.
     */
    @java.lang.Override
    public boolean hasCipvInfo() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     * @return The cipvInfo.
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getCipvInfo() {
      return cipvInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance() : cipvInfo_;
    }
    /**
     * <pre>
     * Closest In Path Vehicle (CIPV)
     * </pre>
     *
     * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
     */
    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder getCipvInfoOrBuilder() {
      return cipvInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance() : cipvInfo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < perceptionObstacle_.size(); i++) {
        output.writeMessage(1, perceptionObstacle_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getHeader());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(3, errorCode_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getLaneMarker());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getCipvInfo());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < perceptionObstacle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, perceptionObstacle_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHeader());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, errorCode_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLaneMarker());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCipvInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles)) {
        return super.equals(obj);
      }
      apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles other = (apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles) obj;

      if (!getPerceptionObstacleList()
          .equals(other.getPerceptionObstacleList())) return false;
      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasErrorCode() != other.hasErrorCode()) return false;
      if (hasErrorCode()) {
        if (errorCode_ != other.errorCode_) return false;
      }
      if (hasLaneMarker() != other.hasLaneMarker()) return false;
      if (hasLaneMarker()) {
        if (!getLaneMarker()
            .equals(other.getLaneMarker())) return false;
      }
      if (hasCipvInfo() != other.hasCipvInfo()) return false;
      if (hasCipvInfo()) {
        if (!getCipvInfo()
            .equals(other.getCipvInfo())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPerceptionObstacleCount() > 0) {
        hash = (37 * hash) + PERCEPTION_OBSTACLE_FIELD_NUMBER;
        hash = (53 * hash) + getPerceptionObstacleList().hashCode();
      }
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasErrorCode()) {
        hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
        hash = (53 * hash) + errorCode_;
      }
      if (hasLaneMarker()) {
        hash = (37 * hash) + LANE_MARKER_FIELD_NUMBER;
        hash = (53 * hash) + getLaneMarker().hashCode();
      }
      if (hasCipvInfo()) {
        hash = (37 * hash) + CIPV_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getCipvInfo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.perception.PerceptionObstacles}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.perception.PerceptionObstacles)
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstaclesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacles_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacles_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.class, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.Builder.class);
      }

      // Construct using apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPerceptionObstacleFieldBuilder();
          getHeaderFieldBuilder();
          getLaneMarkerFieldBuilder();
          getCipvInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacle_ = java.util.Collections.emptyList();
        } else {
          perceptionObstacle_ = null;
          perceptionObstacleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        errorCode_ = 0;
        laneMarker_ = null;
        if (laneMarkerBuilder_ != null) {
          laneMarkerBuilder_.dispose();
          laneMarkerBuilder_ = null;
        }
        cipvInfo_ = null;
        if (cipvInfoBuilder_ != null) {
          cipvInfoBuilder_.dispose();
          cipvInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return apollo.perception.PerceptionObstacleOuterClass.internal_static_apollo_perception_PerceptionObstacles_descriptor;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles getDefaultInstanceForType() {
        return apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.getDefaultInstance();
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles build() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles buildPartial() {
        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles result = new apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles result) {
        if (perceptionObstacleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            perceptionObstacle_ = java.util.Collections.unmodifiableList(perceptionObstacle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.perceptionObstacle_ = perceptionObstacle_;
        } else {
          result.perceptionObstacle_ = perceptionObstacleBuilder_.build();
        }
      }

      private void buildPartial0(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.header_ = headerBuilder_ == null
              ? header_
              : headerBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.errorCode_ = errorCode_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.laneMarker_ = laneMarkerBuilder_ == null
              ? laneMarker_
              : laneMarkerBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.cipvInfo_ = cipvInfoBuilder_ == null
              ? cipvInfo_
              : cipvInfoBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles) {
          return mergeFrom((apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles other) {
        if (other == apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles.getDefaultInstance()) return this;
        if (perceptionObstacleBuilder_ == null) {
          if (!other.perceptionObstacle_.isEmpty()) {
            if (perceptionObstacle_.isEmpty()) {
              perceptionObstacle_ = other.perceptionObstacle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePerceptionObstacleIsMutable();
              perceptionObstacle_.addAll(other.perceptionObstacle_);
            }
            onChanged();
          }
        } else {
          if (!other.perceptionObstacle_.isEmpty()) {
            if (perceptionObstacleBuilder_.isEmpty()) {
              perceptionObstacleBuilder_.dispose();
              perceptionObstacleBuilder_ = null;
              perceptionObstacle_ = other.perceptionObstacle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              perceptionObstacleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPerceptionObstacleFieldBuilder() : null;
            } else {
              perceptionObstacleBuilder_.addAllMessages(other.perceptionObstacle_);
            }
          }
        }
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasLaneMarker()) {
          mergeLaneMarker(other.getLaneMarker());
        }
        if (other.hasCipvInfo()) {
          mergeCipvInfo(other.getCipvInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle m =
                    input.readMessage(
                        apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.parser(),
                        extensionRegistry);
                if (perceptionObstacleBuilder_ == null) {
                  ensurePerceptionObstacleIsMutable();
                  perceptionObstacle_.add(m);
                } else {
                  perceptionObstacleBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int tmpRaw = input.readEnum();
                apollo.common.ErrorCodeOuterClass.ErrorCode tmpValue =
                    apollo.common.ErrorCodeOuterClass.ErrorCode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  errorCode_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getLaneMarkerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getCipvInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> perceptionObstacle_ =
        java.util.Collections.emptyList();
      private void ensurePerceptionObstacleIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          perceptionObstacle_ = new java.util.ArrayList<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle>(perceptionObstacle_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> perceptionObstacleBuilder_;

      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> getPerceptionObstacleList() {
        if (perceptionObstacleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(perceptionObstacle_);
        } else {
          return perceptionObstacleBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public int getPerceptionObstacleCount() {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.size();
        } else {
          return perceptionObstacleBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle getPerceptionObstacle(int index) {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.get(index);
        } else {
          return perceptionObstacleBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder setPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.set(index, value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder setPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.set(index, builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle value) {
        if (perceptionObstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(index, value);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addPerceptionObstacle(
          int index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder builderForValue) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.add(index, builderForValue.build());
          onChanged();
        } else {
          perceptionObstacleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder addAllPerceptionObstacle(
          java.lang.Iterable<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle> values) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, perceptionObstacle_);
          onChanged();
        } else {
          perceptionObstacleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder clearPerceptionObstacle() {
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          perceptionObstacleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public Builder removePerceptionObstacle(int index) {
        if (perceptionObstacleBuilder_ == null) {
          ensurePerceptionObstacleIsMutable();
          perceptionObstacle_.remove(index);
          onChanged();
        } else {
          perceptionObstacleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder getPerceptionObstacleBuilder(
          int index) {
        return getPerceptionObstacleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder getPerceptionObstacleOrBuilder(
          int index) {
        if (perceptionObstacleBuilder_ == null) {
          return perceptionObstacle_.get(index);  } else {
          return perceptionObstacleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<? extends apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
           getPerceptionObstacleOrBuilderList() {
        if (perceptionObstacleBuilder_ != null) {
          return perceptionObstacleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(perceptionObstacle_);
        }
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder addPerceptionObstacleBuilder() {
        return getPerceptionObstacleFieldBuilder().addBuilder(
            apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance());
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder addPerceptionObstacleBuilder(
          int index) {
        return getPerceptionObstacleFieldBuilder().addBuilder(
            index, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.getDefaultInstance());
      }
      /**
       * <pre>
       * An array of obstacles
       * </pre>
       *
       * <code>repeated .apollo.perception.PerceptionObstacle perception_obstacle = 1;</code>
       */
      public java.util.List<apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder> 
           getPerceptionObstacleBuilderList() {
        return getPerceptionObstacleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder> 
          getPerceptionObstacleFieldBuilder() {
        if (perceptionObstacleBuilder_ == null) {
          perceptionObstacleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacle.Builder, apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacleOrBuilder>(
                  perceptionObstacle_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          perceptionObstacle_ = null;
        }
        return perceptionObstacleBuilder_;
      }

      private apollo.common.HeaderOuterClass.Header header_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.HeaderOuterClass.Header, apollo.common.HeaderOuterClass.Header.Builder, apollo.common.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       * @return The header.
       */
      public apollo.common.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? apollo.common.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public Builder setHeader(apollo.common.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public Builder setHeader(
          apollo.common.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public Builder mergeHeader(apollo.common.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            header_ != null &&
            header_ != apollo.common.HeaderOuterClass.Header.getDefaultInstance()) {
            getHeaderBuilder().mergeFrom(value);
          } else {
            header_ = value;
          }
        } else {
          headerBuilder_.mergeFrom(value);
        }
        if (header_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public Builder clearHeader() {
        bitField0_ = (bitField0_ & ~0x00000002);
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public apollo.common.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      public apollo.common.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              apollo.common.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <pre>
       * Header
       * </pre>
       *
       * <code>optional .apollo.common.Header header = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.common.HeaderOuterClass.Header, apollo.common.HeaderOuterClass.Header.Builder, apollo.common.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.common.HeaderOuterClass.Header, apollo.common.HeaderOuterClass.Header.Builder, apollo.common.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private int errorCode_ = 0;
      /**
       * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
       * @return Whether the errorCode field is set.
       */
      @java.lang.Override public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
       * @return The errorCode.
       */
      @java.lang.Override
      public apollo.common.ErrorCodeOuterClass.ErrorCode getErrorCode() {
        apollo.common.ErrorCodeOuterClass.ErrorCode result = apollo.common.ErrorCodeOuterClass.ErrorCode.forNumber(errorCode_);
        return result == null ? apollo.common.ErrorCodeOuterClass.ErrorCode.OK : result;
      }
      /**
       * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
       * @param value The errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCode(apollo.common.ErrorCodeOuterClass.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        errorCode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.common.ErrorCode error_code = 3 [default = OK];</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errorCode_ = 0;
        onChanged();
        return this;
      }

      private apollo.perception.PerceptionObstacleOuterClass.LaneMarkers laneMarker_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarkers, apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder> laneMarkerBuilder_;
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       * @return Whether the laneMarker field is set.
       */
      public boolean hasLaneMarker() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       * @return The laneMarker.
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers getLaneMarker() {
        if (laneMarkerBuilder_ == null) {
          return laneMarker_ == null ? apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance() : laneMarker_;
        } else {
          return laneMarkerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public Builder setLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers value) {
        if (laneMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          laneMarker_ = value;
        } else {
          laneMarkerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public Builder setLaneMarker(
          apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder builderForValue) {
        if (laneMarkerBuilder_ == null) {
          laneMarker_ = builderForValue.build();
        } else {
          laneMarkerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public Builder mergeLaneMarker(apollo.perception.PerceptionObstacleOuterClass.LaneMarkers value) {
        if (laneMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            laneMarker_ != null &&
            laneMarker_ != apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance()) {
            getLaneMarkerBuilder().mergeFrom(value);
          } else {
            laneMarker_ = value;
          }
        } else {
          laneMarkerBuilder_.mergeFrom(value);
        }
        if (laneMarker_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public Builder clearLaneMarker() {
        bitField0_ = (bitField0_ & ~0x00000008);
        laneMarker_ = null;
        if (laneMarkerBuilder_ != null) {
          laneMarkerBuilder_.dispose();
          laneMarkerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder getLaneMarkerBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLaneMarkerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder getLaneMarkerOrBuilder() {
        if (laneMarkerBuilder_ != null) {
          return laneMarkerBuilder_.getMessageOrBuilder();
        } else {
          return laneMarker_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.getDefaultInstance() : laneMarker_;
        }
      }
      /**
       * <code>optional .apollo.perception.LaneMarkers lane_marker = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.LaneMarkers, apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder> 
          getLaneMarkerFieldBuilder() {
        if (laneMarkerBuilder_ == null) {
          laneMarkerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.LaneMarkers, apollo.perception.PerceptionObstacleOuterClass.LaneMarkers.Builder, apollo.perception.PerceptionObstacleOuterClass.LaneMarkersOrBuilder>(
                  getLaneMarker(),
                  getParentForChildren(),
                  isClean());
          laneMarker_ = null;
        }
        return laneMarkerBuilder_;
      }

      private apollo.perception.PerceptionObstacleOuterClass.CIPVInfo cipvInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.CIPVInfo, apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder, apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder> cipvInfoBuilder_;
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       * @return Whether the cipvInfo field is set.
       */
      public boolean hasCipvInfo() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       * @return The cipvInfo.
       */
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo getCipvInfo() {
        if (cipvInfoBuilder_ == null) {
          return cipvInfo_ == null ? apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance() : cipvInfo_;
        } else {
          return cipvInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public Builder setCipvInfo(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo value) {
        if (cipvInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipvInfo_ = value;
        } else {
          cipvInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public Builder setCipvInfo(
          apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder builderForValue) {
        if (cipvInfoBuilder_ == null) {
          cipvInfo_ = builderForValue.build();
        } else {
          cipvInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public Builder mergeCipvInfo(apollo.perception.PerceptionObstacleOuterClass.CIPVInfo value) {
        if (cipvInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            cipvInfo_ != null &&
            cipvInfo_ != apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance()) {
            getCipvInfoBuilder().mergeFrom(value);
          } else {
            cipvInfo_ = value;
          }
        } else {
          cipvInfoBuilder_.mergeFrom(value);
        }
        if (cipvInfo_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public Builder clearCipvInfo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cipvInfo_ = null;
        if (cipvInfoBuilder_ != null) {
          cipvInfoBuilder_.dispose();
          cipvInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder getCipvInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getCipvInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      public apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder getCipvInfoOrBuilder() {
        if (cipvInfoBuilder_ != null) {
          return cipvInfoBuilder_.getMessageOrBuilder();
        } else {
          return cipvInfo_ == null ?
              apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.getDefaultInstance() : cipvInfo_;
        }
      }
      /**
       * <pre>
       * Closest In Path Vehicle (CIPV)
       * </pre>
       *
       * <code>optional .apollo.perception.CIPVInfo cipv_info = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          apollo.perception.PerceptionObstacleOuterClass.CIPVInfo, apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder, apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder> 
          getCipvInfoFieldBuilder() {
        if (cipvInfoBuilder_ == null) {
          cipvInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              apollo.perception.PerceptionObstacleOuterClass.CIPVInfo, apollo.perception.PerceptionObstacleOuterClass.CIPVInfo.Builder, apollo.perception.PerceptionObstacleOuterClass.CIPVInfoOrBuilder>(
                  getCipvInfo(),
                  getParentForChildren(),
                  isClean());
          cipvInfo_ = null;
        }
        return cipvInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:apollo.perception.PerceptionObstacles)
    }

    // @@protoc_insertion_point(class_scope:apollo.perception.PerceptionObstacles)
    private static final apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles();
    }

    public static apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PerceptionObstacles>
        PARSER = new com.google.protobuf.AbstractParser<PerceptionObstacles>() {
      @java.lang.Override
      public PerceptionObstacles parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PerceptionObstacles> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PerceptionObstacles> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public apollo.perception.PerceptionObstacleOuterClass.PerceptionObstacles getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_BBox2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_BBox2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_LightStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_LightStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_V2XInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_V2XInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_SensorMeasurement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_SensorMeasurement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_Trajectory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_Trajectory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_DebugMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_DebugMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_PerceptionObstacle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_PerceptionObstacle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_LaneMarker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_LaneMarker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_LaneMarkers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_LaneMarkers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_CIPVInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_CIPVInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_perception_PerceptionObstacles_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_apollo_perception_PerceptionObstacles_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2modules/perception/proto/perception_ob" +
      "stacle.proto\022\021apollo.perception\032%modules" +
      "/common/proto/error_code.proto\032#modules/" +
      "common/proto/geometry.proto\032!modules/com" +
      "mon/proto/header.proto\032$modules/common/p" +
      "roto/pnc_point.proto\032 modules/map/proto/" +
      "map_lane.proto\"@\n\006BBox2D\022\014\n\004xmin\030\001 \001(\001\022\014" +
      "\n\004ymin\030\002 \001(\001\022\014\n\004xmax\030\003 \001(\001\022\014\n\004ymax\030\004 \001(\001" +
      "\"\257\001\n\013LightStatus\022\025\n\rbrake_visible\030\001 \001(\001\022" +
      "\027\n\017brake_switch_on\030\002 \001(\001\022\031\n\021left_turn_vi" +
      "sible\030\003 \001(\001\022\033\n\023left_turn_switch_on\030\004 \001(\001" +
      "\022\032\n\022right_turn_visible\030\005 \001(\001\022\034\n\024right_tu" +
      "rn_switch_on\030\006 \001(\001\"\203\001\n\016V2XInformation\022;\n" +
      "\010v2x_type\030\001 \003(\0162).apollo.perception.V2XI" +
      "nformation.V2XType\"4\n\007V2XType\022\010\n\004NONE\020\000\022" +
      "\017\n\013ZOMBIES_CAR\020\001\022\016\n\nBLIND_ZONE\020\002\"\372\002\n\021Sen" +
      "sorMeasurement\022\021\n\tsensor_id\030\001 \001(\t\022\n\n\002id\030" +
      "\002 \001(\005\022(\n\010position\030\003 \001(\0132\026.apollo.common." +
      "Point3D\022\r\n\005theta\030\004 \001(\001\022\016\n\006length\030\005 \001(\001\022\r" +
      "\n\005width\030\006 \001(\001\022\016\n\006height\030\007 \001(\001\022(\n\010velocit" +
      "y\030\010 \001(\0132\026.apollo.common.Point3D\0228\n\004type\030" +
      "\t \001(\0162*.apollo.perception.PerceptionObst" +
      "acle.Type\022?\n\010sub_type\030\n \001(\0162-.apollo.per" +
      "ception.PerceptionObstacle.SubType\022\021\n\tti" +
      "mestamp\030\013 \001(\001\022&\n\003box\030\014 \001(\0132\031.apollo.perc" +
      "eption.BBox2D\"[\n\nTrajectory\022\023\n\013probabili" +
      "ty\030\001 \001(\001\0228\n\020trajectory_point\030\002 \003(\0132\036.apo" +
      "llo.common.TrajectoryPoint\"A\n\014DebugMessa" +
      "ge\0221\n\ntrajectory\030\001 \003(\0132\035.apollo.percepti" +
      "on.Trajectory\"\304\014\n\022PerceptionObstacle\022\n\n\002" +
      "id\030\001 \001(\005\022(\n\010position\030\002 \001(\0132\026.apollo.comm" +
      "on.Point3D\022\r\n\005theta\030\003 \001(\001\022(\n\010velocity\030\004 " +
      "\001(\0132\026.apollo.common.Point3D\022\016\n\006length\030\005 " +
      "\001(\001\022\r\n\005width\030\006 \001(\001\022\016\n\006height\030\007 \001(\001\022-\n\rpo" +
      "lygon_point\030\010 \003(\0132\026.apollo.common.Point3" +
      "D\022\025\n\rtracking_time\030\t \001(\001\0228\n\004type\030\n \001(\0162*" +
      ".apollo.perception.PerceptionObstacle.Ty" +
      "pe\022\021\n\ttimestamp\030\013 \001(\001\022\027\n\013point_cloud\030\014 \003" +
      "(\001B\002\020\001\022\026\n\nconfidence\030\r \001(\001B\002\030\001\022Q\n\017confid" +
      "ence_type\030\016 \001(\01624.apollo.perception.Perc" +
      "eptionObstacle.ConfidenceTypeB\002\030\001\022)\n\005dro" +
      "ps\030\017 \003(\0132\026.apollo.common.Point3DB\002\030\001\022,\n\014" +
      "acceleration\030\020 \001(\0132\026.apollo.common.Point" +
      "3D\022,\n\014anchor_point\030\021 \001(\0132\026.apollo.common" +
      ".Point3D\022)\n\006bbox2d\030\022 \001(\0132\031.apollo.percep" +
      "tion.BBox2D\022?\n\010sub_type\030\023 \001(\0162-.apollo.p" +
      "erception.PerceptionObstacle.SubType\022:\n\014" +
      "measurements\030\024 \003(\0132$.apollo.perception.S" +
      "ensorMeasurement\022 \n\023height_above_ground\030" +
      "\025 \001(\001:\003nan\022\037\n\023position_covariance\030\026 \003(\001B" +
      "\002\020\001\022\037\n\023velocity_covariance\030\027 \003(\001B\002\020\001\022#\n\027" +
      "acceleration_covariance\030\030 \003(\001B\002\020\001\0224\n\014lig" +
      "ht_status\030\031 \001(\0132\036.apollo.perception.Ligh" +
      "tStatus\022,\n\003msg\030\032 \001(\0132\037.apollo.perception" +
      ".DebugMessage\022J\n\006source\030\033 \001(\0162,.apollo.p" +
      "erception.PerceptionObstacle.Source:\014HOS" +
      "T_VEHICLE\0223\n\010v2x_info\030\034 \001(\0132!.apollo.per" +
      "ception.V2XInformation\022\031\n\021object_confide" +
      "nce\030\035 \001(\001\"i\n\004Type\022\013\n\007UNKNOWN\020\000\022\023\n\017UNKNOW" +
      "N_MOVABLE\020\001\022\025\n\021UNKNOWN_UNMOVABLE\020\002\022\016\n\nPE" +
      "DESTRIAN\020\003\022\013\n\007BICYCLE\020\004\022\013\n\007VEHICLE\020\005\"R\n\016" +
      "ConfidenceType\022\026\n\022CONFIDENCE_UNKNOWN\020\000\022\022" +
      "\n\016CONFIDENCE_CNN\020\001\022\024\n\020CONFIDENCE_RADAR\020\002" +
      "\"\334\001\n\007SubType\022\016\n\nST_UNKNOWN\020\000\022\026\n\022ST_UNKNO" +
      "WN_MOVABLE\020\001\022\030\n\024ST_UNKNOWN_UNMOVABLE\020\002\022\n" +
      "\n\006ST_CAR\020\003\022\n\n\006ST_VAN\020\004\022\014\n\010ST_TRUCK\020\005\022\n\n\006" +
      "ST_BUS\020\006\022\016\n\nST_CYCLIST\020\007\022\023\n\017ST_MOTORCYCL" +
      "IST\020\010\022\021\n\rST_TRICYCLIST\020\t\022\021\n\rST_PEDESTRIA" +
      "N\020\n\022\022\n\016ST_TRAFFICCONE\020\013\"#\n\006Source\022\020\n\014HOS" +
      "T_VEHICLE\020\000\022\007\n\003V2X\020\001\"\225\002\n\nLaneMarker\0226\n\tl" +
      "ane_type\030\001 \001(\0162#.apollo.hdmap.LaneBounda" +
      "ryType.Type\022\017\n\007quality\030\002 \001(\001\022\024\n\014model_de" +
      "gree\030\003 \001(\005\022\023\n\013c0_position\030\004 \001(\001\022\030\n\020c1_he" +
      "ading_angle\030\005 \001(\001\022\024\n\014c2_curvature\030\006 \001(\001\022" +
      "\037\n\027c3_curvature_derivative\030\007 \001(\001\022\022\n\nview" +
      "_range\030\010 \001(\001\022\027\n\017longitude_start\030\t \001(\001\022\025\n" +
      "\rlongitude_end\030\n \001(\001\"\375\001\n\013LaneMarkers\0227\n\020" +
      "left_lane_marker\030\001 \001(\0132\035.apollo.percepti" +
      "on.LaneMarker\0228\n\021right_lane_marker\030\002 \001(\013" +
      "2\035.apollo.perception.LaneMarker\022<\n\025next_" +
      "left_lane_marker\030\003 \003(\0132\035.apollo.percepti" +
      "on.LaneMarker\022=\n\026next_right_lane_marker\030" +
      "\004 \003(\0132\035.apollo.perception.LaneMarker\"6\n\010" +
      "CIPVInfo\022\017\n\007cipv_id\030\001 \001(\005\022\031\n\021potential_c" +
      "ipv_id\030\002 \003(\005\"\227\002\n\023PerceptionObstacles\022B\n\023" +
      "perception_obstacle\030\001 \003(\0132%.apollo.perce" +
      "ption.PerceptionObstacle\022%\n\006header\030\002 \001(\013" +
      "2\025.apollo.common.Header\0220\n\nerror_code\030\003 " +
      "\001(\0162\030.apollo.common.ErrorCode:\002OK\0223\n\013lan" +
      "e_marker\030\004 \001(\0132\036.apollo.perception.LaneM" +
      "arkers\022.\n\tcipv_info\030\005 \001(\0132\033.apollo.perce" +
      "ption.CIPVInfo"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          apollo.common.ErrorCodeOuterClass.getDescriptor(),
          apollo.common.Geometry.getDescriptor(),
          apollo.common.HeaderOuterClass.getDescriptor(),
          apollo.common.PncPoint.getDescriptor(),
          apollo.hdmap.MapLane.getDescriptor(),
        });
    internal_static_apollo_perception_BBox2D_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_apollo_perception_BBox2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_BBox2D_descriptor,
        new java.lang.String[] { "Xmin", "Ymin", "Xmax", "Ymax", });
    internal_static_apollo_perception_LightStatus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_apollo_perception_LightStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_LightStatus_descriptor,
        new java.lang.String[] { "BrakeVisible", "BrakeSwitchOn", "LeftTurnVisible", "LeftTurnSwitchOn", "RightTurnVisible", "RightTurnSwitchOn", });
    internal_static_apollo_perception_V2XInformation_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_apollo_perception_V2XInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_V2XInformation_descriptor,
        new java.lang.String[] { "V2XType", });
    internal_static_apollo_perception_SensorMeasurement_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_apollo_perception_SensorMeasurement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_SensorMeasurement_descriptor,
        new java.lang.String[] { "SensorId", "Id", "Position", "Theta", "Length", "Width", "Height", "Velocity", "Type", "SubType", "Timestamp", "Box", });
    internal_static_apollo_perception_Trajectory_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_apollo_perception_Trajectory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_Trajectory_descriptor,
        new java.lang.String[] { "Probability", "TrajectoryPoint", });
    internal_static_apollo_perception_DebugMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_apollo_perception_DebugMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_DebugMessage_descriptor,
        new java.lang.String[] { "Trajectory", });
    internal_static_apollo_perception_PerceptionObstacle_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_apollo_perception_PerceptionObstacle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_PerceptionObstacle_descriptor,
        new java.lang.String[] { "Id", "Position", "Theta", "Velocity", "Length", "Width", "Height", "PolygonPoint", "TrackingTime", "Type", "Timestamp", "PointCloud", "Confidence", "ConfidenceType", "Drops", "Acceleration", "AnchorPoint", "Bbox2D", "SubType", "Measurements", "HeightAboveGround", "PositionCovariance", "VelocityCovariance", "AccelerationCovariance", "LightStatus", "Msg", "Source", "V2XInfo", "ObjectConfidence", });
    internal_static_apollo_perception_LaneMarker_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_apollo_perception_LaneMarker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_LaneMarker_descriptor,
        new java.lang.String[] { "LaneType", "Quality", "ModelDegree", "C0Position", "C1HeadingAngle", "C2Curvature", "C3CurvatureDerivative", "ViewRange", "LongitudeStart", "LongitudeEnd", });
    internal_static_apollo_perception_LaneMarkers_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_apollo_perception_LaneMarkers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_LaneMarkers_descriptor,
        new java.lang.String[] { "LeftLaneMarker", "RightLaneMarker", "NextLeftLaneMarker", "NextRightLaneMarker", });
    internal_static_apollo_perception_CIPVInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_apollo_perception_CIPVInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_CIPVInfo_descriptor,
        new java.lang.String[] { "CipvId", "PotentialCipvId", });
    internal_static_apollo_perception_PerceptionObstacles_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_apollo_perception_PerceptionObstacles_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_apollo_perception_PerceptionObstacles_descriptor,
        new java.lang.String[] { "PerceptionObstacle", "Header", "ErrorCode", "LaneMarker", "CipvInfo", });
    descriptor.resolveAllFeaturesImmutable();
    apollo.common.ErrorCodeOuterClass.getDescriptor();
    apollo.common.Geometry.getDescriptor();
    apollo.common.HeaderOuterClass.getDescriptor();
    apollo.common.PncPoint.getDescriptor();
    apollo.hdmap.MapLane.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
